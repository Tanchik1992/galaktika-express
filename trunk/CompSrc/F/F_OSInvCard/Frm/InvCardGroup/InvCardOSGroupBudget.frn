.linkform 'InvCardOSGroupBudget' prototype is 'FormOS6a' // FormGroupOS6a
.NameInList 'Инвентарная карточка группового учета ОС (для бюджетных организаций) << Россия >>'
.group 'Бюджетная организация'
.hide
.defo landscape
.p 62
.var
  wRazrKol                            : word;

  // ***** Объявление вспомогательных переменных *****
  НомерИК                             : word; // Текущий номер элемента в цикле
  НомерИК_Max                         : word; // Количество ИК

  НомерПереоценки                     : word; // Номер текущей переоценки
  НомерАмортизации                    : word; // Номер текущей амортизации
  КоличествоМесяцев                   : word;
  ГодПредыдущегоНачисления            : word;
  Начислено_с_начала_эксплуатации     : double;
  Сумма_За_Год                        : double;

  wOSSrokIspEdIzm                     : word // Равно значению настройки wGetTune('OS.SrokIspEdIzm'). Для того чтобы не читать каждый раз её из базы...

  NN                                  : word;

  КолНомер_в_ИК                       : word;

  МаксКол_Переоц_и_Аморт              : word;

  // ***** Переменные общих полей *****
  Flag                                : boolean;
  Flag_Структурное_подразделение      : boolean;
  Flag_Наименование_объекта_полное    : boolean;
  Flag_Код_ОКОФ                       : boolean;
  Flag_Материально_ответственное_лицо : boolean;
  Flag_Табельный_номер                : boolean;
  Flag_Номер_амортизационной_группы   : boolean;
  Flag_Срок_полезного_использования   : boolean;
  Flag_Счет                           : boolean;

  // Наименование объекта (полное)
  // При печати простых инвентарных карточек по текущей сложной
  // Наименование берется из вышестоящего сложного
  Наименование_объекта_полное         : string;

  // ***** Объявление массивов *****
  Массив_ИК_Количество                : array[1..2] of double; // Количество в конкретной ИК
  Массив_ИК_Наименование              : array[1..2] of string;
  Массив_ИК_Инвентарный_номер         : array[1..2] of string;
  Массив_ИК_Поступления_дата          : array[1..2] of date;
  Массив_ИК_Поступления_сумма         : array[1..2] of double;
  Массив_ИК_Первоначальная_стоимость  : array[1..2] of double; // 1-2 Первоначальная стоимость на дату принятия к бухгалтерскому учету
  Массив_ИК_КоличествоПереоценок      : array[1..2] of word;
  Массив_ИК_КоличествоАмортизаций     : array[1..2] of word;
  Массив_ИК_Выбытия_Выбыло            : array[1..2] of boolean;
  Массив_ИК_Выбытия_дата              : array[1..2] of date;
  Массив_ИК_Остаточная_стоимость      : array[1..2] of double;

  // ***** Цикл по переоценке *****
  Массив_Переоценка_Дата              : array[1..2] of date;
  Массив_Переоценка_Сумма             : array[1..2] of double;

  // ***** Цикл по амортизации *****
  Массив_Амортизация_Дата             : array[1..2] of date;
  Массив_Амортизация_СПИ              : array[1..2] of double;
  Массив_Амортизация_Сумма            : array[1..2] of double;
  Массив_Амортизация_За_Месяц         : array[1..2] of double;
  Массив_Амортизация_За_Год           : array[1..2] of double;
  Массив_Амортизация_Всего            : array[1..2] of double;
.endvar
#include funcOs.frn
end.  // funcOs.frn - вынес из файла чтобы не создавалась пустая строка перед формой
.begin
  wRazrKol := wGetTune('OS.RazrKol');

  // ***** Обнуление переменных *****
  НомерИК          := 0;
  НомерИК_Max      := 0;
  НомерПереоценки  := 0;
  НомерАмортизации := 0;
  КоличествоМесяцев := 0;
  ГодПредыдущегоНачисления := 0;
  КолНомер_в_ИК    := 0;

  МаксКол_Переоц_и_Аморт := 0;

  wOSSrokIspEdIzm := wGetTune('OS.SrokIspEdIzm'); // в месяцах = 0, в годах = 1

  // ***** Обнуление переменных проверки отличий общих полей *****
  Flag                                := true;
  Flag_Структурное_подразделение      := true;
  Flag_Наименование_объекта_полное    := true;
  Flag_Код_ОКОФ                       := true;
  Flag_Материально_ответственное_лицо := true;
  Flag_Табельный_номер                := true;
  Flag_Номер_амортизационной_группы   := true;
  Flag_Срок_полезного_использования   := true;
  Flag_Счет                           := true;

  Наименование_объекта_полное         := '';

  // ***** Обнуление массивов по таблице *****
  for (NN := 1; NN <= Count(Массив_ИК_Количество); NN := NN + 1)
  {
    Массив_ИК_Количество                [NN] := 0;
    Массив_ИК_Наименование              [NN] := '';
    Массив_ИК_Инвентарный_номер         [NN] := '';
    Массив_ИК_Поступления_дата          [NN] := date (0,0,0);
    Массив_ИК_Поступления_сумма         [NN] := 0;
    Массив_ИК_Первоначальная_стоимость  [NN] := 0;
    Массив_ИК_КоличествоПереоценок      [NN] := 0;
    Массив_ИК_КоличествоАмортизаций     [NN] := 0;
    Массив_ИК_Выбытия_Выбыло            [NN] := false;
    Массив_ИК_Выбытия_дата              [NN] := date (0,0,0);
    Массив_ИК_Остаточная_стоимость      [NN] := double(0);
  }

  // ***** Обнуление массивов переоценок *****
  for (NN := 1; NN <= Count(Массив_Переоценка_Дата); NN := NN + 1)
  {
    Массив_Переоценка_Дата              [NN] := date (0,0,0);
    Массив_Переоценка_Сумма             [NN] := double(0);
  }

  // ***** Обнуление массивов переоценок *****
  for (NN := 1; NN <= Count(Массив_Амортизация_Дата); NN := NN + 1)
  {
    Массив_Амортизация_Дата             [NN] := date (0,0,0);
    Массив_Амортизация_СПИ              [NN] := 0;
    Массив_Амортизация_Сумма            [NN] := double(0);
    Массив_Амортизация_За_Месяц         [NN] := double(0);
    Массив_Амортизация_За_Год           [NN] := double(0);
    Массив_Амортизация_Всего            [NN] := double(0);
  }
end.
.{
! ***** Заполнение массивов *****
.{ CheckEnter CycleByIK
.begin
  НомерИК     := НомерИК + 1;
  НомерИК_Max := НомерИК_Max + 1;

  // ***** Проверка отличий общих полей *****
  // Структурное подразделение
  if (Общее_Структурное_подразделение <> Структурное_подразделение)
  {
    Flag := false;
    Flag_Структурное_подразделение := false;
  }

  // Наименование объекта (полное)
  if (wTipPrint = 1)
  {
    Наименование_объекта_полное := Наименование_вышестоящего_сложного;
  }
  else
  {
    if (Наименование_объекта_полное = '')
    {
      Наименование_объекта_полное := Наименование;
    }
    else
    {
      if (Наименование_объекта_полное <> Наименование)
      {
        Flag_Наименование_объекта_полное := false;
        Наименование_объекта_полное := Наименование_объекта_полное + ', ' + Наименование;
      }
    }
  }

  // по ОКОФ
  if (Общий_Код_ОКОФ <> Код_ОКОФ)
  {
    Flag := false;
    Flag_Код_ОКОФ := false;
  }

  if (Общее_Материально_ответственное_лицо <> Материально_ответственное_лицо)
  {
    Flag := false;
    Flag_Материально_ответственное_лицо := false;
  }

  if (Общий_Табельный_номер <> Табельный_номер)
  {
    Flag := false;
    Flag_Табельный_номер := false;
  }

  if (Общий_Номер_амортизационной_группы <> Номер_амортизационной_группы)
  {
    Flag := false;
    Flag_Номер_амортизационной_группы := false;
  }

  if (Общий_Срок_полезного_использования <> Срок_полезного_использования)
  {
    Flag := false;
    Flag_Срок_полезного_использования := false;
  }

  if (Общий_Счет <> Счет)
  {
    Flag := false;
    Flag_Счет := false;
  }

  // ***** Заполнение массивов *****
  Массив_ИК_Количество               [НомерИК] := Количество;

  Массив_ИК_Наименование             [НомерИК] := Наименование;
  Массив_ИК_Инвентарный_номер        [НомерИК] := Инвентарный_номер;
  Массив_ИК_Поступления_дата         [НомерИК] := Поступления_дата;
  Массив_ИК_Первоначальная_стоимость [НомерИК] := Первоначальная_стоимость;

  Массив_ИК_Выбытия_Выбыло           [НомерИК] := Выбыло;
  Массив_ИК_Выбытия_дата             [НомерИК] := Выбытия_дата;
  Массив_ИК_Остаточная_стоимость     [НомерИК] := Остаточная_стоимость;
end.
.{ CheckEnter CycleByOverAppreciated
.begin
  Массив_ИК_КоличествоПереоценок [НомерИК] := Массив_ИК_КоличествоПереоценок [НомерИК] + 1;

  НомерПереоценки := НомерПереоценки + 1;
  Массив_Переоценка_Дата  [НомерПереоценки] := Переоценка_дата;
  Массив_Переоценка_Сумма [НомерПереоценки] := Переоценка_восстановительная_стоимость;
end.
.}
.begin
  КоличествоМесяцев        := 0;
  ГодПредыдущегоНачисления := 0;
  Начислено_с_начала_эксплуатации := double(0);
  Сумма_За_Год             := double(0);
end.
.{ CheckEnter CycleByAmortization
.begin
  // ***** Цикл по амортизации *****

  if(not bWriteAmortInYear) or (ГодПредыдущегоНачисления <> Year(Амортизация_Дата))
  {
    НомерАмортизации := НомерАмортизации + 1;
    Массив_ИК_КоличествоАмортизаций [НомерИК] := Массив_ИК_КоличествоАмортизаций [НомерИК] + 1;
  }

  Массив_Амортизация_Дата [НомерАмортизации] := Амортизация_Дата;
  Массив_Амортизация_СПИ  [НомерАмортизации] := Амортизация_СПИ;

  // Начислено с начала эксплуатации, руб
  Начислено_с_начала_эксплуатации := Начислено_с_начала_эксплуатации + Амортизация_Сумма;
  Массив_Амортизация_Всего [НомерАмортизации] := Начислено_с_начала_эксплуатации;

  // Амортизация за год
  if (ГодПредыдущегоНачисления = Year(Амортизация_Дата))
  {
    if (round(Амортизация_Сумма, 2) <> 0)
    {
      КоличествоМесяцев := КоличествоМесяцев + 1;
    }

    Сумма_За_Год := Сумма_За_Год + Амортизация_Сумма;
  }
  else
  { // Первый месяц года
    if (round(Амортизация_Сумма, 2) <> 0)
    {
      КоличествоМесяцев := 1;
    }
    else
    {
      КоличествоМесяцев := 0;
    }

    Сумма_За_Год := Амортизация_Сумма;
  }
  Массив_Амортизация_За_Год [НомерАмортизации] := Сумма_За_Год;

  // Амортизация за месяц
  if((not bWriteAmortInYear) or (ГодПредыдущегоНачисления <> Year(Амортизация_Дата)))
  { // Если помесячно или первый месяц года
    Массив_Амортизация_За_Месяц [НомерАмортизации] := Амортизация_Сумма;
  }
  else
  {
    Массив_Амортизация_За_Месяц [НомерАмортизации] := Сумма_За_Год / КоличествоМесяцев;
  }

  ГодПредыдущегоНачисления := Year(Амортизация_Дата);
end.
.}
.{ CheckEnter CycleByOperation
.}
.begin

  if (Массив_ИК_КоличествоПереоценок [НомерИК] <> 0) or (Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0)
  {
    if(Массив_ИК_КоличествоПереоценок [НомерИК] > Массив_ИК_КоличествоАмортизаций [НомерИК])
    {
      МаксКол_Переоц_и_Аморт := МаксКол_Переоц_и_Аморт + Массив_ИК_КоличествоПереоценок [НомерИК];
    }
    else
    {
      МаксКол_Переоц_и_Аморт := МаксКол_Переоц_и_Аморт + Массив_ИК_КоличествоАмортизаций [НомерИК];
    }
  }
  else
  { // Если не было не ни переоценок ни амортизаций то строку по этой карточке вывести нужно...
    МаксКол_Переоц_и_Аморт := МаксКол_Переоц_и_Аморт + 1;
  }
end.
.}
! ***** Вывод сообщения о отличии общих полей *****
.begin
  if (not Flag_Наименование_объекта_полное and wTipPrint <> 1)
    Message ('   В отчет выводятся карточки, у которых отличаются наименования!!!'#13 +
             'В заголовке формы наименования будут перечислены через запятую.'
             , Information + CancelButton);

  if (not Flag)
    Message ('   Т.к. значения общих полей у карточек отличаются,'#13 +
             'нижеследующие общие поля не будут заполнены:'#13 +
             if (Flag_Код_ОКОФ                       , '', ' - Код ОКОФ'#13                                        ) +
             if (Flag_Структурное_подразделение      , '', ' - Структурное подразделение'#13                       ) +
             if (Flag_Материально_ответственное_лицо , '', ' - Материально ответственное лицо'#13                  ) +
             if (Flag_Табельный_номер                , '', ' - Табельный номер материально ответственного лица'#13 ) +
             if (Flag_Счет                           , '', ' - Счет'#13                                            ) +
             if (Flag_Срок_полезного_использования   , '', ' - Срок полезного использования'#13                    )
             , Information + CancelButton);
end.
! ***** Вывод в форму *****
.fields
  // ***** Общая информация *****

  '(Метод учета: ' + Метод_Учета + ')'

  // Номер карточки - по консультации ОАП поля нет в системе, но заполнять нужно...
  '                   '

  // Дата формирования отчета равна наибольшему из периодов карточек.
  //   Причем все операции, в том числе и амортизации, ко карточке выводятся до периода
  // в котором в данный момент находится конкретная карточка...
  // от "___" _____ 200__г.
  if(LongInt(Дата_Формирования) <> 0, DateToStr(Дата_Формирования, 'DD'), '')
  if(LongInt(Дата_Формирования) <> 0, DateToStr(Дата_Формирования, 'Mon'), '')
  if(LongInt(Дата_Формирования) <> 0, DateToStr(Дата_Формирования, 'YYYY'), '')

  // Дата
  if(LongInt(Дата_Формирования) <> 0, DateToStr(Дата_Формирования, 'DD/MM/YYYY'), '')

  // Учреждение
  Наименование_организации

  // по ОКПО
  ОКПО

  // Структурное подразделение
  if (Flag_Структурное_подразделение, Общее_Структурное_подразделение, '')
  ''

  // Наименование объекта (полное)
  //   Заполняется следующим образом:
  //     Если печатаем карточки по пометке, то если у всех карточек наименование одинаковое, то выводим его один раз.
  //     Если у карточек оно отличается, то сообщаем об этом и выводим все наименования через запятую...
  //     Если печатаем все простые по текущей сложной, то выводим наименование текущей сложной...
  Наименование_объекта_полное

  // по ОКОФ
  Общий_Код_ОКОФ

  // Материально ответственное лицо
  if (Flag_Материально_ответственное_лицо, Общее_Материально_ответственное_лицо, '')
  if (Flag_Табельный_номер, Общий_Табельный_номер, '')

  // Номер амортизационной группы // Номер_амортизационной_группы
  if (Flag_Номер_амортизационной_группы, Общий_Номер_амортизационной_группы, '')

  // Срок_полезного_использования
  if (Flag_Срок_полезного_использования, SrokIspEdIzmWord (Общий_Срок_полезного_использования), '')

  // Номер счета
  if (Flag_Счет, Общий_Счет, '')
!  if (Flag_Счет, Общий_Счет + if (Flag_СубСчет, ' ' + Общий_СубСчет, '') , '') // Номер счета
.endfields
 Ш^

 Щ               ИНВЕНТАРНАЯ КАРТОЧКА ГРУППОВОГО УЧЕТА ОСНОВНЫХ СРЕДСТВ №  Д^ Э

                                                                                                                                                                                                  ┌───────────────────────────┐
                                                                                                                                                                                                  │            КОДЫ           │
                                                                                                                                                                                                  ├───────────────────────────┤
                                                                                                                                                                                     Форма по КФД │          0504032          │
                                                                                                                                                                                                  ├───────────────────────────┤
                                                               Шот " Д&& Д"  Д@~@@@@@@@@@@@@@@@@@ Д &&&& г. Ш                                                         Дата │@~@@@@@@@@@@@@@@@@@@@@@@@@@│
                                                                                                                                                                                                  ├───────────────────────────┤
   Учреждение  Е@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Е   по ОКПО │@~@@@@@@@@@@@@@@@@@@@@@@@@@│
                                                                                                                                                                                                  ├───────────────────────────┤
   Структурное подразделение  Д@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Д           │@~@@@@@@@@@@@@@@@@@@@@@@@@@│
                                                                                                                                                                                                  ├───────────────────────────┤
   Наименование объекта (полное)  Е@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Е   по ОКОФ │@~@@@@@@@@@@@@@@@@@@@@@@@@@│
                                                                                                                                                                                                  ├───────────────────────────┤
   Материально ответственное лицо  Д@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Д           │@~@@@@@@@@@@@@@@@@@@@@@@@@@│
                                                                                                                                                                                                  └───────────────────────────┘
                                               ┌───────────────────────────────┐                                            ┌───────────────────────────────┐                                 ┌───────────────────────────────┐
                  Номер амортизационной группы │@~@@@@@@@@@@@@@@@@@@@@@@@@@@@@@│               Срок полезного использования │@~@@@@@@@@@@@@@@@@@@@@@@@@@@@@@│                     Номер счета │@~@@@@@@@@@@@@@@@@@@@@@@@@@@@@@│
                                               └───────────────────────────────┘                                            └───────────────────────────────┘                                 └───────────────────────────────┘
.fields
 // Заголовок
 // Амортизация (дата окончания начисления)
 ''
.endfields
   ────────────────────────────────────────────────────────┬────────────────────────────────────────────────╥─────────────────────────────────────────────────────────────────────╔═══════════════════════════════════════════╗
      Первоначальная (восстановительная) стоимость, руб    │             Результаты переоценки              ║       Амортизация                       (дата окончания начисления) ║@~@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@║
   ────────────────────────────┬───────────────────────────┼──────────┬─────────┬───────────────────────────╫─────────────────────────┬───────────────────────────────────────────╚═══════════════════════════╤═══════════════╝
                               │                           │          │  номер  │           Сумма,          ║         норма, %        │                 сумма, руб                │         начислено         │      Дата
            за единицу         │     на группу объектов    │   дата   │  ж / о  │            руб            ╟────────────┬────────────┼─────────────────────┬─────────────────────┤          с начала         │ (месяц и год)
                               │                           │          │         │                           ║  за месяц  │   за год   │       за месяц      │       за год        │        эксплуатации       │   начисления
   ────────────────────────────┼───────────────────────────┼──────────┼─────────┼───────────────────────────╫────────────┼────────────┼─────────────────────┼─────────────────────┼───────────────────────────┼────────────────
                 1             │             2             │     3    │    4    │             5             ║      6     │      7     │          8          │          9          │             10            │      11
.begin
  НомерИК := 1
  КолНомер_в_ИК := 0;
  НомерПереоценки  := 0;
  НомерАмортизации := 0;
end.
.{While (НомерИК <= НомерИК_Max)
.[h skip
   ────────────────────────────┬───────────────────────────┬──────────┬─────────┬───────────────────────────╥────────────┬────────────┬─────────────────────┬─────────────────────┬───────────────────────────┬────────────────
                 1             │             2             │     3    │    4    │             5             ║      6     │      7     │          8          │          9          │             10            │      11
   ────────────────────────────┼───────────────────────────┼──────────┼─────────┼───────────────────────────╫────────────┼────────────┼─────────────────────┼─────────────────────┼───────────────────────────┼────────────────
.]h
.begin
  КолНомер_в_ИК := КолНомер_в_ИК + 1;
  NN := 1;
end.
.fields
  // Таблица 1

  // * Первоначальная (восстановительная) стоимость, руб
  // 01 - за единицу
  Массив_ИК_Первоначальная_стоимость [НомерИК]

  // 02 - на группу объектов
  Массив_ИК_Первоначальная_стоимость [НомерИК] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК])

  // * Результаты переоценки (первая запись по переоценке)
  // 03 - дата
  if (((Массив_ИК_КоличествоПереоценок [НомерИК] <> 0) and (Массив_ИК_КоличествоПереоценок [НомерИК] >= NN)),
    DateToStr(Массив_Переоценка_Дата [НомерПереоценки + NN], 'DD/MM/YYYY') ,'')

  // 04 - номер ж / о
  // 05 - Сумма, руб
  // Массив_Переоценка_восстановительная_стоимость
  if (((Массив_ИК_КоличествоПереоценок [НомерИК] <> 0) and (Массив_ИК_КоличествоПереоценок [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(Массив_Переоценка_Сумма [НомерПереоценки + NN] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]), 2), '')

  // * Амортизация (первая запись по амортизации)
  // норма, %
  // 06 - за месяц
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(100 / (Массив_Амортизация_СПИ [НомерАмортизации + NN] / if(wOSSrokIspEdIzm = 0, 12, 1)) / 12, 6), '')

  // 07 - за год
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(100 / (Массив_Амортизация_СПИ [НомерАмортизации + NN] / if(wOSSrokIspEdIzm = 0, 12, 1)), 6     ), '')

  // сумма, руб
  // 08 - за месяц
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(Массив_Амортизация_За_Месяц [НомерАмортизации + NN] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]), 2)
    , '')

  // 09 - за год
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(Массив_Амортизация_За_Год [НомерАмортизации + NN] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]), 2)
    , '')

  // 10 - начислено с начала эксплуатации
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(Массив_Амортизация_Всего [НомерАмортизации + NN] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]), 2)
    , '')

  // 11 - дата (месяц и год) начисления
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    if(bWriteAmortInYear,  DateToStr(Массив_Амортизация_Дата [НомерАмортизации + NN],'MM/YYYY'),
                           DateToStr(Массив_Амортизация_Дата [НомерАмортизации + NN],'DD/MM/YYYY')
      ), '')
.endfields
   ────────────────────────────┼───────────────────────────┼──────────┼─────────┼───────────────────────────╫────────────┼────────────┼─────────────────────┼─────────────────────┼───────────────────────────┼────────────────
    &&&&&&&&&&&&&&&&&&&&&&&&.&&│&&&&&&&&&&&&&&&&&&&&&&&&.&&│@~@@@@@@@@│         │&&&&&&&&&&&&&&&&&&&&&&&&.&&║&&&&&&&&&&&&│&&&&&&&&&&&&│&&&&&&&&&&&&&&&&&&.&&│&&&&&&&&&&&&&&&&&&.&&│&&&&&&&&&&&&&&&&&&&&&&&&.&&│@~@@@@@@@@@@@@@
! ***** Цикл по переоценке *****
.{While (NN < Массив_ИК_КоличествоПереоценок [НомерИК]) or (NN < Массив_ИК_КоличествоАмортизаций [НомерИК])
.begin
 NN := NN + 1;
end.
.fields
  // * Результаты переоценки
  // 03 - дата
  if (((Массив_ИК_КоличествоПереоценок [НомерИК] <> 0) and (Массив_ИК_КоличествоПереоценок [НомерИК] >= NN)),
    DateToStr(Массив_Переоценка_Дата [НомерПереоценки + NN], 'DD/MM/YYYY') ,'')

  // 04 - номер ж / о
  // 05 - Сумма, руб
  // Массив_Переоценка_восстановительная_стоимость
  if (((Массив_ИК_КоличествоПереоценок [НомерИК] <> 0) and (Массив_ИК_КоличествоПереоценок [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(Массив_Переоценка_Сумма [НомерПереоценки + NN] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]), 2), '')

  // * Амортизация
  // норма, %
  // 06 - за месяц
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(100 / (Массив_Амортизация_СПИ [НомерАмортизации + NN] / if(wOSSrokIspEdIzm = 0, 12, 1)) / 12, 6), '')

  // 07 - за год
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(100 / (Массив_Амортизация_СПИ [НомерАмортизации + NN] / if(wOSSrokIspEdIzm = 0, 12, 1)), 6     ), '')

  // сумма, руб
  // 08 - за месяц
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(Массив_Амортизация_За_Месяц [НомерАмортизации + NN] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]), 2)
    , '')

  // 09 - за год
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(Массив_Амортизация_За_Год [НомерАмортизации + NN] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]), 2)
    , '')

  // 10 - начислено с начала эксплуатации
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    iExcelFormat.DoubleToStrFormatExcel(Массив_Амортизация_Всего [НомерАмортизации + NN] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]), 2)
    , '')

  // 11 - дата (месяц и год) начисления
  if (((Массив_ИК_КоличествоАмортизаций [НомерИК] <> 0) and (Массив_ИК_КоличествоАмортизаций [НомерИК] >= NN)),
    if(bWriteAmortInYear,  DateToStr(Массив_Амортизация_Дата [НомерАмортизации + NN],'MM/YYYY'),
                           DateToStr(Массив_Амортизация_Дата [НомерАмортизации + NN],'DD/MM/YYYY')
      ), '')
.endfields
!  ────────────────────────────┼───────────────────────────┼──────────┼─────────┼───────────────────────────╫────────────┼────────────┼─────────────────────┼─────────────────────┼───────────────────────────┼────────────────
                               │                           │@~@@@@@@@@│         │&&&&&&&&&&&&&&&&&&&&&&&&.&&║&&&&&&&&&&&&│&&&&&&&&&&&&│&&&&&&&&&&&&&&&&&&.&&│&&&&&&&&&&&&&&&&&&.&&│&&&&&&&&&&&&&&&&&&&&&&&&.&&│@~@@@@@@@@@@@@@
.}
.begin
  if (DuplicateRecordInGroupIK)
  {
    if (КолНомер_в_ИК >= Массив_ИК_Количество [НомерИК])
    {
      НомерПереоценки  := НомерПереоценки  + Массив_ИК_КоличествоПереоценок  [НомерИК];
      НомерАмортизации := НомерАмортизации + Массив_ИК_КоличествоАмортизаций [НомерИК];

      НомерИК := НомерИК + 1;
      КолНомер_в_ИК := 0;
    }
  }
  else
  {
    НомерПереоценки  := НомерПереоценки  + Массив_ИК_КоличествоПереоценок  [НомерИК];
    НомерАмортизации := НомерАмортизации + Массив_ИК_КоличествоАмортизаций [НомерИК];

    НомерИК := НомерИК + 1;
    КолНомер_в_ИК := 0;
  }
end.
.[f
   ────────────────────────────┴───────────────────────────┴──────────┴─────────┴───────────────────────────╨────────────┴────────────┴─────────────────────┴─────────────────────┴───────────────────────────┴────────────────
.]f
.}
!  ────────────────────────────┴───────────────────────────┴──────────┴─────────┴───────────────────────────╨────────────┴────────────┴─────────────────────┴─────────────────────┴───────────────────────────┴────────────────

   ──────────────────────────────────────────────┬───────────────────────────────────────────────────────────────╥───────────────────────────────────────────────────────────────╥─────────────────────────────────────────────
                     Инвентарный                 │                           Поступило                           ║                       Выбыло (передано)                       ║                   Остаток
                        номер                    ├──────────┬───────┬────────────────┬───────────────────────────╫──────────┬───────┬────────────────┬───────────────────────────╫────────────────┬────────────────────────────
                                                 │   дата   │ номер │      коли-     │           сумма,          ║   дата   │ номер │      коли-     │           сумма,          ║      коли-     │           сумма,
                                                 │          │ ж / о │     чество     │            руб            ║          │ ж / о │     чество     │            руб            ║     чество     │            руб
   ──────────────────────────────────────────────┼──────────┼───────┼────────────────┼───────────────────────────╫──────────┼───────┼────────────────┼───────────────────────────╫────────────────┼────────────────────────────
                       1                         │     2    │   3   │        4       │             5             ║     6    │   7   │        8       │             9             ║       10       │             11
.begin
  НомерИК := 1
  КолНомер_в_ИК := 0;
end.
.{While (НомерИК <= НомерИК_Max)
.[h skip
   ──────────────────────────────────────────────┬──────────┬───────┬────────────────┬───────────────────────────╥──────────┬───────┬────────────────┬───────────────────────────╥────────────────┬────────────────────────────
                       1                         │     2    │   3   │        4       │             5             ║     6    │   7   │        8       │             9             ║       10       │             11
   ──────────────────────────────────────────────┼──────────┼───────┼────────────────┼───────────────────────────╫──────────┼───────┼────────────────┼───────────────────────────╫────────────────┼────────────────────────────
.]h
.begin
  NN := 1;
  КолНомер_в_ИК := КолНомер_в_ИК + 1;
end.
.fields
  // * Таблица 2

  // 01 Инвентарный номер
  Массив_ИК_Инвентарный_номер [НомерИК]
    + if (AddNumIKToInvNum and DuplicateRecordInGroupIK and (Массив_ИК_Количество [НомерИК] > 1), ' / ' + КолНомер_в_ИК, '')

  // * Поступило
  // 02 - дата
  Массив_ИК_Поступления_дата [НомерИК]

  // 03 - номер ж / о

  // 04 - количество
  if (DuplicateRecordInGroupIK, 1, iExcelFormat.DoubleToStrFormatExcel(Массив_ИК_Количество [НомерИК], wRazrKol) )

  // 05 - сумма, руб
  Массив_ИК_Первоначальная_стоимость [НомерИК] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК])

  // * Выбыло (передано)
  // 06 - дата
  if (LongInt(Массив_ИК_Выбытия_дата [НомерИК]) = 0, '',
    DateToStr(Массив_ИК_Выбытия_дата [НомерИК],'DD/MM/YYYY'))

  // 07 - номер ж / о

  // 08 - количество
  if (Массив_ИК_Выбытия_Выбыло [НомерИК],
    iExcelFormat.DoubleToStrFormatExcel(if(DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]), wRazrKol),
    '')

  // 09 - сумма, руб
  if (Массив_ИК_Выбытия_Выбыло [НомерИК],
    iExcelFormat.DoubleToStrFormatExcel(Массив_ИК_Остаточная_стоимость [НомерИК] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]), 2),
    '')

  // * Остаток
  // 10 - количество
  if (Массив_ИК_Выбытия_Выбыло [НомерИК], 0,
    iExcelFormat.DoubleToStrFormatExcel(if(DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]), wRazrKol))

  // 11 - сумма, руб
  if (Массив_ИК_Выбытия_Выбыло [НомерИК], 0,
    Массив_ИК_Остаточная_стоимость [НомерИК] * if (DuplicateRecordInGroupIK, 1, Массив_ИК_Количество [НомерИК]))
.endfields
   ──────────────────────────────────────────────┼──────────┼───────┼────────────────┼───────────────────────────╫──────────┼───────┼────────────────┼───────────────────────────╫────────────────┼────────────────────────────
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@│@~@@@@@@@@│       │&&&&&&&&&&&&&&&&│&&&&&&&&&&&&&&&&&&&&&&&&.&&║@~@@@@@@@@│       │&&&&&&&&&&&&&&&&│&&&&&&&&&&&&&&&&&&&&&&&&.&&║&&&&&&&&&&&&&&&&│&&&&&&&&&&&&&&&&&&&&&&&&.&&
.begin
  if (DuplicateRecordInGroupIK)
  {
    if (КолНомер_в_ИК >= Массив_ИК_Количество [НомерИК])
    {
      НомерИК := НомерИК + 1;
      КолНомер_в_ИК := 0;
    }
  }
  else
  {
    НомерИК := НомерИК + 1;
  }
end.
.[f
   ──────────────────────────────────────────────┴──────────┴───────┴────────────────┴───────────────────────────╨──────────┴───────┴────────────────┴───────────────────────────╨────────────────┴────────────────────────────
.]f
.}
!  ──────────────────────────────────────────────┴──────────┴───────┴────────────────┴───────────────────────────╨──────────┴───────┴────────────────┴───────────────────────────╨────────────────┴────────────────────────────

.fields
  ЛОзаВК_Должность
  ЛОзаВК
.endfields
   Карточку заполнил  Д@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Д    ______________________      Д@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Д
                                  (должность)                       (подпись)                            (расшифровка подписи)

   " _______ "    _____________________    200 ___  г.
 Ш
.} // Конец формы
.endform
