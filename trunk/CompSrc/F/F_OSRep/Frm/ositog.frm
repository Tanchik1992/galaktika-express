//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 6.00 - Основные средства
// Итоговые ведомости наличия за период ОС (UIN 4711) и НМА (UIN 4712)
// Внимание! Существует slk-отчет в формате Excel
//------------------------------------------------------------------------------

#include Responsible.frn

#doc
Итоговые ведомости наличия за период основных средств и нематериальных активов
#end

.Form 'OsItog'
.Hide
.var
#include Fld_Amort.var
.endvar
.begin
#include Fld_Amort.vpp
end.
.Fields
#ResponsibleFields
Субъект_отчета_кратко
Субъект_отчета_имен
Субъект_отчета_родит
Субъект_отчета_дат
UserDeskRep_NRec : Comp
Организация_nRec : comp
Наименование_организации
ОКПО
Дата_с : Date
Дата_по : Date
Вид_суммы : Word
nRec_Nastr : Comp
Учитывать_износ_за_месяц : Word
nRec_NastrOs : Comp
Метод
Делитель : Double
Ф_делитель
Делитель_прописью
Формат
Валюта_метода_nRec : comp
Валюта_метода
Группировка
Сортировка
Учет_выбывших      : comp // UserDeskRep.ResComp[26]
С_учетом_выбывших_в_периоде
!---------------- FilterOS
Фильтр
!---------------- GruppaOS
Head_TempDescr_NRec : Comp
Head_TempDescr_TableCode : word // код таблицы по которой постоена данная группировка
Head_TempDescr_CRecKat   : comp // номер записи в таблице по которой построена группировка
Ветка
NeedSum1 : Boolean
Итого_верх_стоимость : Double
Итого_верх_январь : Double
Итого_верх_февраль : Double
Итого_верх_март : Double
Итого_верх_апрель : Double
Итого_верх_май : Double
Итого_верх_июнь : Double
Итого_верх_июль : Double
Итого_верх_август : Double
Итого_верх_сентябрь : Double
Итого_верх_октябрь : Double
Итого_верх_ноябрь : Double
Итого_верх_декабрь : Double
Итого_верх_начало : Double
Итого_верх_конец : Double

Итого_верх_январь_изм_стоимости : Double
Итого_верх_февраль_изм_стоимости : Double
Итого_верх_март_изм_стоимости : Double
Итого_верх_апрель_изм_стоимости : Double
Итого_верх_май_изм_стоимости : Double
Итого_верх_июнь_изм_стоимости : Double
Итого_верх_июль_изм_стоимости : Double
Итого_верх_август_изм_стоимости : Double
Итого_верх_сентябрь_изм_стоимости : Double
Итого_верх_октябрь_изм_стоимости : Double
Итого_верх_ноябрь_изм_стоимости : Double
Итого_верх_декабрь_изм_стоимости : Double
Итого_верх_начало_стоимость : Double
Итого_верх_начало_полный_износ : Double

Итого_верх_стоимость_и_выбывшие : Double
Итого_верх_январь_и_выбывшие : Double
Итого_верх_февраль_и_выбывшие : Double
Итого_верх_март_и_выбывшие : Double
Итого_верх_апрель_и_выбывшие : Double
Итого_верх_май_и_выбывшие : Double
Итого_верх_июнь_и_выбывшие : Double
Итого_верх_июль_и_выбывшие : Double
Итого_верх_август_и_выбывшие : Double
Итого_верх_сентябрь_и_выбывшие : Double
Итого_верх_октябрь_и_выбывшие : Double
Итого_верх_ноябрь_и_выбывшие : Double
Итого_верх_декабрь_и_выбывшие : Double
Итого_верх_начало_и_выбывшие : Double
Итого_верх_конец_и_выбывшие : Double

Итого_верх_январь_и_выбывшие_изм_стоимости : Double
Итого_верх_февраль_и_выбывшие_изм_стоимости : Double
Итого_верх_март_и_выбывшие_изм_стоимости : Double
Итого_верх_апрель_и_выбывшие_изм_стоимости : Double
Итого_верх_май_и_выбывшие_изм_стоимости : Double
Итого_верх_июнь_и_выбывшие_изм_стоимости : Double
Итого_верх_июль_и_выбывшие_изм_стоимости : Double
Итого_верх_август_и_выбывшие_изм_стоимости : Double
Итого_верх_сентябрь_и_выбывшие_изм_стоимости : Double
Итого_верх_октябрь_и_выбывшие_изм_стоимости : Double
Итого_верх_ноябрь_и_выбывшие_изм_стоимости : Double
Итого_верх_декабрь_и_выбывшие_изм_стоимости : Double
Итого_верх_начало_и_выбывшие_стоимость : Double
Итого_верх_начало_и_выбывшие_полный_износ : Double

!---------------- NameOS
Body_TempDescr_NRec : Comp
Тело
Номер_по_порядку : LongInt
KatOS_NRec : Comp
KatOS_cMc : Comp
Выбыл_в_текущем_периоде : boolean
Стоимость : Double
Январь : Double
Февраль : Double
Март : Double
Апрель : Double
Май : Double
Июнь : Double
Июль : Double
Август : Double
Сентябрь : Double
Октябрь : Double
Ноябрь : Double
Декабрь : Double
Начало : Double
Конец : Double

Январь_изм_стоимости : Double
Февраль_изм_стоимости : Double
Март_изм_стоимости : Double
Апрель_изм_стоимости : Double
Май_изм_стоимости : Double
Июнь_изм_стоимости : Double
Июль_изм_стоимости : Double
Август_изм_стоимости : Double
Сентябрь_изм_стоимости : Double
Октябрь_изм_стоимости : Double
Ноябрь_изм_стоимости : Double
Декабрь_изм_стоимости : Double
Начало_стоимость : Double
Начало_полный_износ : Double

!---------------- ItogOS
Tail_TempDescr_NRec : Comp
Tail_TempDescr_TableCode : word // код таблицы по которой постоена данная группировка
Tail_TempDescr_CRecKat   : comp // номер записи в таблице по которой построена группировка
Итого
Итого_стоимость : Double
Итого_январь : Double
Итого_февраль : Double
Итого_март : Double
Итого_апрель : Double
Итого_май : Double
Итого_июнь : Double
Итого_июль : Double
Итого_август : Double
Итого_сентябрь : Double
Итого_октябрь : Double
Итого_ноябрь : Double
Итого_декабрь : Double
Итого_начало : Double
Итого_конец : Double

Итого_январь_изм_стоимости : Double
Итого_февраль_изм_стоимости : Double
Итого_март_изм_стоимости : Double
Итого_апрель_изм_стоимости : Double
Итого_май_изм_стоимости : Double
Итого_июнь_изм_стоимости : Double
Итого_июль_изм_стоимости : Double
Итого_август_изм_стоимости : Double
Итого_сентябрь_изм_стоимости : Double
Итого_октябрь_изм_стоимости : Double
Итого_ноябрь_изм_стоимости : Double
Итого_декабрь_изм_стоимости : Double
Итого_начало_стоимость : Double
Итого_начало_полный_износ : Double

Итого_стоимость_и_выбывшие : Double
Итого_январь_и_выбывшие : Double
Итого_февраль_и_выбывшие : Double
Итого_март_и_выбывшие : Double
Итого_апрель_и_выбывшие : Double
Итого_май_и_выбывшие : Double
Итого_июнь_и_выбывшие : Double
Итого_июль_и_выбывшие : Double
Итого_август_и_выбывшие : Double
Итого_сентябрь_и_выбывшие : Double
Итого_октябрь_и_выбывшие : Double
Итого_ноябрь_и_выбывшие : Double
Итого_декабрь_и_выбывшие : Double
Итого_начало_и_выбывшие : Double
Итого_конец_и_выбывшие : Double

Итого_январь_и_выбывшие_изм_стоимости : Double
Итого_февраль_и_выбывшие_изм_стоимости : Double
Итого_март_и_выбывшие_изм_стоимости : Double
Итого_апрель_и_выбывшие_изм_стоимости : Double
Итого_май_и_выбывшие_изм_стоимости : Double
Итого_июнь_и_выбывшие_изм_стоимости : Double
Итого_июль_и_выбывшие_изм_стоимости : Double
Итого_август_и_выбывшие_изм_стоимости : Double
Итого_сентябрь_и_выбывшие_изм_стоимости : Double
Итого_октябрь_и_выбывшие_изм_стоимости : Double
Итого_ноябрь_и_выбывшие_изм_стоимости : Double
Итого_декабрь_и_выбывшие_изм_стоимости : Double
Итого_начало_и_выбывшие_стоимость : Double
Итого_начало_и_выбывшие_полный_износ : Double
.EndFields
! --------------------------------------------------------------------------
! Следующая строка нужна только для поддержки старого функционала,
! возможно реализованного пользователями и партнёрами.
! В формах написанных разработчиками Галактики использован новый подход.
#include ExcelFormat.frn
!
.var
  iExcelFormat : ExcelFormat;
.endvar
.{
#ResponsibleBody(OSITOG)
! --------------------------------------------------------------------------
Субъект_отчета_кратко ^
Субъект_отчета_имен   ^
Субъект_отчета_родит  ^
Субъект_отчета_дат    ^
UserDeskRep_NRec      ^
Организация_nRec      ^
Наименование_организации  ^
ОКПО                     ^
Дата_с  ^
Дата_по ^
Вид_суммы ^
Учитывать_износ_за_месяц ^
nRec_Nastr ^
nRec_NastrOs ^
Метод        ^
Делитель    ^
Ф_делитель   ^
Делитель_прописью ^
Формат            ^
Валюта_метода_nRec ^
Валюта_метода      ^
Группировка        ^
Сортировка         ^
Учет_выбывших      ^
С_учетом_выбывших_в_периоде ^

.{ CheckEnter FilterOS3
^
.}
.{
.{ CheckEnter GruppaOS3
Head_TempDescr_NRec ^
Head_TempDescr_TableCode ^
Head_TempDescr_CRecKat   ^
Ветка  ^
NeedSum1 ^
Итого_верх_стоимость ^
Итого_верх_январь ^
Итого_верх_февраль ^
Итого_верх_март ^
Итого_верх_апрель ^
Итого_верх_май ^
Итого_верх_июнь ^
Итого_верх_июль ^
Итого_верх_август ^
Итого_верх_сентябрь ^
Итого_верх_октябрь ^
Итого_верх_ноябрь ^
Итого_верх_декабрь ^
Итого_верх_начало ^
Итого_верх_конец ^

Итого_верх_январь_изм_стоимости ^
Итого_верх_февраль_изм_стоимости ^
Итого_верх_март_изм_стоимости ^
Итого_верх_апрель_изм_стоимости ^
Итого_верх_май_изм_стоимости ^
Итого_верх_июнь_изм_стоимости ^
Итого_верх_июль_изм_стоимости ^
Итого_верх_август_изм_стоимости ^
Итого_верх_сентябрь_изм_стоимости ^
Итого_верх_октябрь_изм_стоимости ^
Итого_верх_ноябрь_изм_стоимости ^
Итого_верх_декабрь_изм_стоимости ^
Итого_верх_начало_стоимость ^
Итого_верх_начало_полный_износ ^

Итого_верх_стоимость_и_выбывшие ^
Итого_верх_январь_и_выбывшие  ^
Итого_верх_февраль_и_выбывшие ^
Итого_верх_март_и_выбывшие  ^
Итого_верх_апрель_и_выбывшие  ^
Итого_верх_май_и_выбывшие  ^
Итого_верх_июнь_и_выбывшие ^
Итого_верх_июль_и_выбывшие ^
Итого_верх_август_и_выбывшие  ^
Итого_верх_сентябрь_и_выбывшие  ^
Итого_верх_октябрь_и_выбывшие   ^
Итого_верх_ноябрь_и_выбывшие    ^
Итого_верх_декабрь_и_выбывшие   ^
Итого_верх_начало_и_выбывшие    ^
Итого_верх_конец_и_выбывшие     ^

Итого_верх_январь_и_выбывшие_изм_стоимости  ^
Итого_верх_февраль_и_выбывшие_изм_стоимости ^
Итого_верх_март_и_выбывшие_изм_стоимости  ^
Итого_верх_апрель_и_выбывшие_изм_стоимости  ^
Итого_верх_май_и_выбывшие_изм_стоимости  ^
Итого_верх_июнь_и_выбывшие_изм_стоимости ^
Итого_верх_июль_и_выбывшие_изм_стоимости ^
Итого_верх_август_и_выбывшие_изм_стоимости  ^
Итого_верх_сентябрь_и_выбывшие_изм_стоимости  ^
Итого_верх_октябрь_и_выбывшие_изм_стоимости   ^
Итого_верх_ноябрь_и_выбывшие_изм_стоимости    ^
Итого_верх_декабрь_и_выбывшие_изм_стоимости   ^
Итого_верх_начало_и_выбывшие_стоимость    ^
Итого_верх_начало_и_выбывшие_полный_износ     ^
.}
.{ CheckEnter NameOS3
Body_TempDescr_NRec  ^
Тело  ^
Номер_по_порядку  ^
KatOS_NRec ^
KatOS_cMc  ^
Выбыл_в_текущем_периоде  ^
Стоимость  ^
Январь  ^
Февраль ^
Март   ^
Апрель ^
Май    ^
Июнь   ^
Июль   ^
Август   ^
Сентябрь ^
Октябрь  ^
Ноябрь   ^
Декабрь  ^
Начало  ^
Конец   ^

Январь_изм_стоимости  ^
Февраль_изм_стоимости ^
Март_изм_стоимости   ^
Апрель_изм_стоимости ^
Май_изм_стоимости    ^
Июнь_изм_стоимости   ^
Июль_изм_стоимости   ^
Август_изм_стоимости   ^
Сентябрь_изм_стоимости ^
Октябрь_изм_стоимости  ^
Ноябрь_изм_стоимости   ^
Декабрь_изм_стоимости  ^
Начало_стоимость  ^
Начало_полный_износ   ^
.}
.{ CheckEnter ItogOS3
Tail_TempDescr_NRec : ^
Tail_TempDescr_TableCode  ^
Tail_TempDescr_CRecKat    ^
Итого ^
Итого_стоимость  ^
Итого_январь     ^
Итого_февраль    ^
Итого_март       ^
Итого_апрель     ^
Итого_май        ^
Итого_июнь   ^
Итого_июль   ^
Итого_август   ^
Итого_сентябрь   ^
Итого_октябрь    ^
Итого_ноябрь     ^
Итого_декабрь    ^
Итого_начало     ^
Итого_конец      ^

Итого_январь_изм_стоимости ^
Итого_февраль_изм_стоимости ^
Итого_март_изм_стоимости ^
Итого_апрель_изм_стоимости ^
Итого_май_изм_стоимости ^
Итого_июнь_изм_стоимости ^
Итого_июль_изм_стоимости ^
Итого_август_изм_стоимости ^
Итого_сентябрь_изм_стоимости ^
Итого_октябрь_изм_стоимости ^
Итого_ноябрь_изм_стоимости ^
Итого_декабрь_изм_стоимости ^
Итого_начало_стоимость ^
Итого_начало_полный_износ ^

Итого_стоимость_и_выбывшие   ^
Итого_январь_и_выбывшие      ^
Итого_февраль_и_выбывшие     ^
Итого_март_и_выбывшие        ^
Итого_апрель_и_выбывшие      ^
Итого_май_и_выбывшие    ^
Итого_июнь_и_выбывшие   ^
Итого_июль_и_выбывшие   ^
Итого_август_и_выбывшие    ^
Итого_сентябрь_и_выбывшие  ^
Итого_октябрь_и_выбывшие   ^
Итого_ноябрь_и_выбывшие    ^
Итого_декабрь_и_выбывшие   ^
Итого_начало_и_выбывшие    ^
Итого_конец_и_выбывшие     ^

Итого_январь_и_выбывшие_изм_стоимости ^
Итого_февраль_и_выбывшие_изм_стоимости ^
Итого_март_и_выбывшие_изм_стоимости ^
Итого_апрель_и_выбывшие_изм_стоимости ^
Итого_май_и_выбывшие_изм_стоимости ^
Итого_июнь_и_выбывшие_изм_стоимости ^
Итого_июль_и_выбывшие_изм_стоимости ^
Итого_август_и_выбывшие_изм_стоимости ^
Итого_сентябрь_и_выбывшие_изм_стоимости ^
Итого_октябрь_и_выбывшие_изм_стоимости ^
Итого_ноябрь_и_выбывшие_изм_стоимости ^
Итого_декабрь_и_выбывшие_изм_стоимости ^
Итого_начало_и_выбывшие_стоимость ^
Итого_начало_и_выбывшие_полный_износ ^
.}
.}
.}
.EndForm

!=============================================================================
.LinkForm 'OsItog_01' Prototype is 'ositog'
!=============================================================================
.NameInList 'Ведомость амортизации с разбивкой по месяцам'
.Group 'Ведомости амортизации с разбивкой по месяцам'
.p 60
.defo landscape
#ResponsibleLinkVar
.[h Skip
                                                              Лист @Np@
.]h
 Ш                                                             Лист 1
.{
#ResponsibleLinkInit(OSITOG)
.Fields
CommonFormHeader
Year(Дата_с)
Метод
Ф_делитель
Делитель_прописью
Валюта_метода
Группировка
Сортировка
!---------------- FilterOS
Дата_с
Дата_по
Фильтр
!---------------- GruppaOS
Ветка
if(Итого_верх_январь=0,   '', DoubleToStr(Итого_верх_январь,   Формат))
if(Итого_верх_февраль=0,  '', DoubleToStr(Итого_верх_февраль,  Формат))
if(Итого_верх_март=0,     '', DoubleToStr(Итого_верх_март,     Формат))
if(Итого_верх_апрель=0,   '', DoubleToStr(Итого_верх_апрель,   Формат))
if(Итого_верх_май=0,      '', DoubleToStr(Итого_верх_май,      Формат))
if(Итого_верх_июнь=0,     '', DoubleToStr(Итого_верх_июнь,     Формат))
if(Итого_верх_июль=0,     '', DoubleToStr(Итого_верх_июль,     Формат))
if(Итого_верх_август=0,   '', DoubleToStr(Итого_верх_август,   Формат))
if(Итого_верх_сентябрь=0, '', DoubleToStr(Итого_верх_сентябрь, Формат))
if(Итого_верх_октябрь=0,  '', DoubleToStr(Итого_верх_октябрь,  Формат))
if(Итого_верх_ноябрь=0,   '', DoubleToStr(Итого_верх_ноябрь,   Формат))
if(Итого_верх_декабрь=0,  '', DoubleToStr(Итого_верх_декабрь,  Формат))
if(Итого_верх_конец=0,    '', DoubleToStr(Итого_верх_конец,    Формат))

if(Итого_верх_январь_и_выбывшие=0,   '', DoubleToStr(Итого_верх_январь_и_выбывшие,   Формат))
if(Итого_верх_февраль_и_выбывшие=0,  '', DoubleToStr(Итого_верх_февраль_и_выбывшие,  Формат))
if(Итого_верх_март_и_выбывшие=0,     '', DoubleToStr(Итого_верх_март_и_выбывшие,     Формат))
if(Итого_верх_апрель_и_выбывшие=0,   '', DoubleToStr(Итого_верх_апрель_и_выбывшие,   Формат))
if(Итого_верх_май_и_выбывшие=0,      '', DoubleToStr(Итого_верх_май_и_выбывшие,      Формат))
if(Итого_верх_июнь_и_выбывшие=0,     '', DoubleToStr(Итого_верх_июнь_и_выбывшие,     Формат))
if(Итого_верх_июль_и_выбывшие=0,     '', DoubleToStr(Итого_верх_июль_и_выбывшие,     Формат))
if(Итого_верх_август_и_выбывшие=0,   '', DoubleToStr(Итого_верх_август_и_выбывшие,   Формат))
if(Итого_верх_сентябрь_и_выбывшие=0, '', DoubleToStr(Итого_верх_сентябрь_и_выбывшие, Формат))
if(Итого_верх_октябрь_и_выбывшие=0,  '', DoubleToStr(Итого_верх_октябрь_и_выбывшие,  Формат))
if(Итого_верх_ноябрь_и_выбывшие=0,   '', DoubleToStr(Итого_верх_ноябрь_и_выбывшие,   Формат))
if(Итого_верх_декабрь_и_выбывшие=0,  '', DoubleToStr(Итого_верх_декабрь_и_выбывшие,  Формат))
if(Итого_верх_конец_и_выбывшие=0,    '', DoubleToStr(Итого_верх_конец_и_выбывшие,    Формат))

!---------------- NameOS
if (Выбыл_в_текущем_периоде, '*'+Тело, Тело)
if(Январь=0,   '', DoubleToStr(Январь,   Формат))
if(Февраль=0,  '', DoubleToStr(Февраль,  Формат))
if(Март=0,     '', DoubleToStr(Март,     Формат))
if(Апрель=0,   '', DoubleToStr(Апрель,   Формат))
if(Май=0,      '', DoubleToStr(Май,      Формат))
if(Июнь=0,     '', DoubleToStr(Июнь,     Формат))
if(Июль=0,     '', DoubleToStr(Июль,     Формат))
if(Август=0,   '', DoubleToStr(Август,   Формат))
if(Сентябрь=0, '', DoubleToStr(Сентябрь, Формат))
if(Октябрь=0,  '', DoubleToStr(Октябрь,  Формат))
if(Ноябрь=0,   '', DoubleToStr(Ноябрь,   Формат))
if(Декабрь=0,  '', DoubleToStr(Декабрь,  Формат))
if(Конец=0,    '', DoubleToStr(Конец,    Формат))
!---------------- ItogOS
Итого
if(Итого_январь=0,   '', DoubleToStr(Итого_январь,   Формат))
if(Итого_февраль=0,  '', DoubleToStr(Итого_февраль,  Формат))
if(Итого_март=0,     '', DoubleToStr(Итого_март,     Формат))
if(Итого_апрель=0,   '', DoubleToStr(Итого_апрель,   Формат))
if(Итого_май=0,      '', DoubleToStr(Итого_май,      Формат))
if(Итого_июнь=0,     '', DoubleToStr(Итого_июнь,     Формат))
if(Итого_июль=0,     '', DoubleToStr(Итого_июль,     Формат))
if(Итого_август=0,   '', DoubleToStr(Итого_август,   Формат))
if(Итого_сентябрь=0, '', DoubleToStr(Итого_сентябрь, Формат))
if(Итого_октябрь=0,  '', DoubleToStr(Итого_октябрь,  Формат))
if(Итого_ноябрь=0,   '', DoubleToStr(Итого_ноябрь,   Формат))
if(Итого_декабрь=0,  '', DoubleToStr(Итого_декабрь,  Формат))
if(Итого_конец=0,    '', DoubleToStr(Итого_конец,    Формат))

if(Итого_январь_и_выбывшие=0,   '', DoubleToStr(Итого_январь_и_выбывшие,   Формат))
if(Итого_февраль_и_выбывшие=0,  '', DoubleToStr(Итого_февраль_и_выбывшие,  Формат))
if(Итого_март_и_выбывшие=0,     '', DoubleToStr(Итого_март_и_выбывшие,     Формат))
if(Итого_апрель_и_выбывшие=0,   '', DoubleToStr(Итого_апрель_и_выбывшие,   Формат))
if(Итого_май_и_выбывшие=0,      '', DoubleToStr(Итого_май_и_выбывшие,      Формат))
if(Итого_июнь_и_выбывшие=0,     '', DoubleToStr(Итого_июнь_и_выбывшие,     Формат))
if(Итого_июль_и_выбывшие=0,     '', DoubleToStr(Итого_июль_и_выбывшие,     Формат))
if(Итого_август_и_выбывшие=0,   '', DoubleToStr(Итого_август_и_выбывшие,   Формат))
if(Итого_сентябрь_и_выбывшие=0, '', DoubleToStr(Итого_сентябрь_и_выбывшие, Формат))
if(Итого_октябрь_и_выбывшие=0,  '', DoubleToStr(Итого_октябрь_и_выбывшие,  Формат))
if(Итого_ноябрь_и_выбывшие=0,   '', DoubleToStr(Итого_ноябрь_и_выбывшие,   Формат))
if(Итого_декабрь_и_выбывшие=0,  '', DoubleToStr(Итого_декабрь_и_выбывшие,  Формат))
if(Итого_конец_и_выбывшие=0,    '', DoubleToStr(Итого_конец_и_выбывшие,    Формат))

С_учетом_выбывших_в_периоде
.EndFields
^

                                  Данные о величине амортизационного фонда
                                     в @@@@ году с разбивкой по месяцам

Метод:                ^
Денежная единица:     ^ (^) ^
Группировка:          ^
Сортировка:           ^
Фильтры:
.{?Internal;( (Дата_с <> Date(1,1,Year(Дата_с))) or (Дата_по <> Date(31,12,Year(Дата_с))) );
 за период:           с ^ по ^
.}
.{ CheckEnter FilterOS3
 ^
.}
.{
.[h
───────────────────────────────┬────────────────┬────────────────┬────────────────┬────────────────┬────────────────┬────────────────┬────────────────┬────────────────┬────────────────┬────────────────┬────────────────┬────────────────┬─────────────────
         Наименование          │     Январь     │     Февраль    │      Март      │     Апрель     │      Май       │      Июнь      │      Июль      │     Август     │    Сентябрь    │     Октябрь    │     Ноябрь     │     Декабрь    │     ИТОГО
───────────────────────────────┴────────────────┴────────────────┴────────────────┴────────────────┴────────────────┴────────────────┴────────────────┴────────────────┴────────────────┴────────────────┴────────────────┴────────────────┴─────────────────
.]h
.{ CheckEnter GruppaOS3
 Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&
.{?Internal;(NeedSum1 and (Учет_выбывших <> 4 ));
                             (* &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&& )
.}
.}
.{ CheckEnter NameOS3
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&
.}
.{ CheckEnter ItogOS3
 Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&
.{?Internal;(Учет_выбывших <> 4 );
                             (* &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&& )
.}
.}
.}
.{?Internal;(Учет_выбывших <> 4 );
          * - с учетом выбывших в отчетном ^
.}


Бухгалтер

Ответственный за выпуск
.} Ш
.EndForm
!(* *)

!=============================================================================
.LinkForm 'OsItog_02' Prototype is 'ositog'
!=============================================================================
.NameInList 'Ведомость амортизации с разбивкой по кварталам'
.Group 'Ведомости амортизации с разбивкой по кварталам'
.p 80
.defo portrait
.Var
SumKv1_Up,   SumKv2_Up,   SumKv3_Up,   SumKv4_Up,
SumKv1,      SumKv2,      SumKv3,      SumKv4,
SumKv1_Down, SumKv2_Down, SumKv3_Down, SumKv4_Down : Double
SumKv1_Up_With_Left,   SumKv2_Up_With_Left,   SumKv3_Up_With_Left,   SumKv4_Up_With_Left,
SumKv1_With_Left,      SumKv2_With_Left,      SumKv3_With_Left,      SumKv4_With_Left,
SumKv1_Down_With_Left, SumKv2_Down_With_Left, SumKv3_Down_With_Left, SumKv4_Down_With_Left : Double
.EndVar
#ResponsibleLinkVar
.[h Skip
                                                              Лист @Np@
.]h
 Ш                                                             Лист 1
.{
#ResponsibleLinkInit(OSITOG)
.Fields
CommonFormHeader
Year(Дата_с)
Метод
Ф_делитель
Делитель_прописью
Валюта_метода
Группировка
Сортировка
!---------------- FilterOS
Дата_с
Дата_по
Фильтр
!---------------- GruppaOS
Ветка
if(SumKv1_Up=0, '', DoubleToStr(SumKv1_Up, Формат))
if(SumKv2_Up=0, '', DoubleToStr(SumKv2_Up, Формат))
if(SumKv3_Up=0, '', DoubleToStr(SumKv3_Up, Формат))
if(SumKv4_Up=0, '', DoubleToStr(SumKv4_Up, Формат))
if(Итого_верх_конец=0, '', DoubleToStr(Итого_верх_конец, Формат))

if(SumKv1_Up_With_Left=0, '', DoubleToStr(SumKv1_Up_With_Left, Формат))
if(SumKv2_Up_With_Left=0, '', DoubleToStr(SumKv2_Up_With_Left, Формат))
if(SumKv3_Up_With_Left=0, '', DoubleToStr(SumKv3_Up_With_Left, Формат))
if(SumKv4_Up_With_Left=0, '', DoubleToStr(SumKv4_Up_With_Left, Формат))
if(Итого_верх_конец_и_выбывшие=0, '', DoubleToStr(Итого_верх_конец_и_выбывшие, Формат))

!---------------- NameOS
if (Выбыл_в_текущем_периоде, '*'+Тело, Тело)
if(SumKv1=0, '', DoubleToStr(SumKv1, Формат))
if(SumKv2=0, '', DoubleToStr(SumKv2, Формат))
if(SumKv3=0, '', DoubleToStr(SumKv3, Формат))
if(SumKv4=0, '', DoubleToStr(SumKv4, Формат))
if(Конец=0, '', DoubleToStr(Конец, Формат))
!---------------- ItogOS
Итого
if(SumKv1_Down=0, '', DoubleToStr(SumKv1_Down, Формат))
if(SumKv2_Down=0, '', DoubleToStr(SumKv2_Down, Формат))
if(SumKv3_Down=0, '', DoubleToStr(SumKv3_Down, Формат))
if(SumKv4_Down=0, '', DoubleToStr(SumKv4_Down, Формат))
if(Итого_конец=0, '', DoubleToStr(Итого_конец, Формат))

if(SumKv1_Down_With_Left=0, '', DoubleToStr(SumKv1_Down_With_Left, Формат))
if(SumKv2_Down_With_Left=0, '', DoubleToStr(SumKv2_Down_With_Left, Формат))
if(SumKv3_Down_With_Left=0, '', DoubleToStr(SumKv3_Down_With_Left, Формат))
if(SumKv4_Down_With_Left=0, '', DoubleToStr(SumKv4_Down_With_Left, Формат))
if(Итого_конец_и_выбывшие=0, '', DoubleToStr(Итого_конец_и_выбывшие, Формат))

С_учетом_выбывших_в_периоде
.EndFields
^

                                  Данные о величине амортизационного фонда
                                    в @@@@ году с разбивкой по кварталам

Метод:                ^
Денежная единица:     ^ (^) ^
Группировка:          ^
Сортировка:           ^
Фильтры:
.{?Internal;( (Дата_с <> Date(1,1,Year(Дата_с))) or (Дата_по <> Date(31,12,Year(Дата_с))) );
 за период:           с ^ по ^
.}
.{ CheckEnter FilterOS3
 ^
.}
.{
.[h
──────────────────────────────────────────────────┬────────────────────┬────────────────────┬────────────────────┬────────────────────┬────────────────────
                 Наименование                     │     I квартал      │      II квартал    │     III квартал    │     IV квартал     │       ИТОГО
──────────────────────────────────────────────────┴────────────────────┴────────────────────┴────────────────────┴────────────────────┴────────────────────
.]h
.{ CheckEnter GruppaOS3
.Begin
SumKv1_Up   := Итого_верх_январь  + Итого_верх_февраль + Итого_верх_март;
SumKv2_Up   := Итого_верх_апрель  + Итого_верх_май     + Итого_верх_июнь;
SumKv3_Up   := Итого_верх_июль    + Итого_верх_август  + Итого_верх_сентябрь;
SumKv4_Up   := Итого_верх_октябрь + Итого_верх_ноябрь  + Итого_верх_декабрь;

SumKv1_Up_With_Left   := Итого_верх_январь_и_выбывшие  + Итого_верх_февраль_и_выбывшие + Итого_верх_март_и_выбывшие;
SumKv2_Up_With_Left   := Итого_верх_апрель_и_выбывшие  + Итого_верх_май_и_выбывшие     + Итого_верх_июнь_и_выбывшие;
SumKv3_Up_With_Left   := Итого_верх_июль_и_выбывшие    + Итого_верх_август_и_выбывшие  + Итого_верх_сентябрь_и_выбывшие;
SumKv4_Up_With_Left   := Итого_верх_октябрь_и_выбывшие + Итого_верх_ноябрь_и_выбывшие  + Итого_верх_декабрь_и_выбывшие;
End.
 Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&&
.{?Internal;(NeedSum1 and (Учет_выбывших <> 4 ));
                                                (* &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& )
.}
.}
.{ CheckEnter NameOS3
.Begin
SumKv1      := Январь  + Февраль + Март;
SumKv2      := Апрель  + Май     + Июнь;
SumKv3      := Июль    + Август  + Сентябрь;
SumKv4      := Октябрь + Ноябрь  + Декабрь;
End.
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&&
.}
.{ CheckEnter ItogOS3
.Begin
SumKv1_Down := Итого_январь  + Итого_февраль + Итого_март;
SumKv2_Down := Итого_апрель  + Итого_май     + Итого_июнь;
SumKv3_Down := Итого_июль    + Итого_август  + Итого_сентябрь;
SumKv4_Down := Итого_октябрь + Итого_ноябрь  + Итого_декабрь;

SumKv1_Down_With_Left := Итого_январь_и_выбывшие  + Итого_февраль_и_выбывшие + Итого_март_и_выбывшие;
SumKv2_Down_With_Left := Итого_апрель_и_выбывшие  + Итого_май_и_выбывшие     + Итого_июнь_и_выбывшие;
SumKv3_Down_With_Left := Итого_июль_и_выбывшие    + Итого_август_и_выбывшие  + Итого_сентябрь_и_выбывшие;
SumKv4_Down_With_Left := Итого_октябрь_и_выбывшие + Итого_ноябрь_и_выбывшие  + Итого_декабрь_и_выбывшие;
End.
 Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&&
.{?Internal;(Учет_выбывших <> 4 );
                                                (* &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& )
.}
.}
.}
.{?Internal;(Учет_выбывших <> 4 );
          * - с учетом выбывших в отчетном ^
.}


Бухгалтер

Ответственный за выпуск
.} Ш
.EndForm
!(* *)

!=============================================================================
.LinkForm 'OsItog_03' Prototype is 'ositog'
!=============================================================================
.NameInList 'Ведомость изменения с разбивкой по месяцам'
.Group 'Ведомости изменения с разбивкой по месяцам'
.p 60
.defo landscape
.Var
Вид_суммы_строка : String
.EndVar
#ResponsibleLinkVar
.[h Skip
                                                              Лист @Np@
.]h
 Ш                                                             Лист 1
.{
#ResponsibleLinkInit(OSITOG)
.Fields
CommonFormHeader
Вид_суммы_строка
Year(Дата_с)
Метод
Ф_делитель
Делитель_прописью
Валюта_метода
Группировка
Сортировка
!---------------- FilterOS
Дата_с
Дата_по
Фильтр
!---------------- GruppaOS
Ветка
if(Итого_верх_начало=0,   '', DoubleToStr(Итого_верх_начало,   Формат))
if(Итого_верх_январь=0,   '', DoubleToStr(Итого_верх_январь,   Формат))
if(Итого_верх_февраль=0,  '', DoubleToStr(Итого_верх_февраль,  Формат))
if(Итого_верх_март=0,     '', DoubleToStr(Итого_верх_март,     Формат))
if(Итого_верх_апрель=0,   '', DoubleToStr(Итого_верх_апрель,   Формат))
if(Итого_верх_май=0,      '', DoubleToStr(Итого_верх_май,      Формат))
if(Итого_верх_июнь=0,     '', DoubleToStr(Итого_верх_июнь,     Формат))
if(Итого_верх_июль=0,     '', DoubleToStr(Итого_верх_июль,     Формат))
if(Итого_верх_август=0,   '', DoubleToStr(Итого_верх_август,   Формат))
if(Итого_верх_сентябрь=0, '', DoubleToStr(Итого_верх_сентябрь, Формат))
if(Итого_верх_октябрь=0,  '', DoubleToStr(Итого_верх_октябрь,  Формат))
if(Итого_верх_ноябрь=0,   '', DoubleToStr(Итого_верх_ноябрь,   Формат))
if(Итого_верх_декабрь=0,  '', DoubleToStr(Итого_верх_декабрь,  Формат))
if(Итого_верх_конец=0,    '', DoubleToStr(Итого_верх_конец,    Формат))

if(Итого_верх_начало_и_выбывшие=0,   '', DoubleToStr(Итого_верх_начало_и_выбывшие,   Формат))
if(Итого_верх_январь_и_выбывшие=0,   '', DoubleToStr(Итого_верх_январь_и_выбывшие,   Формат))
if(Итого_верх_февраль_и_выбывшие=0,  '', DoubleToStr(Итого_верх_февраль_и_выбывшие,  Формат))
if(Итого_верх_март_и_выбывшие=0,     '', DoubleToStr(Итого_верх_март_и_выбывшие,     Формат))
if(Итого_верх_апрель_и_выбывшие=0,   '', DoubleToStr(Итого_верх_апрель_и_выбывшие,   Формат))
if(Итого_верх_май_и_выбывшие=0,      '', DoubleToStr(Итого_верх_май_и_выбывшие,      Формат))
if(Итого_верх_июнь_и_выбывшие=0,     '', DoubleToStr(Итого_верх_июнь_и_выбывшие,     Формат))
if(Итого_верх_июль_и_выбывшие=0,     '', DoubleToStr(Итого_верх_июль_и_выбывшие,     Формат))
if(Итого_верх_август_и_выбывшие=0,   '', DoubleToStr(Итого_верх_август_и_выбывшие,   Формат))
if(Итого_верх_сентябрь_и_выбывшие=0, '', DoubleToStr(Итого_верх_сентябрь_и_выбывшие, Формат))
if(Итого_верх_октябрь_и_выбывшие=0,  '', DoubleToStr(Итого_верх_октябрь_и_выбывшие,  Формат))
if(Итого_верх_ноябрь_и_выбывшие=0,   '', DoubleToStr(Итого_верх_ноябрь_и_выбывшие,   Формат))
if(Итого_верх_декабрь_и_выбывшие=0,  '', DoubleToStr(Итого_верх_декабрь_и_выбывшие,  Формат))
if(Итого_верх_конец_и_выбывшие=0,    '', DoubleToStr(Итого_верх_конец_и_выбывшие,    Формат))
!---------------- NameOS
if (Выбыл_в_текущем_периоде, '*'+Тело, Тело)
if(Начало=0,   '', DoubleToStr(Начало,   Формат))
if(Январь=0,   '', DoubleToStr(Январь,   Формат))
if(Февраль=0,  '', DoubleToStr(Февраль,  Формат))
if(Март=0,     '', DoubleToStr(Март,     Формат))
if(Апрель=0,   '', DoubleToStr(Апрель,   Формат))
if(Май=0,      '', DoubleToStr(Май,      Формат))
if(Июнь=0,     '', DoubleToStr(Июнь,     Формат))
if(Июль=0,     '', DoubleToStr(Июль,     Формат))
if(Август=0,   '', DoubleToStr(Август,   Формат))
if(Сентябрь=0, '', DoubleToStr(Сентябрь, Формат))
if(Октябрь=0,  '', DoubleToStr(Октябрь,  Формат))
if(Ноябрь=0,   '', DoubleToStr(Ноябрь,   Формат))
if(Декабрь=0,  '', DoubleToStr(Декабрь,  Формат))
if(Конец=0,    '', DoubleToStr(Конец,    Формат))
!---------------- ItogOS
Итого
if(Итого_начало=0,   '', DoubleToStr(Итого_начало,   Формат))
if(Итого_январь=0,   '', DoubleToStr(Итого_январь,   Формат))
if(Итого_февраль=0,  '', DoubleToStr(Итого_февраль,  Формат))
if(Итого_март=0,     '', DoubleToStr(Итого_март,     Формат))
if(Итого_апрель=0,   '', DoubleToStr(Итого_апрель,   Формат))
if(Итого_май=0,      '', DoubleToStr(Итого_май,      Формат))
if(Итого_июнь=0,     '', DoubleToStr(Итого_июнь,     Формат))
if(Итого_июль=0,     '', DoubleToStr(Итого_июль,     Формат))
if(Итого_август=0,   '', DoubleToStr(Итого_август,   Формат))
if(Итого_сентябрь=0, '', DoubleToStr(Итого_сентябрь, Формат))
if(Итого_октябрь=0,  '', DoubleToStr(Итого_октябрь,  Формат))
if(Итого_ноябрь=0,   '', DoubleToStr(Итого_ноябрь,   Формат))
if(Итого_декабрь=0,  '', DoubleToStr(Итого_декабрь,  Формат))
if(Итого_конец=0,    '', DoubleToStr(Итого_конец,    Формат))

if(Итого_начало_и_выбывшие=0,   '', DoubleToStr(Итого_начало_и_выбывшие,   Формат))
if(Итого_январь_и_выбывшие=0,   '', DoubleToStr(Итого_январь_и_выбывшие,   Формат))
if(Итого_февраль_и_выбывшие=0,  '', DoubleToStr(Итого_февраль_и_выбывшие,  Формат))
if(Итого_март_и_выбывшие=0,     '', DoubleToStr(Итого_март_и_выбывшие,     Формат))
if(Итого_апрель_и_выбывшие=0,   '', DoubleToStr(Итого_апрель_и_выбывшие,   Формат))
if(Итого_май_и_выбывшие=0,      '', DoubleToStr(Итого_май_и_выбывшие,      Формат))
if(Итого_июнь_и_выбывшие=0,     '', DoubleToStr(Итого_июнь_и_выбывшие,     Формат))
if(Итого_июль_и_выбывшие=0,     '', DoubleToStr(Итого_июль_и_выбывшие,     Формат))
if(Итого_август_и_выбывшие=0,   '', DoubleToStr(Итого_август_и_выбывшие,   Формат))
if(Итого_сентябрь_и_выбывшие=0, '', DoubleToStr(Итого_сентябрь_и_выбывшие, Формат))
if(Итого_октябрь_и_выбывшие=0,  '', DoubleToStr(Итого_октябрь_и_выбывшие,  Формат))
if(Итого_ноябрь_и_выбывшие=0,   '', DoubleToStr(Итого_ноябрь_и_выбывшие,   Формат))
if(Итого_декабрь_и_выбывшие=0,  '', DoubleToStr(Итого_декабрь_и_выбывшие,  Формат))
if(Итого_конец_и_выбывшие=0,    '', DoubleToStr(Итого_конец_и_выбывшие,    Формат))

С_учетом_выбывших_в_периоде
.EndFields
^
.Begin
Case Вид_суммы of
 0: Вид_суммы_строка := '"Балансовая стоимость"';
 1: Вид_суммы_строка := '"Остаточная стоимость"';
 2: Вид_суммы_строка := '"' + sFullNameFieldSIznM + '"';     //'износа за месяц';
 3: Вид_суммы_строка := '"' + sNameFieldSumIzn  + '"';       //'полного износа';
 else
    Вид_суммы_строка := '???';
End;
End.

                             Данные об изменении величины @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                             в @@@@ году с разбивкой по месяцам

Метод:                ^
Денежная единица:     ^ (^) ^
Группировка:          ^
Сортировка:           ^
Фильтры:
.{?Internal;( (Дата_с <> Date(1,1,Year(Дата_с))) or (Дата_по <> Date(31,12,Year(Дата_с))) );
 за период:           с ^ по ^
.}
.{ CheckEnter FilterOS3
 ^
.}
.{
.[h
─────────────────────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────
        Наименование         │  Сальдо на    │    Январь     │    Февраль    │     Март      │     Апрель    │     Май       │     Июнь      │     Июль      │    Август     │   Сентябрь    │    Октябрь    │    Ноябрь     │    Декабрь    │   Сальдо на
                             │начало периода │               │               │               │               │               │               │               │               │               │               │               │               │ конец периода
─────────────────────────────┴───────────────┴───────────────┴───────────────┴───────────────┴───────────────┴───────────────┴───────────────┴───────────────┴───────────────┴───────────────┴───────────────┴───────────────┴───────────────┴───────────────
.]h
.{ CheckEnter GruppaOS3
 Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&&
.{?Internal;(NeedSum1 and (Учет_выбывших <> 4 ));
                           (* &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& )
.}
.}
.{ CheckEnter NameOS3
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&&
.}
.{ CheckEnter ItogOS3
 Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&&
.{?Internal;(Учет_выбывших <> 4 );
                           (* &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&& )
.}
.}
.}
.{?Internal;(Учет_выбывших <> 4 );
          * - с учетом выбывших в отчетном ^
.}


Бухгалтер

Ответственный за выпуск
.} Ш
.EndForm
!(* *)

!=============================================================================
.LinkForm 'OsItog_04' Prototype is 'ositog'
!=============================================================================
.NameInList 'Ведомость изменения с разбивкой по кварталам'
.Group 'Ведомости изменения с разбивкой по кварталам'
.p 60
.defo landscape
.Var
Вид_суммы_строка : String
SumKv1_Up,   SumKv2_Up,   SumKv3_Up,   SumKv4_Up,
SumKv1,      SumKv2,      SumKv3,      SumKv4,
SumKv1_Down, SumKv2_Down, SumKv3_Down, SumKv4_Down : Double
SumKv1_Up_With_Left,   SumKv2_Up_With_Left,   SumKv3_Up_With_Left,   SumKv4_Up_With_Left,
SumKv1_With_Left,      SumKv2_With_Left,      SumKv3_With_Left,      SumKv4_With_Left,
SumKv1_Down_With_Left, SumKv2_Down_With_Left, SumKv3_Down_With_Left, SumKv4_Down_With_Left : Double
.EndVar
#ResponsibleLinkVar
.[h Skip
                                                              Лист @Np@
.]h
 Ш                                                             Лист 1
.{
#ResponsibleLinkInit(OSITOG)
.Fields
CommonFormHeader
Вид_суммы_строка
Year(Дата_с)
Метод
Ф_делитель
Делитель_прописью
Валюта_метода
Группировка
Сортировка
!---------------- FilterOS
Дата_с
Дата_по
Фильтр
!---------------- GruppaOS
Ветка
if(Итого_верх_начало=0, '', DoubleToStr(Итого_верх_начало, Формат))
if(SumKv1_Up=0, '', DoubleToStr(SumKv1_Up, Формат))
if(SumKv2_Up=0, '', DoubleToStr(SumKv2_Up, Формат))
if(SumKv3_Up=0, '', DoubleToStr(SumKv3_Up, Формат))
if(SumKv4_Up=0, '', DoubleToStr(SumKv4_Up, Формат))
if(Итого_верх_конец=0, '', DoubleToStr(Итого_верх_конец, Формат))

if(Итого_верх_начало_и_выбывшие=0, '', DoubleToStr(Итого_верх_начало_и_выбывшие, Формат))
if(SumKv1_Up_With_Left=0, '', DoubleToStr(SumKv1_Up_With_Left, Формат))
if(SumKv2_Up_With_Left=0, '', DoubleToStr(SumKv2_Up_With_Left, Формат))
if(SumKv3_Up_With_Left=0, '', DoubleToStr(SumKv3_Up_With_Left, Формат))
if(SumKv4_Up_With_Left=0, '', DoubleToStr(SumKv4_Up_With_Left, Формат))
if(Итого_верх_конец_и_выбывшие=0, '', DoubleToStr(Итого_верх_конец_и_выбывшие, Формат))
!---------------- NameOS
if (Выбыл_в_текущем_периоде, '*'+Тело, Тело)
if(Начало=0, '', DoubleToStr(Начало, Формат))
if(SumKv1=0, '', DoubleToStr(SumKv1, Формат))
if(SumKv2=0, '', DoubleToStr(SumKv2, Формат))
if(SumKv3=0, '', DoubleToStr(SumKv3, Формат))
if(SumKv4=0, '', DoubleToStr(SumKv4, Формат))
if(Конец=0, '', DoubleToStr(Конец, Формат))
!---------------- ItogOS
Итого
if(Итого_начало=0, '', DoubleToStr(Итого_начало, Формат))
if(SumKv1_Down=0, '', DoubleToStr(SumKv1_Down, Формат))
if(SumKv2_Down=0, '', DoubleToStr(SumKv2_Down, Формат))
if(SumKv3_Down=0, '', DoubleToStr(SumKv3_Down, Формат))
if(SumKv4_Down=0, '', DoubleToStr(SumKv4_Down, Формат))
if(Итого_конец=0, '', DoubleToStr(Итого_конец, Формат))

if(Итого_начало_и_выбывшие=0, '', DoubleToStr(Итого_начало_и_выбывшие, Формат))
if(SumKv1_Down_With_Left=0, '', DoubleToStr(SumKv1_Down_With_Left, Формат))
if(SumKv2_Down_With_Left=0, '', DoubleToStr(SumKv2_Down_With_Left, Формат))
if(SumKv3_Down_With_Left=0, '', DoubleToStr(SumKv3_Down_With_Left, Формат))
if(SumKv4_Down_With_Left=0, '', DoubleToStr(SumKv4_Down_With_Left, Формат))
if(Итого_конец_и_выбывшие=0, '', DoubleToStr(Итого_конец_и_выбывшие, Формат))

С_учетом_выбывших_в_периоде
.EndFields
^
.Begin
Case Вид_суммы of
 0: Вид_суммы_строка := '"Балансовая стоимость"';
 1: Вид_суммы_строка := '"Остаточная стоимость"';
 2: Вид_суммы_строка := '"' + sFullNameFieldSIznM + '"';     //'износа за месяц';
 3: Вид_суммы_строка := '"' + sNameFieldSumIzn  + '"';       //'полного износа';
 else
    Вид_суммы_строка := '???';
End;
End.

                             Данные об изменении величины @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                             в @@@@ году с разбивкой по кварталам

Метод:                ^
Денежная единица:     ^ (^) ^
Группировка:          ^
Сортировка:           ^
Фильтры:
.{?Internal;( (Дата_с <> Date(1,1,Year(Дата_с))) or (Дата_по <> Date(31,12,Year(Дата_с))) );
 за период:           с ^ по ^
.}
.{ CheckEnter FilterOS3
 ^
.}
.{
.[h
──────────────────────────────────────────────────┬────────────────────┬────────────────────┬────────────────────┬────────────────────┬────────────────────┬────────────────────
                 Наименование                     │       Сальдо       │     I квартал      │      II квартал    │     III квартал    │     IV квартал     │      Сальдо
                                                  │  на начало периода │                    │                    │                    │                    │  на конец периода
──────────────────────────────────────────────────┴────────────────────┴────────────────────┴────────────────────┴────────────────────┴────────────────────┴────────────────────
.]h
.{ CheckEnter GruppaOS3
.Begin
SumKv1_Up := Итого_верх_январь  + Итого_верх_февраль + Итого_верх_март;
SumKv2_Up := Итого_верх_апрель  + Итого_верх_май     + Итого_верх_июнь;
SumKv3_Up := Итого_верх_июль    + Итого_верх_август  + Итого_верх_сентябрь;
SumKv4_Up := Итого_верх_октябрь + Итого_верх_ноябрь  + Итого_верх_декабрь;

SumKv1_Up_With_Left := Итого_верх_январь_и_выбывшие  + Итого_верх_февраль_и_выбывшие + Итого_верх_март_и_выбывшие;
SumKv2_Up_With_Left := Итого_верх_апрель_и_выбывшие  + Итого_верх_май_и_выбывшие     + Итого_верх_июнь_и_выбывшие;
SumKv3_Up_With_Left := Итого_верх_июль_и_выбывшие    + Итого_верх_август_и_выбывшие  + Итого_верх_сентябрь_и_выбывшие;
SumKv4_Up_With_Left := Итого_верх_октябрь_и_выбывшие + Итого_верх_ноябрь_и_выбывшие  + Итого_верх_декабрь_и_выбывшие;
End.
 Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&&
.{?Internal;(NeedSum1 and (Учет_выбывших <> 4 ));
                                                (* &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& )
.}
.}
.{ CheckEnter NameOS3
.Begin
SumKv1 := Январь  + Февраль + Март;
SumKv2 := Апрель  + Май     + Июнь;
SumKv3 := Июль    + Август  + Сентябрь;
SumKv4 := Октябрь + Ноябрь  + Декабрь;
End.
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&&
.}
.{ CheckEnter ItogOS3
.Begin
SumKv1_Down := Итого_январь  + Итого_февраль + Итого_март;
SumKv2_Down := Итого_апрель  + Итого_май     + Итого_июнь;
SumKv3_Down := Итого_июль    + Итого_август  + Итого_сентябрь;
SumKv4_Down := Итого_октябрь + Итого_ноябрь  + Итого_декабрь;

SumKv1_Down_With_Left := Итого_январь_и_выбывшие  + Итого_февраль_и_выбывшие + Итого_март_и_выбывшие;
SumKv2_Down_With_Left := Итого_апрель_и_выбывшие  + Итого_май_и_выбывшие     + Итого_июнь_и_выбывшие;
SumKv3_Down_With_Left := Итого_июль_и_выбывшие    + Итого_август_и_выбывшие  + Итого_сентябрь_и_выбывшие;
SumKv4_Down_With_Left := Итого_октябрь_и_выбывшие + Итого_ноябрь_и_выбывшие  + Итого_декабрь_и_выбывшие;
End.
 Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&&
.{?Internal;(Учет_выбывших <> 4 );
                                                (* &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&&&&&& )
.}
.}
.}
.{?Internal;(Учет_выбывших <> 4 );
          * - с учетом выбывших в отчетном ^
.}


Бухгалтер

Ответственный за выпуск
.} Ш
.EndForm
!(* *)

!=============================================================================
.LinkForm 'OsItog_05' Prototype is 'ositog'
!=============================================================================
.NameInList 'Регистр учета амортизации (с нарастающим итогом)'
.Group 'Регистр учета амортизации ОС'
.p 60
.defo landscape
.var
  nRecKatOs   : comp;
  currArcDate : date;
  aMonthSum   : array[1..12] of double;
  SumStoim    : double;
  SumOstStoim : double;
  GrItogStoim : double;
  GrItogOstSt : double;
  currMonth   : word;
  currOtchPer : date;
  bUseKatOs   : boolean;
  dPoprKoef   : double;
  dStoim      : double;
  dIznos      : double;
  dFullIznos  : double;
  dOstStoim   : double;
  dBazStoim   : double;
  dSrokPol    : double;
  dSrokOst    : double;
  dSumAmort   : double;
  dStoimSumAll: double;
  dOstStSumAll: double;
  wEdIzmSrok  : word;
  i           : integer;
  sBlank      : string;
  wFormIzn    : word;
.endvar
#ResponsibleLinkVar
.create view NalAmort
as select *
from
  KatOs, ArcIznos, SpKatOs, NastrOs, VidNorma,
  Synonym GrOs  GrOsKat,
  Synonym GrOs  GrOsArc,
  Synonym OsAlg OsAlgKat,
  Synonym OsAlg OsAlgArc
where
((
  nRecKatOs       == KatOs.nRec        and
  KatOs.nRec      == ArcIznos.cKatOs   and
  nRec_NastrOs    == ArcIznos.cNastrOs and
  currArcDate     == ArcIznos.Data     and
  KatOs.cGrup     == GrOsKat.nRec      and
  ArcIznos.cGrup  == GrOsArc.nRec      and
  KatOs.nRec      == SpKatOs.cKatOs    and
  nRec_NastrOs    == SpKatOs.cNastrOs  and
  SpKatos.cMetod  == OsAlgKat.nRec     and
  ArcIznos.cMetod == OsAlgArc.nRec     and
  nRec_NastrOs    == NastrOs.nRec      and
  KatOs.cVid      == VidNorma.nRec

))
;
.[h Skip
                                                              Лист @Np@
.]h
.{
#ResponsibleLinkInit(OsItog)
.Fields
CommonFormHeader
Дата_с
Дата_по
Наименование_организации
Метод
Ф_делитель
Делитель_прописью
Валюта_метода
Группировка
Сортировка
!---------------- FilterOS
Фильтр
!---------------- GruppaOS
Ветка
if (Итого_верх_конец <> 0, DoubleToStr(Итого_верх_конец, Формат), '')
if (Итого_верх_конец_и_выбывшие <> 0, DoubleToStr(Итого_верх_конец_и_выбывшие, Формат), '')
!---------------- NameOS
if (Longint(Дата_с)<>0, DoubleToStr(currMonth,'77') + DateToStr(Дата_с, '.YYYY'), '')
if (Выбыл_в_текущем_периоде, '*'+NalAmort.KatOs.InNum, NalAmort.KatOs.InNum)
NalAmort.KatOs.NameOs
if (bUseKatOs, NalAmort.GrOsKat.NameGr, NalAmort.GrOsArc.NameGr)
if (bUseKatOs, NalAmort.OsAlgKat.Name, NalAmort.OsAlgArc.Name)
if (dPoprKoef <> 0, DoubleToStr(dPoprKoef, Формат), '')
if (dStoim <> 0, DoubleToStr(dStoim, Формат), '')
if (dOstStoim <> 0, DoubleToStr(dOstStoim, Формат), '')
if (dBazStoim <> 0, DoubleToStr(dBazStoim, Формат), '')
if (dSrokPol <> 0, DoubleToStr(dSrokPol, '66666'), '')
if (dSrokOst <> 0, DoubleToStr(dSrokOst, '66666'), '')
if (dSumAmort <> 0, DoubleToStr(dSumAmort, Формат), '')
!---------------- ItogOS
Итого
if (GrItogStoim <> 0, DoubleToStr(GrItogStoim, Формат), '')
if (GrItogOstSt <> 0, DoubleToStr(GrItogOstSt, Формат), '')
if (Итого_конец <> 0, DoubleToStr(Итого_конец, Формат), '')
if (Итого_конец_и_выбывшие <> 0, DoubleToStr(Итого_конец_и_выбывшие, Формат), '')

С_учетом_выбывших_в_периоде
if (dStoimSumAll <> 0, DoubleToStr(dStoimSumAll, Формат), '')
if (dOstStSumAll <> 0, DoubleToStr(dOstStSumAll, Формат), '')
if (Итого_конец_и_выбывшие <> 0, DoubleToStr(Итого_конец_и_выбывшие, Формат), '')
.EndFields
 Ш                                                            Лист 1
^
                             Регистр-расчет
                             Учет амортизации основных средств
                             за период с ^ по ^
.begin
  if Length(Наименование_организации) <= 42
  {
    For (i := 1; i < 42 - (Length(Наименование_организации)); i := i + 1)
       sBlank := sBlank + ' ';

    Наименование_организации := Наименование_организации + sBlank;
  }

  wEdIzmSrok  := wGetTune('OS.SrokIspEdIzm');

  if (NalAmort.GetFirst NastrOs = tsOk)
    case NalAmort.NastrOs.TiDk of

      15: wFormIzn := wGetTune('OS.FormIzn');

      16: wFormIzn := wGetTune('NMA.FormIzn');

    end;

end.

  E^ E
  (наименование организации, предприятия)

Метод:                ^
Денежная единица:     ^ (^) ^
Группировка:          ^
Сортировка:           ^
Фильтры:
.{ CheckEnter FilterOS3
 ^
.}
.{
.[h
──────────┬─────────────────┬────────────────────────────┬─────────────────┬───────────────────┬───────────────┬────────────────┬───────────────┬───────────────┬────────────────────────┬───────────────────
  Период  │   Инвентарный   │        Наименование        │    Группа ОС    │     Алгоритм      │  Поправочный  │ Первоначальная │  Остаточная   │    Базовая    │Срок использования, мес.│      Сумма
          │      номер      │          объекта           │                 │    начисления     │  коэффициент  │   стоимость    │   стоимость   │   стоимость   ├───────────┬────────────┤   амортизации
          │                 │                            │                 │    амортизации    │               │                │               │               │ Полезный  │ Оставшийся │
──────────┴─────────────────┴────────────────────────────┴─────────────────┴───────────────────┴───────────────┴────────────────┴───────────────┴───────────────┴───────────┴────────────┴───────────────────
.]h
.{ CheckEnter GruppaOS3
  Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б                                                                                                                                       &&&&&&&&&&&&&&&&&
.{?Internal;(NeedSum1 and (Учет_выбывших <> 4 ));
                                                                                                                                                                                       (* &&&&&&&&&&&&&&&&& )
!(* *)
.}
.}
.{ CheckEnter NameOS3
.begin
  dSumAmort := 0;
  nRecKatOs := KatOS_NRec;
  if (NalAmort.GetFirst KatOs <> tsOk) {};
  aMonthSum[1]  := Январь;
  aMonthSum[2]  := Февраль;
  aMonthSum[3]  := Март;
  aMonthSum[4]  := Апрель;
  aMonthSum[5]  := Май;
  aMonthSum[6]  := Июнь;
  aMonthSum[7]  := Июль;
  aMonthSum[8]  := Август;
  aMonthSum[9]  := Сентябрь;
  aMonthSum[10] := Октябрь;
  aMonthSum[11] := Ноябрь;
  aMonthSum[12] := Декабрь;
  currMonth   := 0;
  SumOstStoim := 0;
  SumStoim    := 0;
end.
.{while currMonth < 12
.begin
  currMonth := currMonth + 1;
  currArcDate := date(Last_Day(date(1,currMonth,Year(Дата_с))), currMonth, Year(Дата_с));
  if (NalAmort.GetFirst Katos <> tsOk) {};
  if (NalAmort.GetFirst ArcIznos <> tsOk) {};
  if (NalAmort.GetFirst NastrOs <> tsOk) {};
  currOtchPer := NalAmort.KatOs.OtchPer;
  if (currArcDate >= currOtchPer)
  {
    bUseKatOs  := true;
    dPoprKoef  := NalAmort.NastrOs.KIAO * NalAmort.VidNorma.Norma * NalAmort.SpKatOs.Poprkoef;
    dStoim     := if (NalAmort.NastrOs.Field4 = 0, NalAmort.SpKatOs.Stoim * NalAmort.KatOs.Kol, NalAmort.SpKatOs.Stoim);
    dIznos     := if (wFormIzn = 0, NalAmort.SpKatOs.SumIzn, NalAmort.SpKatOs.SumIzn + NalAmort.SpKatOs.SIznM);
    dFullIznos := if (NalAmort.NastrOs.Field4 = 0, dIznos * NalAmort.KatOs.Kol, dIznos);
    dSrokPol   := NalAmort.SpKatOs.SrokIsp;
    dSrokOst   := NalAmort.SpKatOs.SrokIsp - (NalAmort.SpKatOs.IspPs + NalAmort.SpKatOs.IspCur);
  }
  else
  {
    bUseKatOs  := false;
    dPoprKoef  := NalAmort.ArcIznos.KoofIz * NalAmort.ArcIznos.KoofYsk * NalAmort.ArcIznos.KoofSm;
    dStoim     := if (NalAmort.NastrOs.Field4 = 0, NalAmort.ArcIznos.Stoim * NalAmort.ArcIznos.Kol, NalAmort.ArcIznos.Stoim);
    dIznos     := if (wFormIzn = 0, NalAmort.ArcIznos.SumIzn, NalAmort.ArcIznos.SumIzn + NalAmort.ArcIznos.SIznM);
    dFullIznos := if (NalAmort.NastrOs.Field4 = 0, dIznos * NalAmort.ArcIznos.Kol, dIznos);
    dSrokPol   := NalAmort.ArcIznos.SrokIsp;
    dSrokOst   := NalAmort.ArcIznos.SrokIsp - (NalAmort.SpKatOs.IspPs + NalAmort.ArcIznos.IspCur);
  }
  if (wEdIzmSrok = 1)
  {
    dSrokPol := dSrokPol * 12;
    dSrokOst := dSrokOst * 12;
  }
  dOstStoim := dStoim - dFullIznos;

  if (aMonthSum[currMonth] <> 0)
  {
    SumOstStoim := dOstStoim;
    SumStoim := dStoim;
  }

  dBazStoim := dStoim*0.2;
  if (dOstStoim >= dBazStoim)
    dBazStoim := 0;
  dSumAmort := dSumAmort + aMonthSum[currMonth];
end.
.{?Internal;aMonthSum[currMonth]<>0
 @@@@@@@   @@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@ &&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&&    &&&&&        &&&&&    &&&&&&&&&&&&&&&&&
.}
.}
.begin
  GrItogStoim := GrItogStoim + SumStoim;
  GrItogOstSt := GrItogOstSt + SumOstStoim;
  dStoimSumAll := dStoimSumAll + SumStoim;
  dOstStSumAll := dOstStSumAll + SumOstStoim;
end.
.}
.{ CheckEnter ItogOS3
  Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б                                                              &&&&&&&&&&&&&&& &&&&&&&&&&&&&&&                                          &&&&&&&&&&&&&&&&&
.begin
  GrItogStoim := 0;
  GrItogOstSt := 0;
end.
.{?Internal;(Учет_выбывших <> 4 );
                                                                                                                                                                                       (* &&&&&&&&&&&&&&&&& )
.}
!(* *)
.}
.}
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
.{?Internal;(Учет_выбывших <> 4 );
          * - с учетом выбывших в отчетном ^
.}
 Б ИТОГО                                                                                                           &&&&&&&&&&&&&&& &&&&&&&&&&&&&&&                                          &&&&&&&&&&&&&&&&& Б
.{While (Номер_ответственного_лица < Количество_ответственных_лиц)
.begin
 Номер_ответственного_лица := Номер_ответственного_лица + 1;
end.
.fields
  Массив_Ответственное_лицо_Должность [Номер_ответственного_лица]
  Массив_Ответственное_лицо_ФИО       [Номер_ответственного_лица]
.endfields

 Б@@@@@@@@@@@@@@@@@@@@@@@@@ Б  ____________________     Д@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Д
                                (подпись)                            (И.О.Фамилия)
.}
.}
 Ш
.EndForm

!=============================================================================
.LinkForm 'OsItog_06' Prototype is 'ositog'
!=============================================================================
.NameInList 'Регистр учета амортизации (с нарастающим итогом)'
.Group 'Регистр учета амортизации НМА'
.p 60
.defo landscape
.var
  nRecKatOs   : comp;
  currArcDate : date;
  aMonthSum   : array[1..12] of double;
  currMonth   : word;
  currOtchPer : date;
  bUseKatOs   : boolean;
  dPoprKoef   : double;
  dStoim      : double;
  dIznos      : double;
  dFullIznos  : double;
  dOstStoim   : double;
  dBazStoim   : double;
  dSrokPol    : double;
  dSrokOst    : double;
  dSumAmort   : double;
  wEdIzmSrok  : word;
  i           : integer;
  sBlank      : string;
  wFormIzn    : word;
.endvar
#ResponsibleLinkVar
.create view NalAmort
as select *
from
  KatOs, ArcIznos, SpKatOs, NastrOs, VidNorma,
  Synonym OsAlg OsAlgKat,
  Synonym OsAlg OsAlgArc
where
((
  nRecKatOs       == KatOs.nRec        and
  KatOs.nRec      == ArcIznos.cKatOs   and
  nRec_NastrOs    == ArcIznos.cNastrOs and
  currArcDate     == ArcIznos.Data     and
  KatOs.nRec      == SpKatOs.cKatOs    and
  nRec_NastrOs    == SpKatOs.cNastrOs  and
  SpKatos.cMetod  == OsAlgKat.nRec     and
  ArcIznos.cMetod == OsAlgArc.nRec     and
  nRec_NastrOs    == NastrOs.nRec      and
  KatOs.cVid      == VidNorma.nRec
))
;
.[h Skip
                                                              Лист @Np@
.]h
.{
#ResponsibleLinkInit(OsItog)
.Fields
CommonFormHeader
Дата_с
Дата_по
Наименование_организации
Метод
Ф_делитель
Делитель_прописью
Валюта_метода
Группировка
Сортировка
!---------------- FilterOS
Фильтр
!---------------- GruppaOS
Ветка
if (Итого_верх_конец <> 0, DoubleToStr(Итого_верх_конец, Формат), '')
if (Итого_верх_конец_и_выбывшие <> 0, DoubleToStr(Итого_верх_конец_и_выбывшие, Формат), '')
!---------------- NameOS
if (Longint(Дата_с)<>0, DoubleToStr(currMonth,'77') + DateToStr(Дата_с, '.YYYY'), '')
if (Выбыл_в_текущем_периоде, '*'+NalAmort.KatOs.InNum, NalAmort.KatOs.InNum)
NalAmort.KatOs.NameOs
if (bUseKatOs, NalAmort.OsAlgKat.Name, NalAmort.OsAlgArc.Name)
if (dPoprKoef <> 0, DoubleToStr(dPoprKoef, Формат), '')
if (dStoim <> 0, DoubleToStr(dStoim, Формат), '')
if (dOstStoim <> 0, DoubleToStr(dOstStoim, Формат), '')
if (dBazStoim <> 0, DoubleToStr(dBazStoim, Формат), '')
if (dSrokPol <> 0, DoubleToStr(dSrokPol, '66666'), '')
if (dSrokOst <> 0, DoubleToStr(dSrokOst, '66666'), '')
if (dSumAmort <> 0, DoubleToStr(dSumAmort, Формат), '')
!---------------- ItogOS
Итого
if (Итого_конец <> 0, DoubleToStr(Итого_конец, Формат), '')
if (Итого_конец_и_выбывшие <> 0, DoubleToStr(Итого_конец_и_выбывшие, Формат), '')

С_учетом_выбывших_в_периоде
if (Итого_конец_и_выбывшие <> 0, DoubleToStr(Итого_конец_и_выбывшие, Формат), '')
.EndFields
 Ш                                                            Лист 1
^
                             Регистр-расчет
                             Учет амортизации нематериальных активов
                             за период с ^ по ^
.begin
  if Length(Наименование_организации) <= 42
  {
    For (i := 1; i < 42 - (Length(Наименование_организации)); i := i + 1)
       sBlank := sBlank + ' ';

    Наименование_организации := Наименование_организации + sBlank;
  }

  wEdIzmSrok  := wGetTune('OS.SrokIspEdIzm');

  if (NalAmort.GetFirst NastrOs = tsOk)
    case NalAmort.NastrOs.TiDk of

      15: wFormIzn := wGetTune('OS.FormIzn');

      16: wFormIzn := wGetTune('NMA.FormIzn');

    end;
end.

  E^ E
  (наименование организации, предприятия)

Метод:                ^
Денежная единица:     ^ (^) ^
Группировка:          ^
Сортировка:           ^
Фильтры:
.{ CheckEnter FilterOS3
 ^
.}
.{
.[h
──────────┬─────────────────┬────────────────────────────┬───────────────────┬───────────────┬────────────────┬───────────────┬───────────────┬────────────────────────┬───────────────────
  Период  │   Инвентарный   │        Наименование        │     Алгоритм      │  Поправочный  │ Первоначальная │  Остаточная   │    Базовая    │Срок использования, мес.│      Сумма
          │      номер      │          объекта           │    начисления     │  коэффициент  │   стоимость    │   стоимость   │   стоимость   ├───────────┬────────────┤   амортизации
          │                 │                            │    амортизации    │               │                │               │               │ Полезный  │ Оставшийся │
──────────┴─────────────────┴────────────────────────────┴───────────────────┴───────────────┴────────────────┴───────────────┴───────────────┴───────────┴────────────┴───────────────────
.]h
.{ CheckEnter GruppaOS3
  Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б                                                                                                                     &&&&&&&&&&&&&&&&&
.{?Internal;(NeedSum1 and (Учет_выбывших <> 4 ));
                                                                                                                                                                     (* &&&&&&&&&&&&&&&&& )
!(* *)
.}
.}
.{ CheckEnter NameOS3
.begin
  dSumAmort := 0;
  nRecKatOs := KatOS_NRec;
  if (NalAmort.GetFirst KatOs <> tsOk) {};
  if (NalAmort.GetFirst ArcIznos <> tsOk) {};
  if (NalAmort.GetFirst NastrOs <> tsOk) {};
  aMonthSum[1]  := Январь;
  aMonthSum[2]  := Февраль;
  aMonthSum[3]  := Март;
  aMonthSum[4]  := Апрель;
  aMonthSum[5]  := Май;
  aMonthSum[6]  := Июнь;
  aMonthSum[7]  := Июль;
  aMonthSum[8]  := Август;
  aMonthSum[9]  := Сентябрь;
  aMonthSum[10] := Октябрь;
  aMonthSum[11] := Ноябрь;
  aMonthSum[12] := Декабрь;
  currMonth := 0;
end.
.{while currMonth < 12
.begin
  currMonth := currMonth + 1;
  currArcDate := date(Last_Day(date(1,currMonth,Year(Дата_с))), currMonth, Year(Дата_с));
  if (NalAmort.GetFirst ArcIznos <> tsOk) {};
  currOtchPer := NalAmort.KatOs.OtchPer;
  if (currArcDate >= currOtchPer)
  {
    bUseKatOs  := true;
    dPoprKoef  := NalAmort.NastrOs.KIAO * NalAmort.VidNorma.Norma * NalAmort.SpKatOs.Poprkoef;
    dStoim     := if (NalAmort.NastrOs.Field4 = 0, NalAmort.SpKatOs.Stoim * NalAmort.KatOs.Kol, NalAmort.SpKatOs.Stoim);
    dIznos     := if (wFormIzn = 0, NalAmort.SpKatOs.SumIzn, NalAmort.SpKatOs.SumIzn + NalAmort.SpKatOs.SIznM);
    dFullIznos := if (NalAmort.NastrOs.Field4 = 0, dIznos * NalAmort.KatOs.Kol, dIznos);
    dSrokPol   := NalAmort.SpKatOs.SrokIsp;
    dSrokOst   := NalAmort.SpKatOs.SrokIsp - (NalAmort.SpKatOs.IspPs + NalAmort.SpKatOs.IspCur);
  }
  else
  {
    bUseKatOs  := false;
    dPoprKoef  := NalAmort.ArcIznos.KoofIz * NalAmort.ArcIznos.KoofYsk * NalAmort.ArcIznos.KoofSm;
    dStoim     := if (NalAmort.NastrOs.Field4 = 0, NalAmort.ArcIznos.Stoim * NalAmort.ArcIznos.Kol, NalAmort.ArcIznos.Stoim);
    dIznos     := if (wFormIzn = 0, NalAmort.ArcIznos.SumIzn, NalAmort.ArcIznos.SumIzn + NalAmort.ArcIznos.SIznM);
    dFullIznos := if (NalAmort.NastrOs.Field4 = 0, dIznos * NalAmort.ArcIznos.Kol, dIznos);
    dSrokPol   := NalAmort.ArcIznos.SrokIsp;
    dSrokOst   := NalAmort.ArcIznos.SrokIsp - (NalAmort.SpKatOs.IspPs + NalAmort.ArcIznos.IspCur);
  }
  if (wEdIzmSrok = 1)
  {
    dSrokPol := dSrokPol * 12;
    dSrokOst := dSrokOst * 12;
  }
  dOstStoim := dStoim - dFullIznos;
  dBazStoim := dStoim*0.2;
  if (dOstStoim >= dBazStoim) dBazStoim := 0;
  dSumAmort := dSumAmort + aMonthSum[currMonth];

end.
.{?Internal;aMonthSum[currMonth]<>0
 @@@@@@@   @@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@ &&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&& &&&&&&&&&&&&&&&    &&&&&        &&&&&    &&&&&&&&&&&&&&&&&
.}
.}
.}
.{ CheckEnter ItogOS3
  Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б                                                                                                                     &&&&&&&&&&&&&&&&&
.{?Internal;(Учет_выбывших <> 4 );
                                                                                                                                                                     (* &&&&&&&&&&&&&&&&& )
.}
!(* *)
.}
.}
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
.{?Internal;(Учет_выбывших <> 4 );
          * - с учетом выбывших в отчетном ^
.}
 Б ИТОГО                                                                                                                                                                  &&&&&&&&&&&&&&&&& Б
.{While (Номер_ответственного_лица < Количество_ответственных_лиц)
.begin
 Номер_ответственного_лица := Номер_ответственного_лица + 1;
end.
.fields
  Массив_Ответственное_лицо_Должность [Номер_ответственного_лица]
  Массив_Ответственное_лицо_ФИО       [Номер_ответственного_лица]
.endfields

 Б@@@@@@@@@@@@@@@@@@@@@@@@@ Б  ____________________     Д@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Д
                                (подпись)                            (И.О.Фамилия)
.}
.}
 Ш
.EndForm

!=============================================================================
.LinkForm 'OsItog_07' Prototype is 'ositog'
!=============================================================================
.NameInList 'Регистр учета амортизации (итоги)'
.Group 'Регистр учета амортизации ОС'
.p 60
.defo landscape
.var
  nRecKatOs   : comp;
  currArcDate : date;
  aMonthSum   : array[1..12] of double;
  currMonth   : word;
  currOtchPer : date;
  bUseKatOs   : boolean;
  dPoprKoef   : double;
  dStoim      : double;
  GrItogStoim : double;
  dIznos      : double;
  dFullIznos  : double;
  dOstStoim   : double;
  dBazStoim   : double;
  dSrokPol    : double;
  dSrokOst    : double;
  dSumAmort   : double;
  wEdIzmSrok  : word;
  dStoimSum   : double;
  dStoimSumAll: double;
  wLastMonth  : word;
  i           : integer;
  sBlank      : string;
  wFormIzn    : word;
.endvar
#ResponsibleLinkVar
.create view NalAmort
as select *
from
  KatOs, ArcIznos, SpKatOs, NastrOs, VidNorma,
  Synonym GrOs  GrOsKat,
  Synonym GrOs  GrOsArc,
  Synonym OsAlg OsAlgKat,
  Synonym OsAlg OsAlgArc
where
((
  nRecKatOs       == KatOs.nRec        and
  KatOs.nRec      == ArcIznos.cKatOs   and
  nRec_NastrOs    == ArcIznos.cNastrOs and
  currArcDate     == ArcIznos.Data     and
  KatOs.cGrup     == GrOsKat.nRec      and
  ArcIznos.cGrup  == GrOsArc.nRec      and
  KatOs.nRec      == SpKatOs.cKatOs    and
  nRec_NastrOs    == SpKatOs.cNastrOs  and
  SpKatos.cMetod  == OsAlgKat.nRec     and
  ArcIznos.cMetod == OsAlgArc.nRec     and
  nRec_NastrOs    == NastrOs.nRec      and
  KatOs.cVid      == VidNorma.nRec
))
;
.[h Skip
                                                              Лист @Np@
.]h
 Ш                                                             Лист 1
.{
#ResponsibleLinkInit(OSITOG)
.Fields
CommonFormHeader
Дата_с
Дата_по
  Наименование_организации
Метод
Ф_делитель
Делитель_прописью
Валюта_метода
Группировка
Сортировка
!---------------- FilterOS
Фильтр
!---------------- GruppaOS
Ветка
if (Итого_верх_конец <> 0, DoubleToStr(Итого_верх_конец, Формат), '')
if (Итого_верх_конец_и_выбывшие <> 0, DoubleToStr(Итого_верх_конец_и_выбывшие, Формат), '')
!---------------- NameOS
if (Longint(Дата_с)<>0, DoubleToStr(currMonth,'77') + DateToStr(Дата_с, '.YYYY'), '')
if (Выбыл_в_текущем_периоде, '*'+NalAmort.KatOs.InNum, NalAmort.KatOs.InNum)
NalAmort.KatOs.NameOs
if (bUseKatOs, NalAmort.GrOsKat.NameGr, NalAmort.GrOsArc.NameGr)
if (bUseKatOs, NalAmort.OsAlgKat.Name, NalAmort.OsAlgArc.Name)
if (dPoprKoef <> 0, DoubleToStr(dPoprKoef, Формат), '')
if (dStoim <> 0, DoubleToStr(dStoim, Формат), '')
if (dBazStoim <> 0, DoubleToStr(dBazStoim, Формат), '')
if (dSrokPol <> 0, DoubleToStr(dSrokPol, '66666'), '')
if (dSrokOst <> 0, DoubleToStr(dSrokOst, '66666'), '')
if (dSumAmort <> 0, DoubleToStr(dSumAmort, Формат), '')
!---------------- ItogOS
Итого
if (GrItogStoim <> 0, DoubleToStr(GrItogStoim, Формат), '')
if (Итого_конец <> 0, DoubleToStr(Итого_конец, Формат), '')
if (Итого_конец_и_выбывшие <> 0, DoubleToStr(Итого_конец_и_выбывшие, Формат), '')

С_учетом_выбывших_в_периоде
if (dStoimSumAll <> 0, DoubleToStr(dStoimSumAll, Формат), '')
if (Итого_конец_и_выбывшие <> 0, DoubleToStr(Итого_конец_и_выбывшие, Формат), '')
.EndFields
^
                             Регистр-расчет
                             Учет амортизации основных средств (итоги)
                             за период с ^ по ^
.begin
  if Length(Наименование_организации) <= 42
  {
    For (i := 1; i < 42 - (Length(Наименование_организации)); i := i + 1)
       sBlank := sBlank + ' ';

    Наименование_организации := Наименование_организации + sBlank;
  }

  wEdIzmSrok  := wGetTune('OS.SrokIspEdIzm');

  if (NalAmort.GetFirst NastrOs = tsOk)
    case NalAmort.NastrOs.TiDk of

      15: wFormIzn := wGetTune('OS.FormIzn');

      16: wFormIzn := wGetTune('NMA.FormIzn');

    end;
end.

  E^ E
  (наименование организации, предприятия)

Метод:                ^
Денежная единица:     ^ (^) ^
Группировка:          ^
Сортировка:           ^
Фильтры:
.{ CheckEnter FilterOS3
 ^
.}
.{
.[h
──────────┬─────────────────┬────────────────────────────┬─────────────────┬───────────────────┬───────────────┬────────────────┬───────────────┬────────────────────────┬───────────────────
  Период  │   Инвентарный   │        Наименование        │    Группа ОС    │     Алгоритм      │  Поправочный  │ Первоначальная │    Базовая    │Срок использования, мес.│      Сумма
          │      номер      │          объекта           │                 │    начисления     │  коэффициент  │   стоимость    │   стоимость   ├───────────┬────────────┤   амортизации
          │                 │                            │                 │    амортизации    │               │                │               │ Полезный  │ Оставшийся │
──────────┴─────────────────┴────────────────────────────┴─────────────────┴───────────────────┴───────────────┴────────────────┴───────────────┴───────────┴────────────┴───────────────────
.]h
.{ CheckEnter GruppaOS3
  Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б                                                                                                                       &&&&&&&&&&&&&&&&&
.{?Internal;(NeedSum1 and (Учет_выбывших <> 4 ));
                                                                                                                                                                       (* &&&&&&&&&&&&&&&&& )
!(* *)
.}
.}
.{ CheckEnter NameOS3
.begin
  wLastMonth := 0;
  dSumAmort := 0;
  nRecKatOs := KatOS_NRec;
  if (NalAmort.GetFirst KatOs <> tsOk) {};
  if (NalAmort.GetFirst ArcIznos <> tsOk) {};
  if (NalAmort.GetFirst NastrOs <> tsOk) {};
  aMonthSum[1]  := Январь;
  aMonthSum[2]  := Февраль;
  aMonthSum[3]  := Март;
  aMonthSum[4]  := Апрель;
  aMonthSum[5]  := Май;
  aMonthSum[6]  := Июнь;
  aMonthSum[7]  := Июль;
  aMonthSum[8]  := Август;
  aMonthSum[9]  := Сентябрь;
  aMonthSum[10] := Октябрь;
  aMonthSum[11] := Ноябрь;
  aMonthSum[12] := Декабрь;
  dStoimSum := 0;
  currMonth := 0;

  while (currMonth < 12)
    do
    {
      currMonth := currMonth + 1;
      if (aMonthSum[currMonth] <> 0) wLastMonth := currMonth;
    }//do

  currMonth := 0;
end.
.{while currMonth < 12
.begin
  currMonth := currMonth + 1;
  currArcDate := date(Last_Day(date(1,currMonth,Year(Дата_с))), currMonth, Year(Дата_с));
  if (NalAmort.GetFirst ArcIznos <> tsOk) {};
  currOtchPer := NalAmort.KatOs.OtchPer;
  if (currArcDate >= currOtchPer)
  {
    bUseKatOs  := true;
    dPoprKoef  := NalAmort.NastrOs.KIAO * NalAmort.VidNorma.Norma * NalAmort.SpKatOs.Poprkoef;
    dStoim     := if (NalAmort.NastrOs.Field4 = 0, NalAmort.SpKatOs.Stoim * NalAmort.KatOs.Kol, NalAmort.SpKatOs.Stoim);
    dIznos     := if (wFormIzn = 0, NalAmort.SpKatOs.SumIzn, NalAmort.SpKatOs.SumIzn + NalAmort.SpKatOs.SIznM);
    dFullIznos := if (NalAmort.NastrOs.Field4 = 0, dIznos * NalAmort.KatOs.Kol, dIznos);
    dSrokPol   := NalAmort.SpKatOs.SrokIsp;
    dSrokOst   := NalAmort.SpKatOs.SrokIsp - (NalAmort.SpKatOs.IspPs + NalAmort.SpKatOs.IspCur);
  }
  else
  {
    bUseKatOs  := false;
    dPoprKoef  := NalAmort.ArcIznos.KoofIz * NalAmort.ArcIznos.KoofYsk * NalAmort.ArcIznos.KoofSm;
    dStoim     := if (NalAmort.NastrOs.Field4 = 0, NalAmort.ArcIznos.Stoim * NalAmort.ArcIznos.Kol, NalAmort.ArcIznos.Stoim);
    dIznos     := if (wFormIzn = 0, NalAmort.ArcIznos.SumIzn, NalAmort.ArcIznos.SumIzn + NalAmort.ArcIznos.SIznM);
    dFullIznos := if (NalAmort.NastrOs.Field4 = 0, dIznos * NalAmort.ArcIznos.Kol, dIznos);
    dSrokPol   := NalAmort.ArcIznos.SrokIsp;
    dSrokOst   := NalAmort.ArcIznos.SrokIsp - (NalAmort.SpKatOs.IspPs + NalAmort.ArcIznos.IspCur);
  }
  if (wEdIzmSrok = 1)
  {
    dSrokPol := dSrokPol * 12;
    dSrokOst := dSrokOst * 12;
  }
  dOstStoim := dStoim - dFullIznos;

  if (aMonthSum[currMonth] <> 0)
    dStoimSum:= dStoim;

  dBazStoim := dStoim*0.2;
  if (dOstStoim >= dBazStoim) dBazStoim := 0;
  dSumAmort := dSumAmort + aMonthSum[currMonth];

end.
.{?Internal; (currMonth = wLastMonth)
 @@@@@@@   @@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@ &&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&    &&&&&        &&&&&    &&&&&&&&&&&&&&&&&
.}
.}
.begin
  GrItogStoim := GrItogStoim + dStoimSum;
  dStoimSumAll := dStoimSumAll + dStoimSum
end.
.}
.{ CheckEnter ItogOS3
  Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б                                                              &&&&&&&&&&&&&&&                                          &&&&&&&&&&&&&&&&&
.begin
  GrItogStoim := 0;
end.
.{?Internal;(Учет_выбывших <> 4 );
                                                                                                                                                                       (* &&&&&&&&&&&&&&&&& )
.}
!(* *)
.}
.}
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
.{?Internal;(Учет_выбывших <> 4 );
          * - с учетом выбывших в отчетном ^
.}
 Б ИТОГО                                                                                                           &&&&&&&&&&&&&&&                                          &&&&&&&&&&&&&&&&& Б
.{While (Номер_ответственного_лица < Количество_ответственных_лиц)
.begin
 Номер_ответственного_лица := Номер_ответственного_лица + 1;
end.
.fields
  Массив_Ответственное_лицо_Должность [Номер_ответственного_лица]
  Массив_Ответственное_лицо_ФИО       [Номер_ответственного_лица]
.endfields

 Б@@@@@@@@@@@@@@@@@@@@@@@@@ Б  ____________________     Д@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Д
                                (подпись)                            (И.О.Фамилия)
.}
.}
 Ш
.EndForm

!=============================================================================
.LinkForm 'OsItog_08' Prototype is 'ositog'
!=============================================================================
.NameInList 'Регистр учета амортизации (итоги)'
.Group 'Регистр учета амортизации НМА'
.p 60
.defo landscape
.var
  nRecKatOs   : comp;
  currArcDate : date;
  aMonthSum   : array[1..12] of double;
  currMonth   : word;
  currOtchPer : date;
  bUseKatOs   : boolean;
  dPoprKoef   : double;
  dStoim      : double;
  dIznos      : double;
  dFullIznos  : double;
  dOstStoim   : double;
  dBazStoim   : double;
  dSrokPol    : double;
  dSrokOst    : double;
  dSumAmort   : double;
  wEdIzmSrok  : word;
  wLastMonth  : word;
  i           : integer;
  sBlank      : string;
  wFormIzn    : word;
.endvar
#ResponsibleLinkVar
.create view NalAmort
as select *
from
  KatOs, ArcIznos, SpKatOs, NastrOs, VidNorma,
  Synonym OsAlg OsAlgKat,
  Synonym OsAlg OsAlgArc
where
((
  nRecKatOs       == KatOs.nRec        and
  KatOs.nRec      == ArcIznos.cKatOs   and
  nRec_NastrOs    == ArcIznos.cNastrOs and
  currArcDate     == ArcIznos.Data     and
  KatOs.nRec      == SpKatOs.cKatOs    and
  nRec_NastrOs    == SpKatOs.cNastrOs  and
  SpKatos.cMetod  == OsAlgKat.nRec     and
  ArcIznos.cMetod == OsAlgArc.nRec     and
  nRec_NastrOs    == NastrOs.nRec      and
  KatOs.cVid      == VidNorma.nRec
))
;
.[h Skip
                                                              Лист @Np@
.]h
.{
#ResponsibleLinkInit(OsItog)
.Fields
CommonFormHeader
Дата_с
Дата_по
Наименование_организации
Метод
Ф_делитель
Делитель_прописью
Валюта_метода
Группировка
Сортировка
!---------------- FilterOS
Фильтр
!---------------- GruppaOS
Ветка
if (Итого_верх_конец <> 0, DoubleToStr(Итого_верх_конец, Формат), '')
if (Итого_верх_конец_и_выбывшие <> 0, DoubleToStr(Итого_верх_конец_и_выбывшие, Формат), '')
!---------------- NameOS
if (Longint(Дата_с)<>0, DoubleToStr(currMonth,'77') + DateToStr(Дата_с, '.YYYY'), '')
if (Выбыл_в_текущем_периоде, '*'+NalAmort.KatOs.InNum, NalAmort.KatOs.InNum)
NalAmort.KatOs.NameOs
if (bUseKatOs, NalAmort.OsAlgKat.Name, NalAmort.OsAlgArc.Name)
if (dPoprKoef <> 0, DoubleToStr(dPoprKoef, Формат), '')
if (dStoim <> 0, DoubleToStr(dStoim, Формат), '')
if (dBazStoim <> 0, DoubleToStr(dBazStoim, Формат), '')
if (dSrokPol <> 0, DoubleToStr(dSrokPol, '66666'), '')
if (dSrokOst <> 0, DoubleToStr(dSrokOst, '66666'), '')
if (dSumAmort <> 0, DoubleToStr(dSumAmort, Формат), '')
!---------------- ItogOS
Итого
if (Итого_конец <> 0, DoubleToStr(Итого_конец, Формат), '')
if (Итого_конец_и_выбывшие <> 0, DoubleToStr(Итого_конец_и_выбывшие, Формат), '')

С_учетом_выбывших_в_периоде
if (Итого_конец_и_выбывшие <> 0, DoubleToStr(Итого_конец_и_выбывшие, Формат), '')
.EndFields
 Ш                                                            Лист 1
^
                             Регистр-расчет
                             Учет амортизации нематериальных активов (итоги)
                             за период с ^ по ^
.begin
  if Length(Наименование_организации) <= 42
  {
    For (i := 1; i < 42 - (Length(Наименование_организации)); i := i + 1)
       sBlank := sBlank + ' ';

    Наименование_организации := Наименование_организации + sBlank;
  }

  wEdIzmSrok  := wGetTune('OS.SrokIspEdIzm');

  if (NalAmort.GetFirst NastrOs = tsOk)
    case NalAmort.NastrOs.TiDk of

      15: wFormIzn := wGetTune('OS.FormIzn');

      16: wFormIzn := wGetTune('NMA.FormIzn');

    end;
end.

  E^ E
  (наименование организации, предприятия)

Метод:                ^
Денежная единица:     ^ (^) ^
Группировка:          ^
Сортировка:           ^
Фильтры:
.{ CheckEnter FilterOS3
 ^
.}
.{
.[h
──────────┬─────────────────┬────────────────────────────┬───────────────────┬───────────────┬────────────────┬───────────────┬────────────────────────┬───────────────────
  Период  │   Инвентарный   │        Наименование        │     Алгоритм      │  Поправочный  │ Первоначальная │    Базовая    │Срок использования, мес.│      Сумма
          │      номер      │          объекта           │    начисления     │  коэффициент  │   стоимость    │   стоимость   ├───────────┬────────────┤   амортизации
          │                 │                            │    амортизации    │               │                │               │ Полезный  │ Оставшийся │
──────────┴─────────────────┴────────────────────────────┴───────────────────┴───────────────┴────────────────┴───────────────┴───────────┴────────────┴───────────────────
.]h
.{ CheckEnter GruppaOS3
  Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б                                                                                                     &&&&&&&&&&&&&&&&&
.{?Internal;(NeedSum1 and (Учет_выбывших <> 4 ));
                                                                                                                                                     (* &&&&&&&&&&&&&&&&& )
!(* *)
.}
.}
.{ CheckEnter NameOS3
.begin
  wLastMonth := 0;
  dSumAmort := 0;
  nRecKatOs := KatOS_NRec;
  if (NalAmort.GetFirst KatOs <> tsOk) {};
  if (NalAmort.GetFirst ArcIznos <> tsOk) {};
  if (NalAmort.GetFirst NastrOs <> tsOk) {};

  aMonthSum[1]  := Январь;
  aMonthSum[2]  := Февраль;
  aMonthSum[3]  := Март;
  aMonthSum[4]  := Апрель;
  aMonthSum[5]  := Май;
  aMonthSum[6]  := Июнь;
  aMonthSum[7]  := Июль;
  aMonthSum[8]  := Август;
  aMonthSum[9]  := Сентябрь;
  aMonthSum[10] := Октябрь;
  aMonthSum[11] := Ноябрь;
  aMonthSum[12] := Декабрь;

  currMonth := 0;
  while (currMonth < 12)
    do
    {
      currMonth := currMonth + 1;
      if (aMonthSum[currMonth] <> 0) wLastMonth := currMonth;
    }//do

  currMonth := 0;
end.
.{while currMonth < 12
.begin
  currMonth := currMonth + 1;
  currArcDate := date(Last_Day(date(1,currMonth,Year(Дата_с))), currMonth, Year(Дата_с));
  if (NalAmort.GetFirst ArcIznos <> tsOk) {};
  currOtchPer := NalAmort.KatOs.OtchPer;
  if (currArcDate >= currOtchPer)
  {
    bUseKatOs  := true;
    dPoprKoef  := NalAmort.NastrOs.KIAO * NalAmort.VidNorma.Norma * NalAmort.SpKatOs.Poprkoef;
    dStoim     := if (NalAmort.NastrOs.Field4 = 0, NalAmort.SpKatOs.Stoim * NalAmort.KatOs.Kol, NalAmort.SpKatOs.Stoim);
    dIznos     := if (wFormIzn = 0, NalAmort.SpKatOs.SumIzn, NalAmort.SpKatOs.SumIzn + NalAmort.SpKatOs.SIznM);
    dFullIznos := if (NalAmort.NastrOs.Field4 = 0, dIznos * NalAmort.KatOs.Kol, dIznos);
    dSrokPol   := NalAmort.SpKatOs.SrokIsp;
    dSrokOst   := NalAmort.SpKatOs.SrokIsp - (NalAmort.SpKatOs.IspPs + NalAmort.SpKatOs.IspCur);
  }
  else
  {
    bUseKatOs  := false;
    dPoprKoef  := NalAmort.ArcIznos.KoofIz * NalAmort.ArcIznos.KoofYsk * NalAmort.ArcIznos.KoofSm;
    dStoim     := if (NalAmort.NastrOs.Field4 = 0, NalAmort.ArcIznos.Stoim * NalAmort.ArcIznos.Kol, NalAmort.ArcIznos.Stoim);
    dIznos     := if (wFormIzn = 0, NalAmort.ArcIznos.SumIzn, NalAmort.ArcIznos.SumIzn + NalAmort.ArcIznos.SIznM);
    dFullIznos := if (NalAmort.NastrOs.Field4 = 0, dIznos * NalAmort.ArcIznos.Kol, dIznos);
    dSrokPol   := NalAmort.ArcIznos.SrokIsp;
    dSrokOst   := NalAmort.ArcIznos.SrokIsp - (NalAmort.SpKatOs.IspPs + NalAmort.ArcIznos.IspCur);
  }
  if (wEdIzmSrok = 1)
  {
    dSrokPol := dSrokPol * 12;
    dSrokOst := dSrokOst * 12;
  }
  dOstStoim := dStoim - dFullIznos;
  dBazStoim := dStoim*0.2;
  if (dOstStoim >= dBazStoim) dBazStoim := 0;
  dSumAmort := dSumAmort + aMonthSum[currMonth];

end.
.{?Internal; (currMonth = wLastMonth)
 @@@@@@@   @@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@ &&&&&&&&&&&&&&& &&&&&&&&&&&&&&&& &&&&&&&&&&&&&&&    &&&&&        &&&&&    &&&&&&&&&&&&&&&&&
.}
.}
.}
.{ CheckEnter ItogOS3
  Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б                                                                                                     &&&&&&&&&&&&&&&&&
.{?Internal;(Учет_выбывших <> 4 );
                                                                                                                                                     (* &&&&&&&&&&&&&&&&& )
.}
!(* *)
.}
.}
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
.{?Internal;(Учет_выбывших <> 4 );
          * - с учетом выбывших в отчетном ^
.}
 Б ИТОГО                                                                                                                                                  &&&&&&&&&&&&&&&&& Б
.{While (Номер_ответственного_лица < Количество_ответственных_лиц)
.begin
 Номер_ответственного_лица := Номер_ответственного_лица + 1;
end.
.fields
  Массив_Ответственное_лицо_Должность [Номер_ответственного_лица]
  Массив_Ответственное_лицо_ФИО       [Номер_ответственного_лица]
.endfields

 Б@@@@@@@@@@@@@@@@@@@@@@@@@ Б  ____________________     Д@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Д
                                (подпись)                            (И.О.Фамилия)
.}
.}
 Ш
.EndForm

!=============================================================================
.LinkForm 'OsItog_09' Prototype is 'ositog'
!=============================================================================
.NameInList 'Фиксированные активы, введенные в эксплуатацию'
.Group 'Налоговые группы <<Казахстан>>'
.p 60
.defo landscape
.var
  nRecKatOs   : comp;
  dSumAmort   : double;
  wLastMonth  : word;
  aMonthSum   : array[1..12] of double;
  currMonth   : word;
.endvar
#ResponsibleLinkVar
.create view loKaz09
as select *
from
  KatOs, NalGrOs, KatNalGr,
  Synonym KatNalGr KatNalGrHigher
where
((
  nRecKatOs         == KatOs.nRec          and
  KatOs.nRec        == NalGrOs.cKatOs      and
  NalGrOs.cKatNalGr == KatNalGr.nRec       and
  KatNalGr.cGroup   == KatNalGrHigher.nRec
))
;
.[h Skip
                                                              Лист @Np@
.]h
.{
#ResponsibleLinkInit(OsItog)
.Fields
CommonFormHeader
Дата_с
Дата_по
Метод
Ф_делитель
Делитель_прописью
Валюта_метода
Группировка
Сортировка
!---------------- FilterOS
Фильтр
!---------------- GruppaOS
Ветка
if (Итого_верх_стоимость <> 0, DoubleToStr(Итого_верх_стоимость, Формат), '')
if (Итого_верх_стоимость <> 0,
  if (Итого_верх_конец <> 0, DoubleToStr(Итого_верх_конец, Формат), ''),
  '')
if ((Итого_верх_стоимость - Итого_верх_конец) > 0,
  DoubleToStr((Итого_верх_стоимость - Итого_верх_конец), Формат),
  '')
if (Итого_верх_стоимость_и_выбывшие <> 0, DoubleToStr(Итого_верх_стоимость_и_выбывшие, Формат), '')
if (Итого_верх_конец_и_выбывшие <> 0, DoubleToStr(Итого_верх_конец_и_выбывшие, Формат), '')
if ((Итого_верх_стоимость_и_выбывшие - Итого_верх_конец_и_выбывшие) > 0,
  DoubleToStr((Итого_верх_стоимость_и_выбывшие - Итого_верх_конец_и_выбывшие), Формат),
  '')
!---------------- NameOS
if (Выбыл_в_текущем_периоде, '*'+Тело, Тело)
if (longint(loKaz09.KatOs.DatEk)<>0,DateToStr(loKaz09.KatOs.DatEk, 'DD/MM/YYYY'),'')
loKaz09.KatNalGrHigher.Num
loKaz09.KatNalGr.Num
if (loKaz09.KatNalGr.NormAm<>0, Trim(DoubleToStr(loKaz09.KatNalGr.NormAm, '666')), '')
if (loKaz09.KatNalGr.NormAm<>0, Trim(DoubleToStr(loKaz09.KatNalGr.NormAm*2, '666')), '')
if (Стоимость <> 0, DoubleToStr(Стоимость, Формат), '')
if (dSumAmort <> 0, DoubleToStr(dSumAmort, Формат), '')
if ((Стоимость - dSumAmort) <> 0, DoubleToStr((Стоимость - dSumAmort), Формат), '')
if (longint(loKaz09.KatOs.DatV)<>0,DateToStr(loKaz09.KatOs.DatV, 'DD/MM/YYYY'),'')

Тело
if (longint(loKaz09.KatOs.DatEk)<>0,DateToStr(loKaz09.KatOs.DatEk, 'DD/MM/YYYY'),'')
loKaz09.KatNalGrHigher.Num
loKaz09.KatNalGr.Num
if (loKaz09.KatNalGr.NormAm<>0, Trim(DoubleToStr(loKaz09.KatNalGr.NormAm, '666')), '')
if (loKaz09.KatNalGr.NormAm<>0, Trim(DoubleToStr(loKaz09.KatNalGr.NormAm*2, '666')), '')
if (Стоимость <> 0, DoubleToStr(Стоимость, Формат), '')
if (dSumAmort <> 0, DoubleToStr(dSumAmort, Формат), '')
if ((Стоимость - dSumAmort) <> 0, DoubleToStr((Стоимость - dSumAmort), Формат), '')
if (longint(loKaz09.KatOs.DatV)<>0,DateToStr(loKaz09.KatOs.DatV, 'DD/MM/YYYY'),'')
!---------------- ItogOS
Итого
if (Итого_стоимость <> 0, DoubleToStr(Итого_стоимость, Формат), '')
if (Итого_стоимость <> 0,
  if (Итого_конец <> 0, DoubleToStr(Итого_конец, Формат), ''),
  '')
if ((Итого_стоимость - Итого_конец) > 0,
  DoubleToStr((Итого_стоимость - Итого_конец), Формат),
  '')
if (Итого_стоимость_и_выбывшие <> 0, DoubleToStr(Итого_стоимость_и_выбывшие, Формат), '')
if (Итого_конец_и_выбывшие <> 0, DoubleToStr(Итого_конец_и_выбывшие, Формат), '')
if ((Итого_стоимость_и_выбывшие - Итого_конец_и_выбывшие) > 0,
  DoubleToStr((Итого_стоимость_и_выбывшие - Итого_конец_и_выбывшие), Формат),
  '')

С_учетом_выбывших_в_периоде

.EndFields
 Ш                                                            Лист 1
^
    Раздел               Фиксированные активы, введенные в эксплуатацию
                             за период с ^ по ^

Метод:                ^
Денежная единица:     ^ (^) ^
Группировка:          ^
Сортировка:           ^
Фильтры:
.{ CheckEnter FilterOS3
 ^
.}
.{
.[h
─┬───┬─┬──────────────────────────────────────────────────────────────────┬─┬──────────┬─┬──────┬─┬──────┬─┬──────────┬─┬──────────┬─┬────────────┬─┬──────────────────┬─┬──────────────────┬─┬──────────────────┬─┬────────────
 │ N │ │                          Наименование                            │ │   Дата   │ │  N   │ │  N   │ │Предельная│ │Применяе- │ │  Двойная   │ │    Стоимость     │ │      Сумма       │ │    Остаточная    │ │    Дата
 │   │ │                      фиксированных активов                       │ │  ввода   │ │группы│ │ под- │ │  норма   │ │мая норма │ │   норма    │ │   поступивших    │ │ амортизационных  │ │    стоимость     │ │  выбытия
 │   │ │                                                                  │ │          │ │      │ │группы│ │амортиза- │ │амортиза- │ │ амортиза-  │ │  фиксированнных  │ │   отчислений,    │ │  фиксированных   │ │
 │   │ │                                                                  │ │          │ │      │ │      │ │ ционных  │ │ ционных  │ │  ционных   │ │     активов      │ │    подлежащих    │ │     активов      │ │
 │   │ │                                                                  │ │          │ │      │ │      │ │отчислений│ │отчислений│ │ отчислений │ │                  │ │      вычету      │ │      (I-J)       │ │
 │   │ │                                                                  │ │          │ │      │ │      │ │          │ │   (%)    │ │   (G*2)    │ │                  │ │      (I*H)       │ │                  │ │
A│   │B│                                                                  │C│          │D│      │E│      │F│          │G│          │H│            │I│                  │J│                  │K│                  │L│
─┴───┴─┴──────────────────────────────────────────────────────────────────┴─┴──────────┴─┴──────┴─┴──────┴─┴──────────┴─┴──────────┴─┴────────────┴─┴──────────────────┴─┴──────────────────┴─┴──────────────────┴─┴────────────
.]h
.{ CheckEnter GruppaOS3
  Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б                                                                                                  &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&&
.{?Internal;(NeedSum1 and (Учет_выбывших <> 4 ));
                                                                                                                                                  (* &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&& )
!(* *)
.}
.}
.{ CheckEnter NameOS3
.begin
  wLastMonth := 0;
  dSumAmort := 0;
  nRecKatOs := KatOS_NRec;
  if (loKaz09.GetFirst KatOs <> tsOk) {};
  if (loKaz09.GetFirst NalGrOs <> tsOk) {};
  if (loKaz09.GetFirst KatNalGr <> tsOk) {};
  if (loKaz09.GetFirst KatNalGrHigher <> tsOk) {};

  aMonthSum[1]  := Январь;
  aMonthSum[2]  := Февраль;
  aMonthSum[3]  := Март;
  aMonthSum[4]  := Апрель;
  aMonthSum[5]  := Май;
  aMonthSum[6]  := Июнь;
  aMonthSum[7]  := Июль;
  aMonthSum[8]  := Август;
  aMonthSum[9]  := Сентябрь;
  aMonthSum[10] := Октябрь;
  aMonthSum[11] := Ноябрь;
  aMonthSum[12] := Декабрь;

  currMonth := 0;
  while (currMonth < 12)
    do
    {
      currMonth := currMonth + 1;
      if (aMonthSum[currMonth] <> 0) wLastMonth := currMonth;
    }//do

  currMonth := 0;
end.
.{while currMonth < 12
.begin
  currMonth := currMonth + 1;
  dSumAmort := dSumAmort + aMonthSum[currMonth];
end.
.{?Internal; (currMonth = wLastMonth)
        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@     @@@      @@@                    &&&           &&&        &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&&    @@@@@@@@@@
.}
.}
.{?Internal; (wLastMonth = 0)
        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@     @@@      @@@                    &&&           &&&        &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&&    @@@@@@@@@@
.}
.}
.{ CheckEnter ItogOS3
  Б@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Б                                                                                                  &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&&
.{?Internal;(Учет_выбывших <> 4 );
                                                                                                                                                  (* &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&&   &&&&&&&&&&&&&&&&&& )
.}
!(* *)
.}
.}
.{?Internal;(Учет_выбывших <> 4 );
          * - с учетом выбывших в отчетном ^
.}
.} Ш
.EndForm

#include OsItogExt.frn
