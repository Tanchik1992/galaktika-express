//******************************************************************************
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Логистика - Документы-основания
// расширенная информация
//******************************************************************************

var piExAttr: iExtAttr;

Procedure ButtonPayments;
{
  if UpdateTable
    {
      RunInterface('SeeFin', StepDoc.NRec);
      RereadRecord(#BaseDoc);
    }
}

//******************************************************************************

#doc
Окно расширенной информации по ДО
#end
Window  wDopAttr 'Документ-основание: расширенная информация' escClose;
  Show at (, , 73, 27);

//******************************************************************************

Panel p1;
  Show at (, , , 16);
  Table BaseDoc;

Screen scwDopAttrBS (, , sci1378Esc);

Fields
//------------------------------------------------------------------------------
  MyOrgDogRole
                : skip;
//------------------------------------------------------------------------------
  MyOrgDogName
                : skip, {Font = {Bold = TRUE}};
//------------------------------------------------------------------------------
  if (BaseDoc.Direct = 1, 'Платежи произвести на счет в банке ','Платежи произвести со счета в банке')
                : skip;
//------------------------------------------------------------------------------
  MyBank.Name
                ('Наименование банка', hcKouDocFBank);
//------------------------------------------------------------------------------
  sGetTune('KatOrg.FldView.MFO')
                : skip;
//------------------------------------------------------------------------------
  MyBank.MFO1
                ('Код МФО/БИК банка', hcKouDocFMFO);
//------------------------------------------------------------------------------
  MyBank.Schet1
                ('Расчетный счет', hcKouDocFSch1);
//------------------------------------------------------------------------------
  MyBank.MFO2
                ('Код РКЦ банка', hcKouDocFRKC);
//------------------------------------------------------------------------------
  MyBank.Schet2
                ('Расчетный счет РКЦ', hcKouDocFSch2);
//------------------------------------------------------------------------------
  Dogovor.NoDoc
                ('Номер договора', hcKouDocFDog): protect;
//------------------------------------------------------------------------------
  Dogovor.dDoc
                ('Дата заключения договора', hcKouDocFDog, sci178Esc): [, 'DD/MM/YYYY'], protect;
//------------------------------------------------------------------------------
  AttrDogD.SUBJECT1
                ('Предмет договора', hcKouDocFDog, sci178Esc)
                : Protect;
//------------------------------------------------------------------------------
  AppDogovor.NoDoc
                ('Номер соглашения', hcKouDocFDog): protect;
//------------------------------------------------------------------------------
  AppDogovor.dDoc
                ('Дата заключения соглашения', hcKouDocFDog, sci178Esc): [, 'DD/MM/YYYY'], protect;
//------------------------------------------------------------------------------
  AttrDogS.SUBJECT1
                ('Предмет соглашения', hcKouDocFDog, sci178Esc)
                : Protect;
//------------------------------------------------------------------------------
  CalPlan.NoDoc
                ('Номер пункта календарного плана', hcKouDocFDog): protect;
//------------------------------------------------------------------------------
  CalPlan.dInput
                ('Дата ввода пункта календарного плана', hcKouDocFDog, sci178Esc): [, 'DD/MM/YYYY'], protect;
//------------------------------------------------------------------------------
  piExAttr.mGetAttr(coCalPlan, BaseDoc.cCalPlan, 'НИОКР. Наименование этапа')
                ('Наименование этапа', hcKouDocFDog, sci178Esc)
                : Protect;
//------------------------------------------------------------------------------
  KuratPodr.Name
                ('Курирующее подразделение', , sci178Esc): Protect, NoDel;
//------------------------------------------------------------------------------
  if (BaseDoc.Direct = 1, 'Адрес плательщика', 'Адрес поставщика ')
                : skip;
//------------------------------------------------------------------------------
  KatOrg.Addr
                : skip;
//------------------------------------------------------------------------------
  KatOrg.Tel
                : skip;
//------------------------------------------------------------------------------
  BaseDoc.dPrice  ('Дата цен ', hcKouDocFdprice)
                : [, 'DD/MM/YYYY'], NoProtect;
//------------------------------------------------------------------------------
  StrCurse
                : skip, Right;
//------------------------------------------------------------------------------
  BaseDoc.ValCurse('Курс валюты документа для расчетов', hcKouDocFValCurse)
                : [7.3], PickButton, protect;
//------------------------------------------------------------------------------
  [KursOplTxt ''] 'Учет платежей'
                : skip;
//------------------------------------------------------------------------------
  BaseDoc.wCursForPlPor
                ('Методика определения курса для учета платежей')
                : [LIST 'по курсу на дату получения платежа',
                        'по курсу на дату перечисления платежа',
                        'по курсу документа',
                        'по курсу на дату сопроводительного документа'
                  ], protect;
//------------------------------------------------------------------------------
  StatDoc.Name
                ('Наименование категории документа', hcKouDocFKateg);
//------------------------------------------------------------------------------
  KatNazna.Name
                ('Назначение документа', hcSoprDocFNazn)
                : protect;
//------------------------------------------------------------------------------
  OtvPodr.Name
                ('Центр ответственности, ответственный за выполнение.')
                : PickButton, protect;
//******************************************************************************

Buttons
  cmValFld2, , , 'Платежные документы по документу', hcKouDocBPlat, sci178Esc;

<<
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 .@@@@@@@@@@@.@@@@@@@@@@@@@@@@`р/с`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
             .@@@@@@@@@@@@@@@@     .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                     <.   Платежи по документу   .>

`Договор`         .@@@@@@@@@@@ `от`.@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@
`Соглашение`      .@@@@@@@@@@@ `от`.@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@
`Календарный план`.@@@@@@@@@@@ `от`.@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@
`Курирующее подразделение`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 .@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@телефон/факс.@@@@@@@@@@@@@@@
`Дата цен`        .@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@
 .@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Категория ДО`    .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Назначение`      .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Центр ответственности`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end; //Screen scwDopAttrBS

//******************************************************************************

Function GetVschetpScreen: longint; forward;

#include dfd.vpp

//******************************************************************************

Procedure ResetVisibleFields;
{
#include rsv.vpp
#include doclear.vpp

  SetFormat(GetVschetpScreen);

  SelectableSpStep;

  RescanPanel(#SpStep);
}

Var IsAddDog : boolean;

Function IsMakingDOOnDog : boolean;
{
  IsMakingDOOnDog := IsAddDog;
}

//******************************************************************************

Procedure MakeDOonDogDoc;
var
//------------------------------------------------------------------------------
  pDogovor
, pAppDog
, pCalPlan
, pDoc
        : comp;
//------------------------------------------------------------------------------

  tmpS
        : string;
//------------------------------------------------------------------------------
  tmpNo   : string[20];
  tmpDat  : date;
  tmpStD  : comp;
  tmpProc : double;
  tmpW    : word;
  bNotSp  : boolean;

{
  IsAddDog := TRUE;

  if (BaseDoc.cDogovor = 0)
    Exit;

  if not IsNew AND IsValid(#BaseDoc)
    {
      if (RecordExists KatSopr = tsOk)
        Exit;

      if (RecordExists BaseFin = tsOk)
        Exit;
    }

  pDogovor := BaseDoc.cDogovor;
  pAppDog  := BaseDoc.cAppDogovor;
  pCalPlan := BaseDoc.cCalPlan;
  pDoc     := if (pCalPlan <> 0, pCalPlan , if (pAppDog <> 0, pAppDog  , pDogovor));
  tmpW     := if (pCalPlan <> 0, word(403), if (pAppDog <> 0, word(401), word(400)));
  tmpS     := if (BaseDoc.cCalPlan <> 0, 'календарного плана', if (BaseDoc.cAppDogovor <> 0, 'соглашения', 'договора'))

  if (Message('Создать ДО на основе выбранного '+tmpS+'?', Confirmation+YesNo) <> cmYes)
    Exit;

  bNotSp := FALSE;

  if (RecordExists SpDog where (( tmpW == SpDog.TiDk and
                                  pDoc == SpDog.cDoc )) <> tsOK)
    {
      bNotSp := true;

      if (Message('У '+tmpS+' отсутствует спецификация! Продолжить?',
                   Confirmation+YesNo) <> cmYes)
        Exit;
    }
  else
    {
      if (RecordExists SpDog
                where (( tmpW        == SpDog.TiDk and
                         pDoc        == SpDog.cDoc and
                         word(1)     == SpDog.PrMC and
                         double(0.0) << SpDog.Ostatok(NoIndex) )) <> tsOK)
        if (RecordExists SpDog
                  where (( tmpW        == SpDog.TiDk and
                           pDoc        == SpDog.cDoc and
                           word(2)     == SpDog.PrMC and
                           double(0.0) << SpDog.Ostatok(NoIndex) )) <> tsOK)
          {
            bNotSp := true;

            if (Message('У '+tmpS+' нет позиций спецификации со свободным остатком! Продолжить?',
                         Confirmation+YesNo) <> cmYes)
              Exit;
          }
    }

  tmpDat  := BaseDoc.dDoc;
  tmpNo   := BaseDoc.NoDoc;
  tmpStD  := BaseDoc.cStatDoc;
  tmpProc := BaseDoc.ProcOpl;

  var boProvMod : boolean;
  if BaseDoc.nRec <> comp(0)
    boProvMod := oSDfuns.CanDeleteDocument(BaseDoc.dDoc) AND
                 oSDfuns.CanModifyDocument(BaseDoc.nRec, if(BaseDoc.VidDoc = 111, 43, 53), false);

  if (BaseDoc.NRec = comp(0))
    DelLastNumDOnBaseDoc
  else
    if boProvMod
      if (not DoBaseDocDelete(FALSE))
        Exit;

// -------------------------------------------------------------------------------
//  ProcessCommand(cmInsert);
  ClearBuffer(#BaseDoc);

  BaseDoc.Direct  := if(BaseDoc.VidDoc = 111, 2, 1);
  BaseDoc.ProcOpl := if(tmpProc = 0.0, 100.0, tmpProc);

#include doset.vpp // для инкремента по SetDef ДО

  if oStatUser.Descr_Stat_U(true, if(BaseDoc.VidDoc = 111, 43, 53), CurDescr, BaseDoc.cNote)
    BaseDoc.Status := KatNotes.Status;
  else
    BaseDoc.cNote := oNotes.GetFirstNote(word(40), BaseDoc.Status);

// -------------------------------------------------------------------------------

  BaseDoc.cDogovor    := pDogovor;
  BaseDoc.cAppDogovor := pAppDog;
  BaseDoc.cCalPlan    := pCalPlan;

  BaseDoc.dDoc     := tmpDat;
  BaseDoc.NoDoc    := tmpNo;
  BaseDoc.cStatDoc := tmpStD;

  if (BaseDoc.cCalPlan <> 0)
    {
      if bNotSp // у календарного плана нет позиций спецификации со свободным остатком
        makeDO_ByCalPlan
      else
        {
          if (Message('Копировать всю спецификацию из выбранного календарного плана?',
                       Confirmation+YesNo) = cmYes)
            makeDO_ByCalPlan
          else
            makeDO_ByCalPlanSp;
        }
    }
  else
    {
      if bNotSp // у договора нет позиций спецификации со свободным остатком
        makeDO_ByDogovor(pDoc)
      else
        {
          if (Message('Копировать всю спецификацию из выбранного '+tmpS+'?',
                       Confirmation+YesNo) = cmYes)
            makeDO_ByDogovor(pDoc)
          else
            makeDO_ByDogovorSp(pDoc);
        }
    }

  ResetVisibleFields;

  IsAddDog := FALSE;
}

//------------------------------------------------------------------------------

HandleEvent

cmDelOnProtect:
  if IsProtected(#BaseDoc) AND Not CanLinkDogovor(FALSE)
    Abort
  else
    case CurField of
    //--------------
      #StatDoc.Name:
        {
          if ((tipDo = 211) AND boGetTune('FN.isNumStatDoc') AND IsValid(tnStatDoc))
            if (Message('Изменить номер документа?', YesNo) = yes)
              {
                DelLastNumD_(111, 'Категория ('+StatDoc.StatCode+')', BaseDoc.Nodoc);

                if (wGetTune('FN.AvtoNum') <> 1)
                  BaseDoc.Nodoc := GetLastNumD(111);
                else
                  {
                    PushPos(#BaseDoc);
                    ResetBounds(#BaseDoc);

                    if ((GetLast BaseDoc
                            where (( tipDo          == BaseDoc.VidDoc AND
                                     Year(Cur_Date) == BaseDoc.YearDoc )) ordered by BaseDoc.NoDoc) = tsOk)
                      {
                        StrNum := BaseDoc.Nodoc;
                        NextNumStr(StrNum);
                      }
                    else
                      set BaseDoc.Nodoc := LPadCh('1', '0', 6);

                    SetBounds(#BaseDoc);
                    PopPos(#BaseDoc);
                    BaseDoc.NoDoc := StrNum;
                  }
              }

          set BaseDoc.cStatDoc := 0;
        }

    //--------------
      #BaseDoc.ValCurse     :
        {
          BaseDoc.ValCurse := 0;
          BaseDoc.dValCurse := 0;
          set StrCurse := 'Курс на '+string(BaseDoc.dValCurse) + ' за 1 ' + SimVolB;

          if IsValid(tnSpStep)
            GetTotalSkid(false);

          if ((BaseDoc.wCursForPlPor = 2) AND (BaseDoc.ValCurse <= 0.0001) AND (BaseDoc.TipMoney = 2))
            {
              Message('Не задан курс валюты документа для расчетов!');

              if (not NotEditpos(false))
                Abort;
            }
        }
    //--------------
      #Dogovor.NoDoc
    , #Dogovor.dDoc
    , #AppDogovor.NoDoc
    , #AppDogovor.dDoc
    , #CalPlan.NoDoc
    , #CalPlan.dInput
      :
        {
          var pDogovor, pAppDog, pCalPlan, pKatSopr: comp;

          pDogovor := BaseDoc.cDogovor;
          pAppDog  := BaseDoc.cAppDogovor;
          pCalPlan := BaseDoc.cCalPlan;
          pKatSopr := BaseDoc.cCalPlan;

          case CurField of
          //******************************************************************************
            #Dogovor.NoDoc, #Dogovor.dDoc:
              {
                pDogovor := 0;
                pAppDog  := 0;
                pCalPlan := 0;
              }
          //******************************************************************************
            #AppDogovor.NoDoc, #AppDogovor.dDoc:
              {
                pAppDog := 0;

                if ( CalPlan.cDogovor = BaseDoc.cAppDogovor )
                  pCalPlan := 0;
              }
          //******************************************************************************
            #CalPlan.NoDoc, #CalPlan.dInput:
              {
                pCalPlan := 0;
              }
          //******************************************************************************
          end;

          if ( ( pDogovor = BaseDoc.cDogovor ) AND ( pAppDog = BaseDoc.cAppDogovor ) AND ( pCalPlan = BaseDoc.cCalPlan ) )
            Exit;

          var wChange: word;

          wChange := if(BaseDoc.cDogovor    = pDogovor , 0, 1)
                   + if(BaseDoc.cAppDogovor = pAppDog  , 0, 2)
                   + if(BaseDoc.cCalPlan    = pCalPlan , 0, 4);

          var Flag: boolean; Flag := FALSE;

          if IsProtected(#BaseDoc) AND CanLinkDogovor(FALSE)
            {
              ProtectRecord(#BaseDoc, FALSE);
              Flag := TRUE;
            }

          set BaseDoc.cDogovor    := pDogovor;
          set BaseDoc.cAppDogovor := pAppDog;
          set BaseDoc.cCalPlan    := pCalPlan;

          if Flag
            {
              update current BaseDoc;

              if not IsNew AND IsValid(#BaseDoc)
                UpDateDoSoprHoz;

              ProtectRecord(#BaseDoc, TRUE);
            }

          if not IsNew AND IsValid(#BaseDoc)
            {
              update KatSopr set KatSopr.cDogovor    := pDogovor,
                                 KatSopr.cAppDogovor := pAppDog,
                                 KatSopr.cCalPlan    := pCalPlan;

              if ( (wChange and 3) <> 0 )
                _LOOP KatSopr
                  update SoprHoz where (( KatSopr.VidSopr == SoprHoz.TipDoc AND
                                          KatSopr.NRec    == SoprHoz.cSoprDoc ))
                      set SoprHoz.cDogovor    := pDogovor,
                          SoprHoz.cAppDogovor := pAppDog;

              if ( CalPlan.DirectPlat = 0 )
                pKatSopr := 0
              else
                {
                  pKatSopr := pCalPlan;
                  pCalPlan := 0;
                }

              update BaseFin set BaseFin.cDogovor    := pDogovor,
                                 BaseFin.cAppDogovor := pAppDog,
                                 BaseFin.cCalPlan    := pCalPlan;
                                 BaseFin.cKatSopr    := pKatSopr;

              if ( (wChange and 3) <> 0 )
                _LOOP BaseFin
                  update SoprHoz where (( BaseFin.cSoprHoz == SoprHoz.NRec ))
                    set SoprHoz.cDogovor    := pDogovor,
                        SoprHoz.cAppDogovor := pAppDog;
            }
        }
    //--------------
      #OtvPodr.Name:
      {
        #ifNdef __vschetpb__
        if (boGetTune('FN.isNumOtvPodr'))
          {
            DelLastNumD_(111, string(BaseDoc.cOtvPodr), BaseDoc.Nodoc);
            Set BaseDoc.Nodoc := GetLastNumD_(111, string(comp(0)));
          }
        #endif
        set BaseDoc.cOtvPodr := comp(0);
      }
    //--------------
    end; // case

cmPick:
  case CurField of
  //--------------
    #BaseDoc.ValCurse:
      {
        var dat: Date;    dat := BaseDoc.dDoc;
        var cValBD: comp; cValBD := BaseDoc.cVal;

        if (RunInterface(Cursval, cValBD, BaseDoc.ValCurse, dat, word(3)) <> cmCancel)
          {
            BaseDoc.dValCurse := dat;
            BaseDoc.ValCurse := BaseDoc.ValCurse / KlVal.SumValut;
            set StrCurse := 'Курс на ' + string(BaseDoc.dValCurse) + ' за 1 ' + SimVolB;
            RedrawPanel(#StepDoc);

            if IsValid(tnSpStep)
              GetTotalSkid(false);
          }

        if ((BaseDoc.wCursForPlPor = 2) AND (BaseDoc.ValCurse <= 0.0001) AND (BaseDoc.TipMoney = 2))
          {
            Message('Не задан курс валюты документа для расчетов!');

            if (not NotEditpos(false))
              Abort;
          }
      }
  //--------------
    #StatDoc.Name:
      {
        var sStat: string[20];

        sStat := if (IsValid(tnStatDoc), StatDoc.StatCode, '');

        var pOldStat: comp; pOldStat := BaseDoc.cStatDoc;

        if ( RunInterface('GetStatD', BaseDoc.cStatDoc) <> cmDefault )
          Exit;

        if ( ( tipDo = 211 ) AND boGetTune('FN.isNumStatDoc') AND IsValid(tnStatDoc) )
          if ( StatDoc.StatCode <> sStat )
            if ( Message('Изменить номер документа?', YesNo) = cmYes )
              {
                if ( pOldStat = 0 )
                  DelLastNumD(111, BaseDoc.NoDoc)
                else
                  DelLastNumD_(111, 'Категория (' + sStat + ')', BaseDoc.NoDoc);

                set BaseDoc.NoDoc := GetLastNumD_(111, 'Категория (' + StatDoc.StatCode + ')');
              }
      }
  //--------------
    #MyBank.Name
  , #MyBank.MFO1
  , #MyBank.MFO2
  , #MyBank.Schet1
  , #MyBank.Schet2:
       RunInterface(GetBank, coGetTune('MyOrg'), cMyBank);
  //--------------
    #Dogovor.NoDoc,
    #Dogovor.dDoc,
    #AppDogovor.NoDoc,
    #AppDogovor.dDoc,
    #CalPlan.NoDoc,
    #CalPlan.dInput:
      {
        if NullVipRef(pRunDSel)
          if not(LoadVipRef(pRunDSel, 'RunDocSelections'))
            {
              Message('Не удалось загрузить библиотеку RunDocSelObj', Error);
              Exit;
            }

        var isSelect: word;
        if ((CurField = #Dogovor.NoDoc   ) OR (CurField = #Dogovor.dDoc   ))
          isSelect := 1;

        if ((CurField = #AppDogovor.NoDoc) OR (CurField = #AppDogovor.dDoc))
          isSelect := 2;

        if ((CurField = #CalPlan.NoDoc   ) OR (CurField = #CalPlan.dInput ))
          isSelect := 32;

        var DSK_pKontr: comp;

        if not ReadMyDsk(DSK_pKontr, 'GetSDog_pKontr2', TRUE)
          DSK_pKontr := 0;

        if (BaseDoc.VidDoc <> 201) AND (BaseDoc.VidDoc <> 211) AND (BaseDoc.VidDoc <> 1420)
          SaveMyDsk(BaseDoc.cOrg, 'GetSDog_pKontr2')
        else
          {
            var pKontrDog: comp;
            pKontrDog := if (BaseDoc.cAppDogovor <> 0, AppDogovor.cOrg,
                           if (BaseDoc.cDogovor <> 0, Dogovor.cOrg, BaseDoc.cOrg))
            SaveMyDsk(pKontrDog, 'GetSDog_pKontr2');
          }

        SaveMyDsk(TRUE, 'GetSDog_NeedFilterOnKontr2');
        SaveMyDsk(TRUE, 'GetSDog_RestoreStat');

        if (pRunDSel.F3(BaseDoc.cDogovor,    // var cDogovor    : comp;
                        BaseDoc.cAppDogovor, // var cAppDogovor: comp;
                        BaseDoc.cCalPlan,    // var cCalPlan    : comp;
                        isSelect,            //     isSelect    : word; // откуда вызвали: 1 - договора 2 - соглашение 4 - календарный план
                        word(2+4),           //     _wMaska     : word  // 0FFFFh - все документы, иначе битовая маска РАЗРЕШЕННЫХ статусов документов
                                             // разрешен выбор только из исполняемых
                                             // или приостановленных договоров
                        BaseDoc.Direct
                       ) <> cmCancel)
          {
            set BaseDoc.cDogovor    := BaseDoc.cDogovor;
            set BaseDoc.cAppDogovor := BaseDoc.cAppDogovor;
            set BaseDoc.cCalPlan    := BaseDoc.cCalPlan;

            if not IsNew AND IsValid(#BaseDoc)
              {
                update KatSopr set KatSopr.cDogovor    := BaseDoc.cDogovor,
                                   KatSopr.cAppDogovor := BaseDoc.cAppDogovor,
                                   KatSopr.cCalPlan    := BaseDoc.cCalPlan;

                _LOOP KatSopr
                   update SoprHoz where (( KatSopr.VidSopr == SoprHoz.TipDoc AND
                                            KatSopr.NRec    == SoprHoz.cSoprDoc ))
                      set SoprHoz.cDogovor    := BaseDoc.cDogovor,
                          SoprHoz.cAppDogovor := BaseDoc.cAppDogovor;

                if (CalPlan.DirectPlat = 0)
                  {
                    update BaseFin set BaseFin.cDogovor    := BaseDoc.cDogovor,
                                       BaseFin.cAppDogovor := BaseDoc.cAppDogovor,
                                       BaseFin.cCalPlan    := BaseDoc.cCalPlan,
                                       BaseFin.cKatSopr    := 0;
                  }
                else
                  {
                    update BaseFin set BaseFin.cDogovor    := BaseDoc.cDogovor,
                                       BaseFin.cAppDogovor := BaseDoc.cAppDogovor,
                                       BaseFin.cCalPlan    := 0,
                                       BaseFin.cKatSopr    := BaseDoc.cCalPlan;
                  }

                _LOOP BaseFin
                    update SoprHoz where (( BaseFin.cSoprHoz  ==  SoprHoz.NRec ))
                      set SoprHoz.cDogovor    := BaseFin.cDogovor,
                          SoprHoz.cAppDogovor := BaseFin.cAppDogovor;
              }

            if (isSelect = 32)
              if (GetFirst FastFirstRow PlanPays where((BaseDoc.cCalPlan == PlanPays.cCalPlan AND
                                                        word(0)          == PlanPays.VidPlat)) = tsOk)
                if (PlanPays.TermDefBy = 1)
                  {
                    var oCF: ClndrDog;

                    set StepDoc.dOplMax := oCF.AddWorkDay(if (BaseDoc.cAppDogovor <> 0,
                                                            BaseDoc.cAppDogovor,
                                                              BaseDoc.cDogovor),
                                                          BaseDoc.dDoc,
                                                          PlanPays.nDays);
                  }

            var boCanMakeDoOnDog: boolean; boCanMakeDoOnDog := TRUE;

            if Not EditDOPosEnabled(FALSE, FALSE)
              boCanMakeDoOnDog := FALSE
            else
              if Not oSDfuns.CanModifyDocument(BaseDoc.nRec, oDOfuns.GetTipHozOnVidDoc(BaseDoc.VidDoc), FALSE)
                boCanMakeDoOnDog := FALSE
              else
                if (((tipDO = 111) AND boGetTune('Doc.Buy.NotEditDO'))
                      or
                    ((tipDO = 211) AND boGetTune('Doc.Sell.NotEditDO')))
                  if ( IsValid(tnBaseFin) OR IsValid(tnKatSopr) )
                    boCanMakeDoOnDog := FALSE;

            if boCanMakeDoOnDog
              {
                MakeDOonDogDoc;

                SetFieldVisible(#KursOplTxt,            (BaseDoc.TipMoney = 2));
                SetFieldVisible(#BaseDoc.wCursForPlPor, (BaseDoc.TipMoney = 2));
              }
          }

        SaveMyDsk(DSK_pKontr, 'GetSDog_pKontr2');
      }
  //--------------
    #KatNazna.Name:
      if (RunInterface('GetSomKatNazna', FALSE, BaseDoc.cNazna) <> cmCancel)
        set BaseDoc.cNazna := BaseDoc.cNazna;
  //--------------
    #OtvPodr.Name:
      if (RunInterface('GetCO', word(cgiPick), comp(0), comp(0), BaseDoc.cOtvPodr) <> cmCancel)
        {
          #ifNdef __vschetpb__
          if (boGetTune('FN.isNumOtvPodr'))
            {
              DelLastNumD_(111, string(BaseDoc.cOtvPodr), BaseDoc.Nodoc)
              Set BaseDoc.Nodoc := GetLastNumD_(111, string(BaseDoc.cOtvPodr));
            }
          #endif
          set BaseDoc.cOtvPodr := BaseDoc.cOtvPodr;
        }
  //--------------
  end;

cmCheckField:
  if (CurField = #BaseDoc.wCursForPlPor)
    if ((BaseDoc.wCursForPlPor = 2) AND (BaseDoc.ValCurse <= 0.0001) AND (BaseDoc.TipMoney = 2))
      Message('Не задан курс валюты документа для расчетов!');

end; // HandleEvent
end; // Panel



//******************************************************************************

Panel p3;
  Show at (, 17, , 21);
  Table StepDoc;

Screen scwDopAttrBS2 (, , sci1378Esc);

Fields
  StepDoc.dIzvMax  ('Дата извещения регламентная', hcKouDocFIzvDate): [, 'DD/MM/YYYY'], noprotect;
  StepDoc.dIzvFact ('Дата извещения фактическая', hcKouDocFIzvFact): [, 'DD/MM/YYYY'], noprotect;
  StepDoc.dOplMax  ('Дата оплаты (поступления на р/с) регламентная', hcKouDocFOplDate): [, 'DD/MM/YYYY'], noprotect;
  StepDoc.dOplFact ('Дата оплаты (поступления на р/с) фактическая', hcKouDocOplFact): [, 'DD/MM/YYYY'], noprotect;
  StepDoc.NSert    ('Номер сертификата', hcKouDocFsertif, sci178Esc): noprotect;
  StepDoc.NKont    ('Номер контракта', hcKouDocFsertif, sci178Esc): noprotect;
  StepDoc.KontPri  ('Приложение к контракту', hcKouDocFsertif, sci178Esc): noprotect;
<<
 Регламент исполнения:`Известить до`.@@@@@@@@@@@  `Извещено`.@@@@@@@@@@@
                      `Оплатить  до`.@@@@@@@@@@@  `Оплачено`.@@@@@@@@@@@
`Сертификат`      .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Контракт`        .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Приложение`      .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end; //Screen scwDopAttrBS

HandleEvent

//********************************************************************************
// Это необходимо сделать, чтобы при UpdateTable пришло cmUpdateRecord
// И сохранились изменения в StepDoc
//********************************************************************************
cmCheckField:
  set BaseDoc.NRec := BaseDoc.NRec;

cmPositionChanged:
  ProtectRecord(#StepDoc, IsProtected(#BaseDoc));

end; // HandleEvent
end; // Panel



//******************************************************************************

Panel p2;
  Show at (, 22, , );
  Table SpGrSch;

Browse br10 ('Группа документов-оснований', hcKouDocFGroup);

Fields
  GroupSch.Kod  #3'Код' ('Код группы документов-оснований', , sci1378Esc): [8], protect;
  GroupSch.Name #3'Группа документов' ('Наименование группы документов-оснований', , sci1378Esc): [66], protect;
End;

HandleEvent

cmPositionChanged:
  {
    if NotEditpos(false)
      ProtectRecord(#SpGrSch, TRUE);

    if(NOT CanModifyBaseDoc)
      ProtectRecord(#SpGrSch, TRUE);
  }

cmDelOnProtect:
  Abort;

cmSetDefault:
  {
    ClearBuffer(#SpGrSch);
    if NotEditpos(false)
      ProtectRecord(#SpGrSch, TRUE);
    PutCommand(cmPick);
  }

cmPick:
  case CurField of
  //--------------
    #GroupSch.Name,
    #GroupSch.Kod:
      {
        var OldGroupSch: comp;  OldGroupSch := SpGrSch.cGroupSch;

        PushPos(#SpGrSch);
        if ( RunInterface('GetGroupSch', 3, 3, 0, FALSE, SpGrSch.cGroupSch, FALSE) <> cmDefault )
          PopPos(#SpGrSch);
        else
          {
            if (OldGroupSch = SpGrSch.cGroupSch) // перевыбор
              {
                DropPos(#SpGrSch);
                Exit;
              }

            if ((SpGrSch.cGroupSch <> 0) AND (GroupSch.cOrg <> 0) AND (BaseDoc.cOrg <> GroupSch.cOrg))
              {
                Message('Выбранная группа договоров относится к другому контрагенту!');
                PopPos(#SpGrSch);
              }
            else
              {
                if (GetFirst FastFirstRow SpGrSchC
                       where (( SpGrSch.cGroupSch == SpGrSchC.cGroupSch AND
                                word(0)           == SpGrSchC.wList     AND
                                BaseDoc.NRec      == SpGrSchC.cBaseDoc )) <> tsOk)
                  DropPos(#SpGrSch);
                else
                  {
                    Message('Договор уже входит в выбранную группу!');
                    PopPos(#SpGrSch);
                  }
              }
            RescanPanel(#SpGrSch);
          }
      }
  //--------------
  end;

cmDeleteRecord:
  if (message('Удалить входимость документа в группу?', YesNo) = yes)
    delete current SpGrSch;
  else
    Abort;

cmUpdateRecord:
  Update current SpGrSch;

cmInsertRecord:
  insert current SpGrSch;

cmCheckRecord:
  if (SpGrSch.cGroupSch = 0)
    {
      Message('Выберите входимость документа в группу или удалите запись !', CancelButton+Warning);
      SelectField(#GroupSch.Name);
      Abort;
    }

end; // HandleEvent
end; // Panel 2

//******************************************************************************

HandleEvent

//------------------------------------------------------------------------------

cmInit:
  {
    if NOT boGetTune('Doc.PickOtvPodr')
      SetFieldSelectable(#OtvPodr.Name, FALSE);

    SetFieldVisible(#KursOplTxt,            (BaseDoc.TipMoney = 2));
    SetFieldVisible(#BaseDoc.wCursForPlPor, (BaseDoc.TipMoney = 2));
  }

//------------------------------------------------------------------------------

cmOpenSearch:
  Abort;

//------------------------------------------------------------------------------

cmValFld1:
  if (RecordExists KatSopr = tsOk)
    RunInterface('SeeNakl', StepDoc.NRec)
  else
    if (BaseDoc.Direct <> 1)
      Message('Отсутствуют сопроводительные документы по основанию ' + f_sNumDate(BaseDoc.NoDoc, BaseDoc.dDoc))
    else
      if (BaseDoc.Status <> 2)
        Message('Отсутствуют сопроводительные документы по основанию ' + f_sNumDate(BaseDoc.NoDoc, BaseDoc.dDoc) + ''#13#13 +
                'Формирование возможно лишь для исполняемых ДО!', Information);
      else
        if (Message('Отсутствуют сопроводительные документы по основанию ' + f_sNumDate(BaseDoc.NoDoc, BaseDoc.dDoc) + ''#13#13 +
                   'Сформировать?', YesNo) = yes)
          {
            SaveMyDsk(BaseDoc.NoDoc, 'RasprDo_NumEqelDO');
            RunInterface('RasprDo', BaseDoc.VidDoc, StepDoc.NRec)
          }

//------------------------------------------------------------------------------

cmValFld2:
  ButtonPayments;

//------------------------------------------------------------------------------

cmDone:
  {
    if ((BaseDoc.wCursForPlPor = 2) AND (BaseDoc.ValCurse <= 0.0001) AND (BaseDoc.TipMoney = 2))
      {
        Message('Не задан курс валюты документа для расчетов!', Error);

        if (not NotEditpos(false))
          { // запрет редактирования
            Abort;
            Exit;
          }
      }

    if (not IsModified)
      Exit;

    if (update current StepDoc <> tsOk) {}

    RescanPanel(#BaseDoc);
    RescanPanel(#SpStep);
  }

//---------------------------------------------------------------------------

cmRestoreDoc:
  case CurField of
  //--------------
    #Dogovor.NoDoc
  , #Dogovor.dDoc
  , #AppDogovor.NoDoc
  , #AppDogovor.dDoc
  , #CalPlan.NoDoc
  , #CalPlan.dInput:
      {
        SaveMyDsk(word(2+4), 'GetDAK_Status'  ); // разрешен выбор только из исполняемых или приостановленных
        SaveMyDsk(byte(1+2), 'GetDAK_Status_e'); // К договорам и соглашениям

        if NullVipRef(pRunDSel)
          if not(LoadVipRef(pRunDSel, 'RunDocSelections'))
            {
              Message('Не удалось загрузить библиотеку RunDocSelObj', Error);
              Exit;
            }

        var isSelect: word;  isSelect := 32;

        case CurField Of
        //--------------
          #Dogovor.NoDoc
        , #Dogovor.dDoc:
            isSelect := isSelect + 1;
        //--------------
          #AppDogovor.NoDoc
        , #AppDogovor.dDoc:
            isSelect := isSelect + 2;
        //--------------

          #CalPlan.NoDoc
        , #CalPlan.dInput:
            isSelect := isSelect + 4;
        //--------------
        end;

        if (pRunDSel.Ctrl_F3(BaseDoc.cDogovor,
                             BaseDoc.cAppDogovor,
                             BaseDoc.cCalPlan,
                             longint(vcGetDog_Status), // по умолчанию ( = 0) фильтр только по исполняемым
                             isSelect                  // откуда вызвали:
                                                       // 1 - договора
                                                        // 2 - соглашение
                                                        // 4 - товарные ПКП 32 - все ПКП
                            ) <> cmCancel)
          {
            set BaseDoc.cDogovor    := BaseDoc.cDogovor;
            set BaseDoc.cAppDogovor := BaseDoc.cAppDogovor;
            set BaseDoc.cCalPlan    := BaseDoc.cCalPlan;

            if ((isSelect AND 4) = 4)
              if (GetFirst PlanPays where ((BaseDoc.cCalPlan == PlanPays.cCalPlan AND
                                            word(0)          == PlanPays.VidPlat )) = tsOk)
                if (PlanPays.TermDefBy = 1)
                  {
                    var oCF: ClndrDog;

                    set StepDoc.dOplMax := oCF.AddWorkDay(if (BaseDoc.cAppDogovor <> 0,
                                                            BaseDoc.cAppDogovor,
                                                              BaseDoc.cDogovor),
                                                          BaseDoc.dDoc,
                                                          PlanPays.nDays);
                  }

            if not IsNew AND IsValid(#BaseDoc)
              if (CalPlan.DirectPlat = 0)
                {
                  update BaseFin set BaseFin.cDogovor    := BaseDoc.cDogovor,
                                     BaseFin.cAppDogovor := BaseDoc.cAppDogovor,
                                     BaseFin.cCalPlan    := BaseDoc.cCalPlan,
                                     BaseFin.cKatSopr    := 0;
                }
              else
                {
                  update BaseFin set BaseFin.cDogovor    := BaseDoc.cDogovor,
                                     BaseFin.cAppDogovor := BaseDoc.cAppDogovor,
                                     BaseFin.cCalPlan    := 0,
                                     BaseFin.cKatSopr    := BaseDoc.cCalPlan;
                }
          }

        MakeDOonDogDoc;

        SetFieldVisible(#KursOplTxt,            (BaseDoc.TipMoney = 2));
        SetFieldVisible(#BaseDoc.wCursForPlPor, (BaseDoc.TipMoney = 2));
      }
  //--------------
  end;

//------------------------------------------------------------------------------

cmVal3:
  case TipDO of
  //-----------
    111: RunInterface('SimpleWayToRunAlgorithm', coGetTune('Oper.Buy.PredOplDO.DopFunc01'), word(1111), BaseDoc.NRec, comp(0));
  //-----------
    211: RunInterface('SimpleWayToRunAlgorithm', coGetTune('Oper.Sell.PredOplDO.DopFunc01'), word(1211), BaseDoc.NRec, comp(0));
  //-----------
  end; //case

//------------------------------------------------------------------------------

cmVal4:
  case TipDO of
  //-----------
    111: RunInterface('SimpleWayToRunAlgorithm', coGetTune('Oper.Buy.PredOplDO.DopFunc02'), word(1111), BaseDoc.NRec, comp(0));
  //-----------
    211: RunInterface('SimpleWayToRunAlgorithm', coGetTune('Oper.Sell.PredOplDO.DopFunc02'), word(1211), BaseDoc.NRec, comp(0));
  //-----------
  end; //case

//------------------------------------------------------------------------------

cmVal5:
  case TipDO of
  //-----------
    111: RunInterface('SimpleWayToRunAlgorithm', coGetTune('Oper.Buy.PredOplDO.DopFunc03'), word(1111), BaseDoc.NRec, comp(0));
  //-----------
    211: RunInterface('SimpleWayToRunAlgorithm', coGetTune('Oper.Sell.PredOplDO.DopFunc03'), word(1211), BaseDoc.NRec, comp(0));
  //-----------
  end; //case

//------------------------------------------------------------------------------

cmVal6:
  case TipDO of
  //-----------
   111: RunInterface('SimpleWayToRunAlgorithm', coGetTune('Oper.Buy.PredOplDO.DopFunc04'), word(1111), BaseDoc.NRec, comp(0));
  //-----------
   211: RunInterface('SimpleWayToRunAlgorithm', coGetTune('Oper.Sell.PredOplDO.DopFunc04'), word(1211), BaseDoc.NRec, comp(0));
  //-----------
  end; //case

cmHotKeys:
{
  var MenuID: longint;

  MenuID := CreateMenu;

  case tipDO of
  //-----------
    111:
      {
        ToMenuAdd('Oper.Buy.PredOplDO.DopFunc01', cmVal3, MenuID)
        ToMenuAdd('Oper.Buy.PredOplDO.DopFunc02', cmVal4, MenuID)
        ToMenuAdd('Oper.Buy.PredOplDO.DopFunc03', cmVal5, MenuID)
        ToMenuAdd('Oper.Buy.PredOplDO.DopFunc04', cmVal6, MenuID)
      }
  //-----------
    211:
      {
        ToMenuAdd('Oper.Sell.PredOplDO.DopFunc01', cmVal3, MenuID)
        ToMenuAdd('Oper.Sell.PredOplDO.DopFunc02', cmVal4, MenuID)
        ToMenuAdd('Oper.Sell.PredOplDO.DopFunc03', cmVal5, MenuID)
        ToMenuAdd('Oper.Sell.PredOplDO.DopFunc04', cmVal6, MenuID)
      }
  //-----------
  end; // case

  PutHotCommand(RunLoadMenu(MenuID));
}
//------------------------------------------------------------------------------

end; // HandleEvent

end; // Window
