//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 7.12 - логистика
// Печать документа-основания
//********************************************************************************

#include xlReport.Vih

#define _RETTARA_


#include katorg.vih
#include oEdIzm.vih
#include DOfuns.vih
#include oflAn.vih
#include prndocs.vih
#include OrganizationInfo.vih
#include AdrFunc.vih
#include ExtAttrClass.vih

#doc
Печать документа-основания
#end
Interface PrnDocs;

//********************************************************************************
// Таблицы для счетов на FastReport

// Параметры счета
table struct FR_Schet
(
  nRec            : word
, kurs            : string

// Шапка документа
, H_SimvVal       : string
, H_SimvRub       : string
, H_descr         : string
, H_NomSchet      : string
, H_dateSchet     : string
// Контрагент 1
, H_kontr1        : string
, H_unn_name1     : string
, H_unn1          : string
, H_unnKpp_name1  : string
, H_unnKpp1       : string
, H_bank1         : string
, H_bankAddr1     : string
, H_bankcity1     : string
, H_schNom1       : string
, H_mfo1          : string
, H_kod1          : string
, H_adres1        : string
, H_telFax1       : string
// Контрагент 2
, H_kontr2        : string
, H_unn_name2     : string
, H_unn2          : string
, H_unnKpp_name2  : string
, H_unnKpp2       : string
, H_bank2         : string
, H_bankAddr2     : string
, H_bankcity2     : string
, H_schNom2       : string
, H_mfo2          : string
, H_kod2          : string
, H_adres2        : string
, H_telFax2       : string
, H_Prim          : string  // Примечание

// Шапка документа - для счета-фактуры
, sf_H_prodavec   : string
, sf_H_adres1     : string
, sf_H_unn_name1  : string
, sf_H_unn1       : string
, sf_H_gruzOtp    : string
, sf_H_gruzPol    : string
, sf_H_pokupatel  : string
, sf_H_gruzOtpb   : string
, sf_H_gruzPolb   : string
, sf_H_pokupatelb : string
, sf_H_prodavecb  : string
, sf_H_adres2     : string
, sf_H_unn_name2  : string
, sf_H_unn2       : string

// Подножие документа
, F_ItogoNadpis   : string
, F_Itogo         : double
, F_Itogo_Okr     : double
, F_Skidki        : double
, F_ItogoSkid     : double
, F_ItogoSkidNal  : double
, F_ItogoNal      : double
, F_ItogoBezNal   : double
, F_ItogopoPoz    : double
, F_Skidki_Okr    : double
, F_ItogoSkid_Okr : double
, F_Nalog         : double
, F_Nalog_Okr     : double
, F_SkidSumNadpis : string
, F_SkidSumNadpis1: string
, F_SkidkSum      : double
, F_SkidkSumNDE   : double
, F_ItogokOpl     : double
, F_ItogokOpl_ok  : double
, F_ItogokOpl_Okr : string
, F_ItogkOpl_full : string
, F_NDS_Simv      : string
, F_NDS           : double
, F_Akciz_Simv    : string
, F_Akciz         : double
, F_NalProdSimv   : string
, F_NalProd       : double
, F_NDS_okr       : double
, F_Akciz_okr     : double
, F_NalProd_okr   : double
, F_SumSNalog     : double
, F_SumPropis     : string
, F_SumPropis_Okr : string
, F_SumPropisNds  : string
, F_SumPropisVsg  : string
, F_Procent       : string
, F_schet_deist   : string
, F_Taravoz       : string
// Подножие документа для счета-фактуры
, sf_F_SummaNal   : double
, sf_F_VsegosNal  : double
, NoData          : word
, brForPrice      : word
, brForSumma      : word
, brForVPrice     : word
, brForVSumma     : word
)
with index
(
  indSch = nRec
);

// Спецификация
table struct FR_Specif
(
  nRec         : word
, nRec2        : word
, NomPP        : word
, NomNomer     : string
, Naimen       : string
, EdIzm        : string
, kol          : double
, ProcUb       : double
, KolSkl       : double
, cena         : double
, summa        : double
, cenaR        : double
, summaR       : double
, ProcSkidka   : double
, Skidka       : double
, SkidkaPoDok  : double
, SkidkaR      : double
, IsExistNDS   : boolean
, Nalogi       : double
, SumBezNal    : double
, SumPos       : double
, NDS          : double
, NDSR         : double
, St_NDS       : string
, SumBezNDS    : double
, CenaMCBezNDS : double
, SkidkaEdMC   : double
// Для счета-фактуры
, sf_cena      : double
, sf_stBezNal  : double
, sf_akciz     : string
, sf_NalSt     : string
, sf_NalStb    : string
, sf_Nalog     : double
, sf_StNal     : double
, sf_Strana    : string
, sf_NomDekl   : string
, ier_group    : string
, ier_priceL   : string
, printIer     : word
, HeadOrg      : string
)
with index
(
  indSp1 = nRec
, indSp2 = nRec2
);

//Платежно-рассчетные документы для счетов-фактур
table struct FR_BaseFin
(
  nRec        : word
, nRec2       : word
, nomer       : string
, data        : string
)
with index
(
  indBF = nRec
, indBF2 = nRec2
);
//********************************************************************************


#include oEdIzm.var
#include DOfuns.var
#include RESPROC.tune
#include oflAn.var

Create View

Var
  p_flag      : word;
  s_SimvRub   : string;
  LL          : Katorg new;
  cRecOrg     : comp;
  fr_vid      : comp;
  iOJI        : IOrganizationJuridicalInfo;
  AF          : AddressFunc;
  piExAttr    : iExtAttr;
  NeedVariant : boolean;

As Select
//------------------------------------------------------------------------------
  if(SpStep.prMC=1,KatMC.BarKod,KatUsl.Kod)         ( FieldName = Nomenkl )
//------------------------------------------------------------------------------
, if(NeedVariant AND (piExAttr.sGetAttr(coSpStep, SpStep.nRec, 'ВАРИАНТ НАИМЕНОВАНИЯ') <> '')
   , piExAttr.sGetAttr(coSpStep, SpStep.nRec, 'ВАРИАНТ НАИМЕНОВАНИЯ')
   , if(SpStep.prMC=1,KatMC.Name,KatUsl.Name))      ( FieldName = NamToVar )
//------------------------------------------------------------------------------
, if(BaseDoc.cVal<>0,KlVal.SimVolV,s_SimvRub)       ( FieldName = SimvolB )
//------------------------------------------------------------------------------
, KnDriver.Name
, Transp.Nomer
, MarPunkt.Name

From
  BaseDoc
, BaseFin
, KatCity
, KatBank
, Katorg
, StatDoc
, TTNDoc
, SpGrSch
, GroupSch
, StepDoc
, KatPodr
, SpStep (SpStep02)
, KatSopr
, KatMC
, KatMC KatMC2
, KatUsl
, KatEd
, KatOtpEd
, KatParty
, SpSopr
, SpDocNal
, CursVal
, KlVal
, Synonym Pick Pick2
, Synonym Katorg Myorg
, Synonym KatBank MyBank
, Synonym Katorg Fromorg
, Synonym Katorg Toorg
, Synonym SpStep SpStepC
, KnDriver
, Transp
, MarPunkt
, KatNalog
, X$Users
, ExClassName
, ExClassIer
, SpOtpEd
, AttrVal
, AttrNam
, Synonym SpSopr SpSopr2
, SpOrder
, Synonym Katorg  KatOrgXL
, Synonym KatCity KatCityXL
, KatState
, FR_Schet
, FR_Specif
, FR_BaseFin
, ViewSloj
, ViewSloj ViewSloj2
, KlPrice
, GrPrice
, Prices
, KatKAU

Where
((
     word(15)                    == Pick2.wList
and  coGetTune('Myorg')          == Myorg.nRec
and  BaseDoc.cMyBank             == MyBank.nRec
and  BaseDoc.cGrOtpr             == Fromorg.nRec
and  BaseDoc.cBank               == KatBank.nRec
and  BaseDoc.cGrPol              == Toorg.nRec
and  BaseDoc.corg                == Katorg.nRec
and  BaseDoc.cStatDoc            == StatDoc.nRec
and  word(0)                     == SpGrSch.wList
and  BaseDoc.nRec                == SpGrSch.cBaseDoc
and  SpGrSch.cGroupSch           == GroupSch.nRec
and  BaseDoc.nRec                == StepDoc.cBaseDoc

and  StepDoc.nRec                == KatSopr.cStepDoc
and  StepDoc.nRec                == SpStep.cStepDoc
and  SpStep.cMCUSL               == KatMC.nRec
and  SpStep.cMCUSL               == KatUsl.nRec
and  SpStep.cParty               == KatParty.nRec
and  SpStep.cOtpEd               == KatOtpEd.nRec

and  coKatSopr                   == TTNDoc.wTable
and  KatSopr.nRec                == TTNDoc.cDoc
and  BaseDoc.cParty              == KatPodr.nRec
and  SpStep.nRec                 == SpDocNal.cSpDoc
and  word(1000 + BaseDoc.VidDoc) == SpDocNal.TipDoc
and  SpDocNal.cNalog             == KatNalog.nRec
and  BaseDoc.cVal                == KlVal.nRec

// ПИР 102.52798
and  KatSopr.nRec                == SpSopr2.cSopr
and  SpSopr2.nRec                == Sporder.cSpSopr
// Полный адрес организации для FastReport
and  cRecOrg                     == KatOrgXL.nRec
and  KatOrgXL.cCity              == KatCityXL.nRec
and  KatOrgXL.cState             == KatState.nRec

and  FR_Schet.NRec               == FR_Specif.nRec2
and  FR_Schet.NRec               == FR_BaseFin.nRec2
))

order By Pick2.PickNum;

//******************************************************************************

Parameters
  p_flag
;

//******************************************************************************

Form FPrDoc('prbdoc.out', 'prbdoc');

//******************************************************************************

DataStream DTS
(
  [CFH]      CommonFormHeader;
  [vid]      fr_vid;
  [wCountry] wGetTune('Country');

  Table Fr_Schet
  (
    [kurs            ] fr_Schet.kurs              ;
    [H_descr         ] fr_Schet.H_descr           ;
    [H_simvVal       ] fr_Schet.H_simvVal         ;
    [H_simvRub       ] fr_Schet.H_simvRub         ;
    [H_NomSchet      ] fr_Schet.H_NomSchet        ;
    [H_dateSchet     ] fr_Schet.H_dateSchet       ;
    [H_kontr1        ] fr_Schet.H_kontr1          ;
    [H_unn_name1     ] fr_Schet.H_unn_name1       ;
    [H_unn1          ] fr_Schet.H_unn1            ;
    [H_unnKpp_name1  ] fr_Schet.H_unnKpp_name1    ;
    [H_unnKpp1       ] fr_Schet.H_unnKpp1         ;
    [H_bank1         ] fr_Schet.H_bank1           ;
    [H_bankcity1     ] fr_Schet.H_bankcity1       ;
    [H_bankAddr1     ] fr_Schet.H_bankAddr1       ;
    [H_schNom1       ] fr_Schet.H_schNom1         ;
    [H_mfo1          ] fr_Schet.H_mfo1            ;
    [H_kod1          ] fr_Schet.H_kod1            ;
    [H_adres1        ] fr_Schet.H_adres1          ;
    [H_telFax1       ] fr_Schet.H_telFax1         ;
    [H_kontr2        ] fr_Schet.H_kontr2          ;
    [H_unn_name2     ] fr_Schet.H_unn_name2       ;
    [H_unn2          ] fr_Schet.H_unn2            ;
    [H_unnKpp_name2  ] fr_Schet.H_unnKpp_name2    ;
    [H_unnKpp2       ] fr_Schet.H_unnKpp2         ;
    [H_bank2         ] fr_Schet.H_bank2           ;
    [H_bankAddr2     ] fr_Schet.H_bankAddr2       ;
    [H_bankcity2     ] fr_Schet.H_bankcity2       ;
    [H_schNom2       ] fr_Schet.H_schNom2         ;
    [H_mfo2          ] fr_Schet.H_mfo2            ;
    [H_kod2          ] fr_Schet.H_kod2            ;
    [H_adres2        ] fr_Schet.H_adres2          ;
    [H_telFax2       ] fr_Schet.H_telFax2         ;
    [H_Prim          ] fr_Schet.H_Prim            ;
    [sf_H_prodavec   ] fr_Schet.sf_H_prodavec     ;
    [sf_H_prodavecb  ] fr_Schet.sf_H_prodavecb    ;
    [sf_H_adres1     ] fr_Schet.sf_H_adres1       ;
    [sf_H_unn_name1  ] fr_Schet.sf_H_unn_name1    ;
    [sf_H_unn1       ] fr_Schet.sf_H_unn1         ;
    [sf_H_gruzOtp    ] fr_Schet.sf_H_gruzOtp      ;
    [sf_H_gruzPol    ] fr_Schet.sf_H_gruzPol      ;
    [sf_H_gruzOtpb   ] fr_Schet.sf_H_gruzOtpb     ;
    [sf_H_gruzPolb   ] fr_Schet.sf_H_gruzPolb     ;
    [sf_H_pokupatel  ] fr_Schet.sf_H_pokupatel    ;
    [sf_H_pokupatelb ] fr_Schet.sf_H_pokupatelb   ;
    [sf_H_adres2     ] fr_Schet.sf_H_adres2       ;
    [sf_H_unn_name2  ] fr_Schet.sf_H_unn_name2    ;
    [sf_H_unn2       ] fr_Schet.sf_H_unn2         ;

    [F_ItogoNadpis   ] fr_Schet.F_ItogoNadpis     ;
    [F_Itogo         ] fr_Schet.F_Itogo           ;
    [F_Itogo_Okr     ] fr_Schet.F_Itogo_Okr       ;
    [F_Skidki        ] fr_Schet.F_Skidki          ;
    [F_ItogoSkid     ] fr_Schet.F_ItogoSkid       ;
    [F_ItogoSkidNal  ] fr_Schet.F_ItogoSkidNal    ;
    [F_ItogoNal      ] fr_Schet.F_ItogoNal        ;
    [F_ItogoBezNal   ] fr_Schet.F_ItogoBezNal     ;
    [F_ItogopoPoz    ] fr_Schet.F_ItogopoPoz      ;
    [F_Skidki_Okr    ] fr_Schet.F_Skidki_Okr      ;
    [F_ItogoSkid_Okr ] fr_Schet.F_ItogoSkid_Okr   ;
    [F_Nalog         ] fr_Schet.F_Nalog           ;
    [F_Nalog_Okr     ] fr_Schet.F_Nalog_Okr       ;
    [F_SkidSumNadpis ] fr_Schet.F_SkidSumNadpis   ;
    [F_SkidSumNadpis1] fr_Schet.F_SkidSumNadpis1  ;
    [F_SkidkSum      ] fr_Schet.F_SkidkSum        ;
    [F_SkidkSumNDE   ] fr_Schet.F_SkidkSumNDE     ;
    [F_ItogokOpl     ] fr_Schet.F_ItogokOpl       ;
    [F_ItogokOpl_ok  ] fr_Schet.F_ItogokOpl_ok    ;
    [F_ItogokOpl_Okr ] fr_Schet.F_ItogokOpl_Okr   ;
    [F_ItogkOpl_full ] fr_Schet.F_ItogkOpl_full   ;
    [F_NDS_Simv      ] fr_Schet.F_NDS_Simv        ;
    [F_NDS           ] fr_Schet.F_NDS             ;
    [F_Akciz_Simv    ] fr_Schet.F_Akciz_Simv      ;
    [F_Akciz         ] fr_Schet.F_Akciz           ;
    [F_NalProdSimv   ] fr_Schet.F_NalProdSimv     ;
    [F_NalProd       ] fr_Schet.F_NalProd         ;
    [F_NDS_okr       ] fr_Schet.F_NDS_okr         ;
    [F_Akciz_okr     ] fr_Schet.F_Akciz_okr       ;
    [F_NalProd_okr   ] fr_Schet.F_NalProd_okr     ;
    [F_SumSNalog     ] fr_Schet.F_SumSNalog       ;
    [F_SumPropis     ] fr_Schet.F_SumPropis       ;
    [F_SumPropis_Okr ] fr_Schet.F_SumPropis_Okr   ;
    [F_SumPropisNds  ] fr_Schet.F_SumPropisNds    ;
    [F_SumPropisVsg  ] fr_Schet.F_SumPropisVsg    ;
    [F_Procent       ] fr_Schet.F_Procent         ;
    [F_schet_deist   ] fr_Schet.F_schet_deist     ;
    [F_Taravoz       ] fr_Schet.F_Taravoz         ;
    [F_Boss          ] sGetTune('Boss')           ;
    [F_MailBuh       ] sGetTune('MainBuh')        ;
    [sf_F_SummaNal   ] fr_Schet.sf_F_SummaNal     ;
    [sf_F_VsegosNal  ] fr_Schet.sf_F_VsegosNal    ;
    [NoData          ] fr_Schet.NoData            ;
    [brForPrice      ] fr_Schet.brForPrice        ;
    [brForSumma      ] fr_Schet.brForSumma        ;
    [brForVPrice     ] fr_Schet.brForVPrice       ;
    [brForVSumma     ] fr_Schet.brForVSumma       ;
  );

  Table Fr_Specif
    (
      [NomPP       ] FR_Specif.NomPP      ;
      [NomNomer    ] FR_Specif.NomNomer   ;
      [Naimen      ] FR_Specif.Naimen     ;
      [EdIzm       ] FR_Specif.EdIzm      ;
      [kol         ] FR_Specif.kol        ;
      [ProcUb      ] FR_Specif.ProcUb     ;
      [KolSkl      ] FR_Specif.KolSkl     ;
      [cena        ] FR_Specif.cena       ;
      [summa       ] FR_Specif.summa      ;
      [cenaR       ] FR_Specif.cenaR      ;
      [summaR      ] FR_Specif.summaR     ;
      [ProcSkidka  ] FR_Specif.ProcSkidka ;
      [Skidka      ] FR_Specif.Skidka     ;
      [SkidkaPoDok ] Fr_Specif.SkidkaPoDok;
      [SkidkaR     ] FR_Specif.SkidkaR    ;
      [IsExistNDS  ] FR_Specif.IsExistNDS ;
      [Nalogi      ] Fr_Specif.Nalogi     ;
      [SumBezNal   ] Fr_Specif.SumBezNal  ;
      [SumPos      ] Fr_Specif.SumPos     ;
      [NDS         ] FR_Specif.NDS        ;
      [NDSR        ] FR_Specif.NDSR       ;
      [St_NDS      ] FR_Specif.St_NDS     ;
      [SumBezNDS   ] FR_Specif.SumBezNDS  ;
      [CenaMCBezNDS] FR_Specif.CenaMCBezNDS;
      [SkidkaEdMC  ] FR_Specif.SkidkaEdMC ;
      [sf_cena     ] FR_Specif.sf_cena    ;
      [sf_stBezNal ] FR_Specif.sf_stBezNal;
      [sf_akciz    ] FR_Specif.sf_akciz   ;
      [sf_NalSt    ] FR_Specif.sf_NalSt   ;
      [sf_NalStb   ] FR_Specif.sf_NalStB  ;
      [sf_Nalog    ] FR_Specif.sf_Nalog   ;
      [sf_StNal    ] FR_Specif.sf_StNal   ;
      [sf_Strana   ] FR_Specif.sf_Strana  ;
      [sf_NomDekl  ] FR_Specif.sf_NomDekl ;
      [ier_group   ] FR_Specif.ier_group  ;
      [ier_priceL  ] FR_Specif.ier_priceL ;
      [printIer    ] FR_Specif.printIer   ;
    );

  Table FR_BaseFin
    (
      [nRec ]  FR_BaseFin.nRec  ;
      [nomer]  FR_BaseFin.nomer ;
      [data ]  FR_BaseFin.data  ;
    );
)
end;

//******************************************************************************
function GetJurAddrForSF(cOrgRec: comp) : String;
var
  ExAttrFun: iExtAttr;
  csAttrAddress: string;
  aAddr : String;
{
  GetJurAddrForSF := '';
  csAttrAddress:='Юридический адрес';
  // Адрес из атрибута Юридический адрес
  cRecOrg := cOrgRec;

  aAddr := Trim(ExAttrFun.sGetAttr(coKatOrg, cOrgRec, csAttrAddress));

  if (aAddr <> '')
  {
    GetJurAddrForSF := aAddr;
    Exit;
  }

  // Адрес с закладки Прочее (полный или сокращенный)
  if boGetTune('Rep.FullOrgAddr')
    aAddr := LL.FullOrgAddr(cOrgRec);
  else
    {
      if ( GetFirst fastfirstrow KatOrgXL = tsOk )
        aAddr := KatOrgXL.Addr
      else
        aAddr := '';
    }

  // Юридический адрес, закладка Юридическая инфорамация
  if (aAddr = '')
    if IOrganizationInfoFinder(iOJI).Seek(cOrgRec)
      aAddr := Trim(AF.GetFullAddressInd(Comp(iOJI.GetJuridicalAddress)));

  GetJurAddrForSF := aAddr;
}


function GetPostAddrForSF(cOrgRec: comp) : String;
{
  GetPostAddrForSF := '';

  cRecOrg := cOrgRec;

  if IOrganizationInfoFinder(iOJI).Seek(cOrgRec)
    GetPostAddrForSF := Trim(AF.GetFullAddressInd(Comp(iOJI.GetPostAddress)));

  if GetPostAddrForSF = ''
  {
    if boGetTune('Nalog.Rus.PrintSF.PrnAddr')
    {
      // Адрес с закладки Прочее (полный или сокращенный)
      if boGetTune('Rep.FullOrgAddr')
        GetPostAddrForSF := LL.FullOrgAddr(cOrgRec);
      else
      {
        if ( GetFirst fastfirstrow KatOrgXL = tsOk )
          GetPostAddrForSF := KatOrgXL.Addr
        else
          GetPostAddrForSF := '';
      }
    }
  }
}

! код плательщика НДС
function GetKPPOrg(cOrgRec: comp): string;
var  s: string;
{
  s := '';
  cRecOrg := cOrgRec;
  if (GetFirst fastfirstrow KatOrgXL = 0)
    s := KatOrgXL.KodPlatNDS;
  GetKPPOrg := s;
}

! код УНН
function GetUnnOrg(cOrgRec: comp): string;
var  s: string;
{
  s := '';
  cRecOrg := cOrgRec;
  if (GetFirst fastfirstrow KatOrgXL = 0)
    s := KatOrgXL.UNN;
  GetUnnOrg := s;
}

Function orderAveragePrice : double;
Var
  avgsum
, avgkol
           : double;
{
  avgsum := AveragePrice;

  if ( avgsum > 0 )
    {
      orderAveragePrice := avgsum;
      Exit;
    }

  avgsum := 0;
  avgkol := 0;

  _loop KatSopr
    _loop SpSopr2
      _loop Sporder
        {
          if ( Sporder.cMC <> SpSopr2.cMCUSL )
            continue;

          avgkol := avgkol + Sporder.Kol;
          avgsum := avgsum + Sporder.SrPrice * Sporder.Kol;
        }

  orderAveragePrice := if(avgkol>0,avgsum/avgkol,0);
}

//******************************************************************************

Procedure PrintBankGruzOtpPol(tmpC : comp);
Var
  f  : boolean;
{
  if ( tmpC = 0 )
    {
      FPrDoc.SkipFormat(6);
      Exit;
    }

  ResetBounds(#KatBank);

  f := true;

  if ( GetFirst KatBank where ((  tmpC    == KatBank.corg
                              and word(1) == KatBank.Aktiv
                              )) <> tsOk )
      f := (GetFirst KatBank where (( tmpC == KatBank.corg ))
                             ordered by index KatBank02 = tsOk);

  if ( f )
    {
      FPrDoc.Write(KatBank.Name);
      FPrDoc.Write(KatBank.Addr);
      FPrDoc.Write(KatBank.MFO1);
      FPrDoc.Write(KatBank.MFO2);
      FPrDoc.Write(KatBank.Schet1);
      FPrDoc.Write(KatBank.Schet2);
    }
  else
    FPrDoc.SkipFormat(6);

  SetBounds(#KatBank);
}

Procedure writeTTN;
{
  //-- автотранспортное предприятие
  ResetBounds(#Katorg);

  if ( GetFirst Katorg where (( TTNDoc.corgAvt == Katorg.nRec )) = tsOk )
    FPrDoc.Write(LL.GetKatorgName(Katorg.nRec, koOnTune))
  else
    FPrDoc.SkipFormat(1);

  SetBounds(#Katorg);

  //-- водитель
  if ( GetFirst KnDriver where (( TTNDoc.cDriver == KnDriver.nRec )) = tsOk )
    FPrDoc.Write(KnDriver.Name)
  else
    FPrDoc.SkipFormat(1);

  FPrDoc.Write(TTNDoc.sPList);  //-- номер путевого листа
  FPrDoc.Write(KatSopr.nDover);   //-- номер доверенности

  //-- транспортное средство
  if ( GetFirst Transp where (( TTNDoc.cTransp == Transp.nRec )) = tsOk )
    FPrDoc.Write(Transp.Nomer);
  else
    FPrDoc.SkipFormat(1);

  //-- пункт разгрузки
  if ( GetFirst MarPunkt where (( TTNDoc.cPunktR == MarPunkt.nRec )) = tsOk )
    FPrDoc.Write(MarPunkt.Name); //-- наименование
  else
    FPrDoc.SkipFormat(1);
}

Procedure writeTTNFromDO;
{
  ResetBounds(#TTNDoc);

  if ( GetFirst TTNDoc where ((  coBaseDoc    == TTNDoc.wTable
                             and BaseDoc.nRec == TTNDoc.cDoc
                             )) = tsOk )
    {
      //-- автотранспортное предприятие
      ResetBounds(#Katorg);

      if ( GetFirst Katorg where (( TTNDoc.corgAvt == Katorg.nRec )) = tsOk )
        FPrDoc.Write(LL.GetKatorgName(Katorg.nRec, koOnTune));
      else
        FPrDoc.SkipFormat(1);

      SetBounds(#Katorg);

      //-- водитель
      if ( GetFirst KnDriver where (( TTNDoc.cDriver == KnDriver.nRec )) = tsOk )
        FPrDoc.Write(KnDriver.Name);
      else
        FPrDoc.SkipFormat(1);

      FPrDoc.Write(TTNDoc.sPList);  //-- номер путевого листа
      FPrDoc.Write(BaseDoc.nDover);   //-- номер доверенности

      //-- транспортное средство
      if ( GetFirst Transp where (( TTNDoc.cTransp == Transp.nRec )) = tsOk )
        FPrDoc.Write(Transp.Nomer);
      else
        FPrDoc.SkipFormat(1);

      //-- пункт разгрузки
      if ( GetFirst MarPunkt where (( TTNDoc.cPunktR == MarPunkt.nRec )) = tsOk )
        FPrDoc.Write(MarPunkt.Name); //-- наименование
      else
        FPrDoc.SkipFormat(1);
    }
  else
    FPrDoc.SkipFormat(6);

  SetBounds(#TTNDoc)
}

Function IsNalogs : boolean; //проверка наличия налогов по документу
{
  ResetBounds(#SpDocNal);

  if ( GetFirst SpDocNal where ((  BaseDoc.nRec                == SpDocNal.cDoc
                               and word(1000 + BaseDoc.VidDoc) == SpDocNal.TipDoc
                               ))
                         ordered by SpDocNal.cNalog = tsOk )
    IsNalogs := true;
  else
    IsNalogs := false;

  SetBounds(#SpDocNal);
}

Function IsNalogNds : boolean;
var iKolNalog : word;
    bIsNDS    : boolean;
{
  iKolNalog := 0;
  bIsNDS    := True;

    _loop SpDocNal
    {
      iKolNalog := iKolNalog + 1;

      if (SpDocNal.cNalog <> coGetTune('Nalog.cNalogNDS'))
        bIsNDS  := False;
    }

  IsNalogNds := (bIsNDS and (iKolNalog = 1));
}

Procedure WriteNullCount(Mycount: word);
Var
  k  : word;
{
  if ( MyCount < 1 )
    Exit;

  for (k := 1; k <= Mycount; k := k + 1)
    FPrDoc.Write(0.0, 2);
}

//------------------------------------------------------------------------------
#include prndocs.vpp

//*********************************************************************************
// Расчет размера скидки для печати сбытовых МЦ вместо базовых (доработка для ССТ)
//*********************************************************************************
Function GetSkidkaValue(cKlPrice : comp; var doSkidValue: double): boolean;
{
  GetSkidkaValue := FALSE;

  if ( GetFirst FastFirstRow KlPrice where (( cKlPrice == KlPrice.nRec )) <> tsOk )
    Exit;

  if ( GetFirst FastFirstRow Prices where (( cKlPrice      == Prices.cKlPrice AND
                                             SpStep.cMcUsl == Prices.cThing )) <> tsOk )
    Exit;

  case KlPrice.TipMoney of
  // НДЕ
    0: doSkidValue := 100 * (1 - SpStep.Price / Prices.Price);
  // НДЕ-ВАЛ
    1:
      {
        if ( BaseDoc.cVal = KlPrice.cVal )
          doSkidValue := 100 * (1 - SpStep.Price / Prices.SumVal)
        else
          doSkidValue := 100 * (1 - SpStep.Price / Prices.Price);
      }
  // ВАЛ
    2:
      {
        if ( BaseDoc.cVal = KlPrice.cVal )
          doSkidValue := 100 * (1 - SpStep.Price / Prices.SumVal)
        else
          Exit;
      }
  end;

  GetSkidkaValue := TRUE;
}

//*********************************************************************************

Procedure PrDoc(p_flag : word); // печать документа-основания
Var
  Kurs
, ObSkid
, tNDS
, tNDSR
, tGSM
, tGSMR
, tAk
, tAkR
, tNSel
, tNSelR
, tNDS1
, tNDS1R
, tNDS2
, tNDS2R
, vrem
, dub1
, dub2
, TotNDS
, TotSN
, CenaBez
, CenaBezR
, SummaNew
, sNds1R
, sNds1V
, sNds2R
, sNds2V
, Bsum
, procnds
, totcena
, sAkR
, sAkV
, sNDSr
, sNDSv
, sNSelR
, sNSelV
, sGSMr
, sGSMv
, sumpos
, SumNadb1
, SumNadb2
, FirstCena
, UchetCena
, OtpCena
, iNalR              // Сумма порядка налогов по позиции
, iNalV
, PredOplata
, Doplata
, tu
, tuNDS
, tuALL
, TotalSumma
, SummainBaseDoc
, TotVhNal
, DoSkidka
, realSkidPercent
, sBez
, NewSumma
                     : double;

  iNalog             // Порядковый номер налога
, iNpp
, Npp
, Doview
, cycle_flag
, KolAttr
, KolAttrMC
, pNRec
, toc
, VidReport
, fr_nrec
, fr_BaseFin_nrec
, fr_specif_nrec
                     : word;

  AttrTyp
, AttrTypMC
                     : byte;

  simv1
, simv2
, simv3
, NotPrinted
, TaraVoz
, fullMyOrgAdres
, fullOrgAdres
, fullOrgGruzTo
, fullOrgGruzFrom
, d3
, Ot4etName
, MyKPP              : string;

  Printed
, IsExistNDS
, prizn
, edit
, NoData
                     : boolean;

  dCursa
                     : date;

  a1
, BaseDocRec
, cRecMyOrg
, CurGrPrice
, CurKlPrice
, TekGrPrice
, TekKlPrice
, cHeadRec
                     : comp;

  ExAttrFun          : iExtAttr;
!  pKatorg            : KatOrg;

{
  TaraVoz := '';

  NeedVariant := boGetTune('Doc.DO.PrnVariant');

  if not readMyDsk(vidReport,'vidReport_vschet',true)
    vidReport := 0;

  if ( GetFirst Pick2 <> tsOk )
    Exit;

    if (not LoadVipRef(iOJI, 'OrganizationJuridicalInfo'))
    {
      Message('Ошибка загрузки интерфейса', Error);
      Abort;
    }

//---------------------------------------------------------------------------------
// для печати сбытовых МЦ вместо базовых (доработка для ССТ)
//---------------------------------------------------------------------------------

  var boPrnBaseMC : boolean;
  var pBaseMCRole : comp;
  var pSkidRole   : comp;
  var pKlPrice    : comp;
  var CAnHashID   : longint;

  if NOT ReadMyDsk(boPrnBaseMC, 'PrnDocs_ZamenMC_SST', TRUE)
    boPrnBaseMC := FALSE;

  if NOT ReadMyDsk(pBaseMCRole, 'PrnDocs_pBaseMCRole', TRUE)
    pBaseMCRole := 0;

  if NOT ReadMyDsk(pSkidRole,   'PrnDocs_pSkidRole', TRUE)
    pSkidRole := 0;

  if NOT ReadMyDsk(pKlPrice,    'PrnDocs_pKlPrice', TRUE)
    pKlPrice := 0;

  if boPrnBaseMC
    CAnHashID := ContAnInit;

//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------

  StartNewVisual( vtNumericVisual
                , vfTimer + vfBreak + vfConfirm
                , ''#3'Печать документа...'
                , 1
                );

  NotPrinted := '';
  Printed := false;
  fr_nRec :=  0;

  while ( GetFirst BaseDoc where (( Pick2.cRec == BaseDoc.nRec )) <> tsOk )
    if ( GetNext Pick2 <> tsOk ) Exit;

  if VidReport > 0 and (BaseDoc.VidDoc = 101  or BaseDoc.VidDoc = 201  or
                        BaseDoc.VidDoc = 1410 or BaseDoc.VidDoc = 1420 or
                        BaseDoc.VidDoc = 111  or BaseDoc.VidDoc = 211)// Excel
    toc := 1
  else
    toc := 0;

  if (toc = 0)
  case BaseDoc.VidDoc of
    101 : FPrDoc.SetGroup('Закупка');
    201 : FPrDoc.SetGroup('Продажа');
    102 : FPrDoc.SetGroup('Прием на консигнацию');
    202 : FPrDoc.SetGroup('Отпуск на консигнацию');
    111 : FPrDoc.SetGroup('Предоплата закупок');
    211 : FPrDoc.SetGroup('Предоплата продаж');
    1410: FPrDoc.SetGroup('Наряд-акт');
    1420: FPrDoc.SetGroup('Счет лесопользователя');
  end;

  if NeedVariant
    RunInterFace(PrnVariant, BaseDoc.NRec);

  Do
    {
      if (toc = 1)
      {
        fr_nRec    := fr_nRec + 1;
        FR_BaseFin_Nrec  := 0;
        FR_Specif_NRec   := 0;
        NoData := true;
      }

      if ( not NextVisual )
        Break;

      BaseDocRec := Pick2.cRec;
      cycle_flag := if (GetNext Pick2 = tsOk, 1, 0);

      if ( GetFirst BaseDoc where (( BaseDocRec == BaseDoc.nRec )) = tsOk )
        if ( RecordExists SpStep <> tsOk )
          {
            if ( not (   ((BaseDoc.VidDoc = 211) or (BaseDoc.VidDoc = 111))
                     and (BaseDoc.SpecYes = 0)
                     )
               )
              {
                NotPrinted := NotPrinted
                            + if (BaseDoc.Descr <> '',BaseDoc.Descr+'\','')
                            + BaseDoc.nodoc
                            + ', ';
                Continue;
              }
          }

      TotalSumma := 0;
      Doview     := 0;
      simv1      :='';
      simv2      :='';
      simv3      :='';
      dCursa     := BaseDoc.dDoc;
      TotNDS     := 0;
      TotSN      := 0;
      dub1       := 0;
      dub2       := 0;
      SummaNew   := 0;
      CurGrPrice := 0;
      Kurs := 1;

      if ( BaseDoc.cVal <> comp(0) )
        if ( (BaseDoc.TipMoney = 2) and (BaseDoc.ValCurse <> 0) )
          Kurs := BaseDoc.ValCurse * (1 + BaseDoc.DopProc / 100);
        else
          if oValFunc.GetCurse(BaseDoc.cVal, dCursa, Kurs)
            Kurs := Kurs * (1 + BaseDoc.DopProc / 100);

      if (toc = 0)
      {
        FPrDoc.Write(wGetTune('Country'));
        FPrDoc.Write(SimvolB);

        if ( FPrDoc.Error )
        {
          StopVisual('', 0);
          FPrDoc.AbortForm;
          Exit;
        }
      }

//------------ Предоплата по ДО -----------------------------------------

      PredOplata := 0;

      _loop BaseFin where ((BaseDoc.nRec == BaseFin.cBaseDoc))
        PredOplata := PredOplata + if (BaseDoc.cval = 0, BaseFin.Summa, BaseFin.SumVal);

      Doplata := if (BaseDoc.Total < PredOplata, 0, BaseDoc.Total - PredOplata);

//-----------------------------------------------------------------------

      Doview := 1;

      if (toc = 0)
      {
        FPrDoc.Write(s_SimvRub);
        FPrDoc.Write(sGetTune('KatOrg.FldView.UNN'));
        FPrDoc.Write(sGetTune('KatOrg.FldView.MFO'));
        FPrDoc.Write(BaseDoc.nRec);
        FPrDoc.Write(BaseDoc.Descr);
        FPrDoc.Write(BaseDoc.NoDoc);
        FPrDoc.Write(BaseDoc.dDoc);  //'DD/MM/YY'
        FPrDoc.Write(if( BaseDoc.VhSkid = 1
                       , BaseDoc.Skidka
                       , BaseDoc.Skidka / (BaseDoc.Summa + BaseDoc.Skidka) * 100
                       )
                    );
        if ( (GetFirst X$Users where (BaseDoc.Descr = sGetTuneEx( 'User.Descr'
                                                              , UserOfficeFilial(X$Users.atl_nRec)
                                                              , X$Users.atl_nRec
                                                              ))) = tsOk )
          FPrDoc.Write(sGetTune('User.FIO'));
        else
          FPrDoc.Write('');
      }
      realSkidPercent := if( BaseDoc.VhSkid = 1
                           , BaseDoc.Skidka
                           , BaseDoc.Skidka / (BaseDoc.Summa + BaseDoc.Skidka) * 100
                           );

      // поставщик

      // ПИР 101.23518
      GetInfoKatorg(Myorg.nRec, MyBank.nRec, InfoKO);
      if (toc = 0)
      {
        FPrDoc.Write(InfoKO.KOName);
        FPrDoc.Write(Myorg.nRec);
        FPrDoc.Write(InfoKO.KBName);
        FPrDoc.Write(InfoKO.KBAddr);
        FPrDoc.Write(InfoKO.KBSchet1);
        FPrDoc.Write(InfoKO.KBMFO1);
        FPrDoc.Write(InfoKO.KBSchet2);
        FPrDoc.Write(InfoKO.KBMFO2);
        FPrDoc.Write(GetJurAddrForSF(Myorg.nRec));
        FPrDoc.Write(GetPostAddrForSF(Myorg.nRec));
        FPrDoc.Write(GetJurAddrForSF(Myorg.nRec));
        FPrDoc.Write(InfoKO.KOTel);
        FPrDoc.Write(InfoKO.KOUNN);
        FPrDoc.Write(if(BaseDoc.Direct = 1, Fromorg.KodPlatNDS, Toorg.KodPlatNDS));
        FPrDoc.Write(InfoKO.KoKodPlatNDS);
        FPrDoc.Write(InfoKO.KOTiporg);
        FPrDoc.Write(InfoKO.KOOKPO);
        FPrDoc.Write(InfoKO.KOOKONH);
        FPrDoc.Write(InfoKO.KOCity);
      }
/*
      FPrDoc.Write(LL.GetKatorgName(Myorg.nRec, koOnTune));
      FPrDoc.Write(MyBank.Name);
      FPrDoc.Write(MyBank.Addr);
      FPrDoc.Write(MyBank.Schet1);
      FPrDoc.Write(MyBank.MFO1);
      FPrDoc.Write(MyBank.Schet2);
      FPrDoc.Write(MyBank.MFO2);
      FPrDoc.Write(Myorg.Addr);
      FPrDoc.Write(Myorg.Tel);
      FPrDoc.Write(Myorg.Unn);
      FPrDoc.Write(Myorg.KODPLATNDS);
      FPrDoc.Write(Myorg.Tiporg);
      FPrDoc.Write(Myorg.OKPO);
      FPrDoc.Write(Myorg.OkONH);

      if ( GetFirst KatCity where (( Myorg.cCity == KatCity.nRec )) = tsOk )
        FPrDoc.Write(KatCity.Name);
      else
        FPrDoc.SkipFormat(1);
*/
      // грузоотправитель
      if (toc = 0)
      {
        FPrDoc.Write(LL.GetKatorgName(Fromorg.nRec, koOnTune));
        FPrDoc.Write(Fromorg.nRec);
        FPrDoc.Write(GetJurAddrForSF(Fromorg.nRec));
        FPrDoc.Write(GetPostAddrForSF(Fromorg.nRec));
        FPrDoc.Write(GetJurAddrForSF(Fromorg.nRec));
        FPrDoc.Write(Fromorg.Tel);
        FPrDoc.Write(Fromorg.UNN);
        FPrDoc.Write(Fromorg.Tiporg);

        PrintBankGruzOtpPol(BaseDoc.cGrOtpr);


        // получатель
        // ПИР 101.23518 // shaf
        var cHeadRec : comp;
        var ExAttrFun: iExtAttr;

        if ( ExAttrFun.ValueExists(coKatOrg, BaseDoc.cOrg, 'Головная организация') )
          cHeadRec := ExAttrFun.coGetAttr(coKatOrg, BaseDoc.cOrg, 'Головная организация');
        else
          cHeadRec := BaseDoc.cOrg;

        if ( GetFirst KatOrg where ((cHeadRec == KatOrg.nRec)) = tsOk )
          FPrDoc.Write(LL.GetKatOrgName(cHeadRec, koOnTune));
        else
          FPrDoc.SkipFormat(1);

        GetInfoKatorg(BaseDoc.cOrg, BaseDoc.cBank, InfoKO);
      }

      if (toc = 0)
      {
        FPrDoc.Write(InfoKO.KOName);
        FPrDoc.Write(InfoKO.KBName);
        FPrDoc.Write(InfoKO.KBAddr);
        FPrDoc.Write(InfoKO.KBSchet1);
        FPrDoc.Write(InfoKO.KBMFO1);
        FPrDoc.Write(InfoKO.KBSchet2);
        FPrDoc.Write(InfoKO.KBMFO2);
        FPrDoc.Write(GetJurAddrForSF(InfoKO.KONRec));
        FPrDoc.Write(GetPostAddrForSF(InfoKO.KONRec));
        FPrDoc.Write(GetJurAddrForSF(InfoKO.KONRec));
        FPrDoc.Write(InfoKO.KOTel);
        FPrDoc.Write(InfoKO.KOUNN);
        FPrDoc.Write(if(BaseDoc.Direct = 1, Toorg.KodPlatNDS, Fromorg.KodPlatNDS));
        FPrDoc.Write(InfoKO.KoKodPlatNDS);
        FPrDoc.Write(InfoKO.KOTiporg);
        FPrDoc.Write(InfoKO.KOOKPO);
        FPrDoc.Write(InfoKO.KOOKONH);
        FPrDoc.Write(InfoKO.KOCity);
      }

/*
      FPrDoc.Write(LL.GetKatorgName(Katorg.nRec, koOnTune));
      FPrDoc.Write(KatBank.Name);
      FPrDoc.Write(KatBank.Addr);
      FPrDoc.Write(KatBank.Schet1);
      FPrDoc.Write(KatBank.MFO1);
      FPrDoc.Write(KatBank.Schet2);
      FPrDoc.Write(KatBank.MFO2);
      FPrDoc.Write(Katorg.Addr);
      FPrDoc.Write(Katorg.Tel);
      FPrDoc.Write(Katorg.UNN);
      FPrDoc.Write(Katorg.KODPLATNDS);
      FPrDoc.Write(Katorg.Tiporg);
      FPrDoc.Write(Katorg.OKPO);
      FPrDoc.Write(Katorg.OKONH);

      if ( GetFirst KatCity where (( Katorg.cCity == KatCity.nRec )) = tsOk )
        FPrDoc.Write(KatCity.Name);
      else
        FPrDoc.SkipFormat(1);
*/
      // грузополучатель
      if (toc = 0)
      {
        FPrDoc.Write(LL.GetKatorgName(Toorg.nRec, koOnTune));
        FPrDoc.Write(GetJurAddrForSF(Toorg.nRec));
        FPrDoc.Write(GetPostAddrForSF(Toorg.nRec));
        FPrDoc.Write(GetJurAddrForSF(Toorg.nRec));
        FPrDoc.Write(Toorg.Tel);
        FPrDoc.Write(Toorg.UNN);
        FPrDoc.Write(Toorg.Tiporg);

        PrintBankGruzOtpPol(BaseDoc.cGrPol);

//--------------------------------
        FPrDoc.Write(BaseDoc.Name);
        FPrDoc.Write(StatDoc.Name);
      }


//-- вывод информации о транспорте
      prizn := false;

      _loop KatSopr
        {
          if ( not NextVisual )
            Break;

          if ( (KatSopr.VidSopr = 101) or (KatSopr.VidSopr = 108) or (KatSopr.VidSopr = 201) or
               (KatSopr.VidSopr = 1411) or (KatSopr.VidSopr = 1421))
            {
              if (toc = 0)
                writeTTN;
              prizn := true;
              Break;
            }
        }

//    if (not prizn) FPrDoc.SkipFormat(6);
      if ( not prizn )
        if (toc = 0)
        writeTTNFromDO;

      _LOOP BaseFin where (( word(0)          == BaseFin.TiDkBase
                        AND  StepDoc.NRec     == BaseFin.cStepDoc))
        {
          if (toc = 0)
          {
            FPrDoc.PutEventById(feDoLoop, fcIsBaseFin);
            FPrDoc.Write(BaseFin.NoDoc);
            FPrDoc.Write(BaseFin.dDoc);
          }
        }

// вывод внешних классификаций по ДО-------------------------------
      _loop ExClassVal where ((  coBaseDoc    == ExClassVal.wTable
                             and BaseDoc.nRec == ExClassVal.cRec
                             ))
        {
          if ( not NextVisual )
            Break;

          if (toc = 0)
            FPrDoc.PutEventById(feDoLoop, fcIsExClass);

          if ( GetFirst ExClassName
               where ((  ExClassVal.ClassCode  == ExClassName.ClassCode
                     and ExClassVal.wTable     == ExClassName.wTable
                     )) = tsOk ) {};

          if ( GetFirst ExClassIer
               where (( ExClassVal.cClassSeg == ExClassIer.cRecDs )) = tsOk ) {};

          if (toc = 0)
          {
            FPrDoc.Write(ExClassName.Name);
            FPrDoc.Write(ExClassIer.Name);
            FPrDoc.Write(' ');
          }
        }

// вывод групп договоров ------------------------------------------
      _loop SpGrSch
        {
          if ( not NextVisual )
            Break;

          if (toc = 0)
          {
            FPrDoc.PutEventById(feDoLoop, fcIsGroup);
            FPrDoc.Write(GroupSch.Name);
            FPrDoc.Write(GroupSch.Sum, 2);
            FPrDoc.Write(GroupSch.dFinish);
            FPrDoc.Write(GroupSch.Kod);
          }
        }

      if (toc = 0)
      {
        FPrDoc.Write(StepDoc.NSert);
        FPrDoc.Write(StepDoc.NKont);
        FPrDoc.Write(StepDoc.KontPri);
        FPrDoc.Write(StepDoc.dOplMax);

        if (   ((BaseDoc.VidDoc = 201) or (BaseDoc.VidDoc = 202) or (BaseDoc.VidDoc = 1420))
           and (BaseDoc.cParty <> 0)
           )
          FPrDoc.Write('Склад отгрузки : '+ KatPodr.Name);
        else
          FPrDoc.SkipFormat(1);

        if ( (BaseDoc.TipMoney = 2) or (BaseDoc.TipMoney = 3) )
          FPrDoc.Write( 'Курс '
                      + SimvolB
                      + ' '
                      + string(Kurs)
                      + ' на '
                      + DateToStr(if(BaseDoc.ValCurse<>0, BaseDoc.dValCurse, CursVal.DatVal) , '')
                      );
        else
          FPrDoc.SkipFormat(1);
      }

// Материалы ------------------------------------------------------

      Npp      := 1;
      sNds1R   := 0;
      sNds1V   := 0;
      sNds2R   := 0;
      sNds2V   := 0;
      ObSkid   := 0;
      sNdsR    := 0;
      sNdsV    := 0;
      tNds     := 0;
      tNdsR    := 0;
      tAk      := 0;
      tAkR     := 0;
      tNSel    := 0;
      tNSelR   := 0;
      tNds1    := 0;
      tNds1R   := 0;
      tNds2    := 0;
      tNds2R   := 0;
      tGSM     := 0;
      tGSMR    := 0;
      bSum     := 0;
      sumpos   := 0;
      SumNadb1 := 0;
      SumNadb2 := 0;

      if ( boGetTune('Doc.ProtSogl') )    // пересчет учетной цены
        InitMCInfo(BaseDoc.dDoc);

      if ( RecordExists SpStep <> tsOk )
        { // Для ДО на предоплату без спецификации
          if (toc = 0)
          {
          FPrDoc.SkipFormat(1);
//---аттрибут по спецификации накладной---------------
          FPrDoc.SkipFormat(1);
//-------------------------------------------
          FPrDoc.SkipFormat(23);
//---аттрибуты по спецификации---------------
          FPrDoc.SkipFormat(5);
//---аттрибуты по МЦ/услуге---------------
          FPrDoc.SkipFormat(5);
//-------------------------------------------
          FPrDoc.SkipFormat(23);
 //-------вывод налогов по порядку каталога------------------------------------
          }
  //---------вывод НДС, Акциз--------------------------------------------------
       // налоги по ДО на предоплату без спецификации
          IsExistNDS := false;
          ResetBounds(#SpDocNal);

          _loop SpDocNal where ((  BaseDoc.nRec                == SpDocNal.cSpDoc
                               and word(2000 + BaseDoc.VidDoc) == SpDocNal.TipDoc
                               )) ordered by index SpDocNal02
            {
              if ( not NextVisual )
                Break;

              tGSM  := tGSM  + SpDocNal.SumVal;
              tGSMR := tGSMR + SpDocNal.Summa;

              if ( SpDocNal.cNalog = coGetTune('Nalog.cNalogNDS') )
                {
                  simv1      := KatNalog.Kod;
                  ProcNds    := SpDocNal.Nalog;
                  tNDS       := tNDS  + SpDocNal.SumVal;
                  tNDSR      := tNDSR + SpDocNal.Summa;
                  IsExistNDS := true;

                  if ( spdocnal.Nalog = 10 )
                    {
                      tNDS1  := tNDS1  + SpDocNal.SumVal;
                      tNDS1R := tNDS1R + SpDocNal.Summa;
                    }

                  if ( spdocnal.Nalog = 20 )
                    {
                      tNDS2  := tNDS2  + SpDocNal.SumVal;
                      tNDS2R := tNDS2R + SpDocNal.Summa;
                    }
                }

              if ( SpDocNal.cNalog = coGetTune('Nalog.cNalogAkcis') )
                {
                  simv2 := KatNalog.Kod;
                  tAk   := tAk  + SpDocNal.SumVal;
                  tAkR  := tAkR + SpDocNal.Summa;
                }

              if ( SpDocNal.cNalog = coGetTune('Nalog.cNalogProd') )
                {
                  simv3 := KatNalog.Kod;
                  tNSel  := tNSel  + SpDocNal.SumVal;
                  tNSelR := tNSelR + SpDocNal.Summa;
                }
            }

          SetBounds(#SpDocNal);

          tGSM  := tGSM  - tNDS2;
          tGSMR := tGSMR - tNDS2R;

          if (toc = 0)
            WriteNullCount(14);
/*
          FPrDoc.Write(tNDS,2);  // печать ндс
          FPrDoc.Write(tNds*Kurs,2);
          FPrDoc.Write(ProcNds,0);
          FPrDoc.Write(IsExistNDS);
          FPrDoc.Write(tNDS1,2);  // печать ндс 10%
          FPrDoc.Write(tNds1*Kurs,2);
          FPrDoc.Write(tNDS2,2);  // печать ндс 20%
          FPrDoc.Write(tNds2*Kurs,2);
          FPrDoc.Write(tAk,2);    // печать акциза
          FPrDoc.Write(tAk*Kurs,2);
          FPrDoc.Write(tGSM,2);    // печать налога на ГСМ
          FPrDoc.Write(tGSM*Kurs,2);
          FPrDoc.Write(tNSel,2);    // печать налога с продаж
          FPrDoc.Write(tNSel*Kurs,2);
*/
          if (toc = 0)
          {
            FPrDoc.SkipFormat(14);

 //---------вывод Первой цены для протокола согласования --------------------
            FPrDoc.SkipFormat(3);
            FPrDoc.SkipFormat(3); //стоимость услуг, отнесенных к данной позиции спецификации
          }
        }
      else
        {
          _loop SpStep
            {
#ifdef _RETTARA_
              if ( GetFirst SpOtpEd where (( SpStep.cOtpEd == SpOtpEd.cOtpEd )) = tsOk )
                case BaseDoc.TaraVoz of
                  1: TaraVoz:= 'Тара возвратная';
                  2: TaraVoz:= 'Тара невозвратная';
                end;
#end
              if ( not NextVisual )
                Break;

              if ( (BaseDoc.VidDoc = 111) or (BaseDoc.VidDoc = 211) )
                if ( (SpStep.prMC <> 1) and (SpStep.cSpMC <> 0) )
                  Continue;

              if ( SpStep.prMC = 3 )
                {
                  SpStep.Price := SpStep.Summa;
                  SpStep.Kol   := 1;
                }

              bSum        := bSum + oDOfuns.DoRound( SpStep.cVal
                                           , BaseDoc.VidDoc
                                           , (SpStep.Kol*SpStep.Price)
                                           );

              SpStep.prMC := if(SpStep.prMC<>1,word(2),word(1));
              dub1        := 0;
              dub2        := 0;
              ProcNds     := 0;

              if (toc = 0)
                FPrDoc.Write(Npp);
              inc(Npp);

//---аттрибут по спецификации накладной---------------
              a1 := 0;

              _loop KatSopr
                {
                  if ( not NextVisual )
                    Break;

                  if ( GetFirst SpSopr where ((  SpStep.nRec  == SpSopr.cSpStep
                                             and KatSopr.nRec == SpSopr.cSopr
                                             )) = tsOk )
                    {
                      a1 := SpSopr.nRec;
                      Break;
                    }
                }

              if (toc = 0)
              {
                if ( GetFirst AttrVal where ((  coSpSopr    == AttrVal.wTable
                                            and SpSopr.nRec == AttrVal.cRec
                                            )) = tsOk )
                  FPrDoc.Write(AttrVal.vDouble, 2);
                else
                  FPrDoc.SkipFormat(1);

//---------------------------------------------------

                FPrDoc.Write(SpStep.nRec);
                FPrDoc.Write(SpStep.prMC);
//------------------------------------------------------------------------------
// печать сбытовых МЦ вместо базовых (доработка для ССТ)
//------------------------------------------------------------------------------
                if ( ( NOT boPrnBaseMC )  OR
                     ( pBaseMCRole = 0 )  OR
                     ( pSkidRole   = 0 )  OR
                     ( pKlPrice    = 0 )  OR
                     ( SpStep.prMC <> 1 )
                   )
                  {
                    FPrDoc.Write(Nomenkl);
                    FPrDoc.Write(NamToVar);
                  }
                else
                  {
                    var doSkidValue : double;

                    // получить размер скидки
                    if Not GetSkidkaValue(pKlPrice, doSkidValue)
                      {
                        FPrDoc.Write(Nomenkl);
                        FPrDoc.Write(NamToVar);
                      }
                    else
                      {
                        var IsZamen : boolean;

                        IsZamen := FALSE;

                        _LOOP ViewSloj where (( pBaseMCRole == ViewSloj.cRole ))
                          {
                            if IsZamen
                              Break;

                            // просмотр всех МЦ по шаблону
                            _LOOP KatMC2 where (( ViewSloj.cMain == KatMC2.cSloj (NoIndex) ))
                              {
                                ContAnMakeByHash(CAnHashID, KatMC2.cHashAn);

                                // взять значение аналитики "Базовая МЦ"
                                if ( ContAnGetAn(CAnHashID, ViewSloj.Npp) = SpStep.cMcUsl )
                                  {
                                    if ( GetFirst FastFirstRow ViewSloj2
                                            where (( pSkidRole    == ViewSloj2.cRole
                                                AND  KatMC2.cSloj == ViewSloj2.cMain )) = tsOk )
                                      {
                                        if ( GetFirst FastFirstRow KatKau
                                                where (( ViewSloj2.KodGrKAU == KatKAU.KodGroup )) = tsOk )
                                          {
                                            if ( ( (KatKau.ValMin - doSkidValue) <= 0.0001 ) AND
                                                 ( (doSkidValue - KatKau.ValMax) <= 0.0001 ) )
                                              {
                                                FPrDoc.Write(KatMC2.BarKod);
                                                FPrDoc.Write(KatMC2.Name);

                                                IsZamen := TRUE;
                                                Break;
                                              }
                                          }
                                      }
                                  }
                              }
                          }

                        if ( NOT IsZamen )
                          {
                            FPrDoc.Write(Nomenkl);
                            FPrDoc.Write(NamToVar);
                          }
                      }
                  }

//------------------------------------------------------------------------------
              }

              if ( SpStep.prMC = 1 )
                {
                  if (toc = 0)
                  {
                    if ( GetFirst KatEd where (( KatMC.cEd == KatEd.nRec )) = tsOk )
                      FPrDoc.Write(KatEd.Name);
                    else
                      FPrDoc.SkipFormat(1);

                    FPrDoc.Write(KatMC.Massa);
                    FPrDoc.Write(KatMC.SizeX);
                    FPrDoc.Write(KatMC.SizeY);
                    FPrDoc.Write(KatMC.SizeZ);
                    FPrDoc.Write(KatMC.RemMC);
                    FPrDoc.Write(KatMC.OKDP);
                    FPrDoc.Write(KatMC.CenaMC);
                    ResetBounds(#SpDocNal);

                    var cNDS : comp;
                    var NalogSum : double;

                    NalogSum := SpStep.NDS;

                    cNDS := coGetTune('Nalog.cNalogNDS');

                    if ( GetFirst fastfirstrow SpDocNal where (( SpStep.nRec                 == SpDocNal.cSpDoc and
                                                                 word(1000 + BaseDoc.VidDoc) == SpDocNal.TipDoc and
                                                                 cNDS                        == SpDocNal.cNalog )) = tsOk )
                      NalogSum := NalogSum - SpDocNal.SumVal;

                    NalogSum := NalogSum / SpStep.Kol;

                    FPrDoc.Write(SpStep.Price + NalogSum - if (BaseDoc.VhodNal = 1, SpStep.NDS, 0) / SpStep.Kol);
                    FPrDoc.Write(SpStep.Price - SpStep.Summa / SpStep.Kol);

                    SetBounds(#SpDocNal);
                    FPrDoc.Write(KatMC.MaxProcN);
                    FPrDoc.Write(KatParty.Kod);
                    FPrDoc.Write(KatParty.Name);
                    FPrDoc.Write(KatParty.dGodn);
                    FPrDoc.Write(KatParty.CenaZav);
                    FPrDoc.Write(KatParty.dAnaliz);
                    FPrDoc.Write(KatParty.nAnaliz);
                    FPrDoc.Write(KatParty.dSertif);
                    FPrDoc.Write(KatParty.nSertif);
                  }
                }
              else
                if (toc = 0)
                {
                  if ( GetFirst KatEd where (( KatUsl.cEd == KatEd.nRec )) = tsOk )
                    FPrDoc.Write(KatEd.Name);
                  else
                    FPrDoc.SkipFormat(1);
                  FPrDoc.SkipFormat(7);

                  ResetBounds(#SpDocNal);

                  var cNDS : comp;
                  var NalogSum : double;

                  NalogSum := SpStep.NDS;

                  cNDS := coGetTune('Nalog.cNalogNDS');

                  if ( GetFirst fastfirstrow SpDocNal where (( SpStep.nRec                 == SpDocNal.cSpDoc and
                                                               word(1000 + BaseDoc.VidDoc) == SpDocNal.TipDoc and
                                                               cNDS                        == SpDocNal.cNalog )) = tsOk )
                    NalogSum := NalogSum - SpDocNal.SumVal;

                  NalogSum := NalogSum / SpStep.Kol;

                  FPrDoc.Write(SpStep.Price + NalogSum - if (BaseDoc.VhodNal = 1, SpStep.NDS, 0) / SpStep.Kol);
                  FPrDoc.Write(SpStep.Price - SpStep.Summa / SpStep.Kol);

                  SetBounds(#SpDocNal);

                  FPrDoc.SkipFormat(9);
                }
//---аттрибуты по спецификации---------------

              KolAttr := 5;

              if ( GetFirst AttrVal where ((  coSpStep    == AttrVal.wTable
                                          and SpStep.nRec == AttrVal.cRec
                                          )) = tsOk )
                {
                  _loop AttrVal where((  coSpStep    == AttrVal.wTable
                                     and SpStep.nRec == AttrVal.cRec
                                     ))
                    {
                      if ( not NextVisual )
                        Break;

                      AttrTyp := 0;

                      if ( GetFirst AttrNam where (( AttrVal.cAttrNam == AttrNam.nRec )) = tsOk )
                        AttrTyp := AttrNam.AttrType;

                      KolAttr := KolAttr - 1;

                      if (toc = 0)
                      Case AttrTyp of
                        0 :  FPrDoc.Write(AttrVal.vString);
                        1 :  FPrDoc.Write(AttrVal.vDouble, 2);
                        2 :  FPrDoc.Write(AttrVal.vDate);
                        3 :  FPrDoc.Write(AttrVal.vTime);
                        else FPrDoc.Write(AttrVal.vString);
                      end;

                      if ( KolAttr = 0 )
                        Break;
                    }

                  if (toc = 0)
                    FPrDoc.SkipFormat(KolAttr);
                }
              else
                if (toc = 0)
                  FPrDoc.SkipFormat(5);

//---аттрибуты по МЦ/услуге-------------------

              KolAttrMC := 5;

              if ( SpStep.prMC = 1 )
                pNRec := coKatMC;
              else
                pNRec := coKatUsl;

              if ( GetFirst AttrVal where ((  pNRec         == AttrVal.wTable
                                          and SpStep.cMCUsl == AttrVal.cRec
                                          )) = tsOk )
                {
                  _loop AttrVal where((pNRec         == AttrVal.wTable and
                                       SpStep.cMCUsl == AttrVal.cRec))
                    {
                      if ( not NextVisual )
                        Break;

                      AttrTypMC := 0;

                      if ( GetFirst AttrNam where (( AttrVal.cAttrNam == AttrNam.nRec )) = tsOk )
                        AttrTypMC := AttrNam.AttrType;

                      KolAttrMC := KolAttrMC - 1;

                      if (toc = 0)
                      case AttrTypMC of
                        0 :  FPrDoc.Write(AttrVal.vString);
                        1 :  FPrDoc.Write(AttrVal.vDouble, 2);
                        2 :  FPrDoc.Write(AttrVal.vDate);
                        3 :  FPrDoc.Write(AttrVal.vTime);
                        else FPrDoc.Write(AttrVal.vString);
                      end;

                      if ( KolAttrMC = 0 )
                        Break;
                    }

                  if (toc = 0)
                    FPrDoc.SkipFormat(KolAttrMC);
                }
              else
                if (toc = 0)
                  FPrDoc.SkipFormat(5);

//-------------------------------------------
              totcena := (SpStep.Summa + if(BaseDoc.VhodNal=1,0,SpStep.Nds)) / SpStep.Kol;
              totcena := oDOfuns.Doround(BaseDoc.cVal,BaseDoc.VidDoc,totcena);

              if (toc = 0)
              {
                FPrDoc.Write(KatOtpEd.Name);
                FPrDoc.Write(KatOtpEd.Koef);
              }

              if (toc = 0)
              if ( SpStep.cAltEd = 0 )
                {
                  FPrDoc.Write(KatOtpEd.Name);
                  FPrDoc.Write(double(1));
                }
              else
                {
                  FPrDoc.Write(fEdIzm.GetNameOtpEd(SpStep.cAltEd));
                  FPrDoc.Write(fEdIzm.GetKoefOtpEd(SpStep.cAltEd) / KatOtpEd.Koef);
                }

              TotalSumma := TotalSumma + SpStep.Kol * SpStep.Price;

              if (toc = 0)
              {
                FPrDoc.Write(SpStep.NVagon);
                FPrDoc.Write(SpStep.NKvit);
                FPrDoc.Write(SpStep.Kol, 3);
                FPrDoc.Write(SpStep.ProcUb, 3);
                FPrDoc.Write(SpStep.KolSkl, 3);
                FPrDoc.Write(SpStep.Price, 2);
                FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc, SpStep.Price * kurs), 2); // Округленная цена
                FPrDoc.Write(oDOfuns.DoRoundNDE(BaseDoc.VidDoc,SpStep.Summa * kurs),2); // Округленная стоимость
              }

              if ( SpStep.PrSkid = 1 )
                {
                  if (toc = 0)
                    FPrDoc.Write(string(SpStep.VlSkid, 5, 1) + '%', 2);
                  Vrem := SpStep.Price * SpStep.Kol * SpStep.VlSkid / 100;
                  Vrem := oDOfuns.Doround(SpStep.cVal, BaseDoc.VidDoc, vrem);
                }
              else
                {
                  if (toc = 0)
                  if ( SpStep.Kol * SpStep.Price <> 0 )
                    FPrDoc.Write(   string(100 - (SpStep.Kol * SpStep.Price - SpStep.VlSkid) * 100
                                                 / (SpStep.Kol * SpStep.Price), 5, 1)
                                  + '%'
                                , 2
                                );
                  else
                    FPrDoc.Write('0%', 2);

                  Vrem := SpStep.VlSkid;
                }

              ObSkid := ObSkid + Vrem;

              if (toc = 0)
              {
                FPrDoc.Write(Vrem, 2);
                FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,Vrem * Kurs), 2);
              }

              var SumNalR
                , SumNal   : double;
              SumNalR := 0;
              SumNal  := 0;

              _LOOP SpDocNal
                {
                  SumNal  += SpDocNal.SumVal;
                  SumNalR += SpDocNal.Summa;
                }

              CenaBez  := SpStep.Summa        - if(BaseDoc.VhodNal = 1, SumNal , 0);
              CenaBezR := SpStep.Summa * Kurs - if(BaseDoc.VhodNal = 1, SumNalR, 0);

              CenaBez  := oDOfuns.DoRoundP(BaseDoc.cVal, BaseDoc.VidDoc , CenaBez  / SpStep.Kol);
              CenaBezR := oDOfuns.DoRoundP(0           , BaseDoc.VidDoc , CenaBezR / SpStep.Kol);

              if (toc = 0)                    // цена без налогов
              {
                FPrDoc.Write(CenaBez , 2);
                FPrDoc.Write(CenaBezR, 2);
              }

              CenaBez  := SpStep.Summa        - if(BaseDoc.VhodNal = 1, SumNal, 0);
              CenaBezR := SpStep.Summa * Kurs - if(BaseDoc.VhodNal = 1, SumNalR, 0);

              sBez  := CenaBez;

              if (toc = 0)                    // сумма без налогов и скидок
              {
                FPrDoc.Write(CenaBez , 2);
                FPrDoc.Write(CenaBezR, 2);
              }
              CenaBez  := (SpStep.Summa + if(BaseDoc.VhodNal=1,0,SumNal)) / SpStep.Kol;
              CenaBezR := (SpStep.Summa * Kurs + if(BaseDoc.VhodNal=1,0,SumNalR)) / SpStep.Kol;

              if (toc = 0)                    // цена с учетом всех скидок и налогов
              {
                FPrDoc.Write(CenaBez , 2);
                FPrDoc.Write(CenaBezR, 2);
              }

              CenaBez  := SpStep.Summa + if(BaseDoc.VhodNal=1,0,SumNal);
              CenaBezR := SpStep.Summa * Kurs + if(BaseDoc.VhodNal=1,0,SumNalR);
              Newsumma := CenaBez;

              if (toc = 0)                    // сумма с учетом всех скидок и налогов (наверное)
              {
                FPrDoc.Write(CenaBez , 2);
                FPrDoc.Write(CenaBezR, 2);
              }

//-------вывод налогов по порядку каталога------------------------------------
              sNdsV  := 0; sNdsR  := 0;
              sNds1V := 0; sNds1R := 0;
              sNds2V := 0; sNds2R := 0;
              sAkV   := 0; sAkR   := 0;
              sGSMv  := 0; sGSMr  := 0;
              sNSelV := 0; sNSelR := 0;

//---------вывод НДС, Акциз--------------------------------------------------
              if ( isNalogs )
                {
                  iNalog := 0;
                  iNalR  := 0;
                  iNalV  := 0;

                  ResetBounds(#SpDocNal);

                  IsExistNDS := false;

                  _loop SpDocNal where ((  SpStep.nRec     == SpDocNal.cSpDoc
                                       and word(1000 + BaseDoc.VidDoc) == SpDocNal.TipDoc
                                       )) ordered by index SpDocNal02
                    {
                      if ( not NextVisual )
                        Break;

                      sGSMv := sGSMv + SpDocNal.SumVal;
                      sGSMr := sGSMr + SpDocNal.Summa;

                    // Вывод налогов с группировкой по порядку их печати
                      iNpp := if (SpdocNal.Npp <= 7, SpDocNal.Npp, 7);

                      if ( iNpp > 0 )
                        if ( iNalog = iNpp )
                          {
                            iNalV := iNalV + SpDocNal.SumVal;
                            iNalR := iNalR + SpDocNal.Summa;
                          }
                        else
                          {
                            if (toc = 0)
                            {
                              FPrDoc.Write(iNalV,2);
                              FPrDoc.Write(iNalR,2);
                            }
                            iNalV := SpDocNal.SumVal;
                            iNalR := SpDocNal.Summa;
                            if (toc = 0)
                              WriteNullCount((iNpp-(iNalog+1))* 2);
                            iNalog := iNpp;
                          }

                      if ( SpDocNal.cNalog = coGetTune('Nalog.cNalogNDS') )
                        {
                          simv1      := KatNalog.Kod;
                          ProcNds    := SpDocNal.Nalog;
                          sNDSV      := sNDSV + SpDocNal.SumVal;
                          sNdsR      := sNdsR + SpDocNal.Summa;
                          IsExistNDS := true;

                          if ( spdocnal.Nalog = 10 )
                            {
                              sNDS1V := sNDS1V + SpDocNal.SumVal;
                              sNds1R := sNds1R + SpDocNal.Summa;
                            }

                          if ( spdocnal.Nalog = 20 )
                            {
                              sNDS2V := sNDS2V + SpDocNal.SumVal;
                              sNds2R := sNds2R + SpDocNal.Summa;
                            }
                        }

                      if ( SpDocNal.cNalog = coGetTune('Nalog.cNalogAkcis') )
                        {
                          simv2 := KatNalog.Kod;
                          sAkV := sAkV + SpDocNal.SumVal;
                          sAkR := sAkR + SpDocNal.Summa;
                        }

                      if ( SpDocNal.cNalog = coGetTune('Nalog.cNalogProd') )
                        {
                          simv3 := KatNalog.Kod;
                          sNSelV := sNSelV + SpDocNal.SumVal;
                          sNSelR := sNSelR + SpDocNal.Summa;
                        }
                    }

                  SetBounds(#SpDocNal);

                  sGSMv := sGSMv - sNDS2V;
                  sGSMr := sGSMr - sNDS2R;

                  if ( iNalog < 7 )
                    {
                      if (toc = 0)
                      {
                        FPrDoc.Write(iNalV, 2);  // печать прочих налогов
                        FPrDoc.Write(iNalR, 2);
                        WriteNullCount((7 - (iNalog + 1)) * 2);
                      }
                    }
                }
              else
                if (toc = 0)
                  WriteNullCount(14);

              if (toc = 0)
              {
                FPrDoc.Write(sNDSV, 2);  // печать ндс
                FPrDoc.Write(sNdsR, 2);
              }

              tNDS  := tNDS  + sNDSV;
              tNDSR := tNDSR + sNDSR;

              if (toc = 0)
              {
                FPrDoc.Write(ProcNds, 0);
                FPrDoc.Write(IsExistNDS);
                FPrDoc.Write(sNDS1V, 2);  // печать ндс 10%
                FPrDoc.Write(sNds1R, 2);
              }

              tNDS1  := tNDS1  + sNDS1V;
              tNDS1R := tNDS1R + sNDS1R;

              if (toc = 0)
              {
                FPrDoc.Write(sNDS2V, 2);  // печать ндс 20%
                FPrDoc.Write(sNds2R, 2);
              }

              tNDS2  := tNDS2  + sNDS2V;
              tNDS2R := tNDS2R + sNDS2R;

              if (toc = 0)
              {
                FPrDoc.Write(sAkV, 2);    // печать акциза
                FPrDoc.Write(sAkR, 2);
              }

              tAk  := tAk  + sAkV;
              tAkR := tAkR + sAkR;

              if (toc = 0)
              {
                FPrDoc.Write(sGSMv, 2);    // печать налога на ГСМ
                FPrDoc.Write(sGSMr, 2);
              }

              tGSM  := tGSM  + sGSMv;
              tGSMR := tGSMR + sGSMr;

              if (toc = 0)
              {
                FPrDoc.Write(sNSelv, 2);    // печать налога с продаж
                FPrDoc.Write(sNSelr, 2);
              }

              tNSel  := tNSel  + sNSelV;
              tNSelR := tNSelR + sNSelR;

              if (toc = 1)
              {
                if ( SpStep.PrSkid = 1 )
                {
                  Vrem := SpStep.Price * SpStep.Kol * SpStep.VlSkid / 100;
                  Vrem := oDOfuns.Doround(SpStep.cVal, BaseDoc.VidDoc, vrem);
                }
                else
                  Vrem := SpStep.VlSkid;

                ClearBuffer(#FR_Specif);
                FR_Specif.NRec2       := fr_nrec;
                Fr_Specif.Nrec        := Fr_Specif_Nrec;
                Fr_Specif.NomPP       := Npp - 1;
                Fr_Specif.NomNomer    := Nomenkl;
                Fr_Specif.Naimen      := NamToVar;
                Fr_Specif.EdIzm       := KatOtpEd.Name;
                Fr_Specif.kol         := SpStep.Kol;
                Fr_Specif.ProcUb      := SpStep.ProcUb;
                Fr_Specif.KolSkl      := SpStep.KolSkl;
                Fr_Specif.cena        := SpStep.Price;
                Fr_Specif.summa       := SpStep.Price * SpStep.Kol;
                Fr_Specif.cenaR       := oDOfuns.DoroundNDE(BaseDoc.VidDoc, SpStep.Price * kurs);
                Fr_Specif.summaR      := oDOfuns.DoRoundNDE(BaseDoc.VidDoc,SpStep.Summa * kurs);

                Fr_Specif.ProcSkidka  := Vrem*100/(SpStep.Price * SpStep.Kol);
                Fr_Specif.Skidka      := Vrem;
                Fr_Specif.SkidkaPoDok := (SpStep.Price * SpStep.Kol - Vrem) * realSkidPercent / 100;
                Fr_Specif.SkidkaR     := oDOfuns.DoroundNDE(BaseDoc.VidDoc,Vrem * Kurs);

                Fr_Specif.IsExistNDS  := IsExistNDS;
                Fr_Specif.Nalogi      := Newsumma-sBez;
                Fr_Specif.SumBezNal   := sBez;
                Fr_Specif.SumPos      := Newsumma;

                Fr_Specif.NDS         := sNDSV;
                Fr_Specif.NDSR        := sNdsR;
                Fr_Specif.St_NDS      := DoubleToStr(ProcNds,'\2p[|-]3666') + ' %' ;
                Fr_Specif.SumBezNDS   := SpStep.Price * SpStep.Kol + if (BaseDoc.VhodNal = 1, 0, SpStep.NDS) - sNDSV;
                ResetBounds(#SpDocNal);

                var cNDS : comp;
                var NalogSum : double;

                NalogSum := SpStep.NDS;

                cNDS := coGetTune('Nalog.cNalogNDS');

                if ( GetFirst fastfirstrow SpDocNal where (( SpStep.nRec                 == SpDocNal.cSpDoc and
                                                             word(1000 + BaseDoc.VidDoc) == SpDocNal.TipDoc and
                                                             cNDS                        == SpDocNal.cNalog )) = tsOk )
                  NalogSum := NalogSum - SpDocNal.SumVal;

                NalogSum := NalogSum / SpStep.Kol;

                Fr_Specif.CenaMCBezNDS := SpStep.Price + NalogSum - if (BaseDoc.VhodNal = 1, SpStep.NDS, 0) / SpStep.Kol;
                Fr_Specif.SkidkaEdMC   := SpStep.Price - SpStep.Summa / SpStep.Kol;

                SetBounds(#SpDocNal)

                var iCountry : MCOriginCountry;

                if (SpStep.PrMC = 1)
                {
                  FR_Specif.sf_Strana := iCountry.getCountryName(SpStep.cMCUsl, SpStep.cParty);
                  FR_Specif.sf_NomDekl:= iCountry.getGTDNumber(SpStep.cParty);
                }

                if (FR_Specif.sf_Strana = '')
                  FR_Specif.sf_Strana := '-';

                if (FR_Specif.sf_NomDekl = '')
                  FR_Specif.sf_NomDekl:= '-';

                cenabez := (SpStep.Summa - if(BaseDoc.VhodNal = 1, SpStep.Nds, 0)) / SpStep.Kol;
                Fr_Specif.sf_cena     := cenabez + sAkV/SpStep.Kol;

                cenabez := SpStep.Summa - if(BaseDoc.VhodNal = 1,SpStep.Nds,0);
                Fr_Specif.sf_stBezNal := cenabez + sAkV;

                if (sAkv <> 0)
                  Fr_Specif.sf_akciz  := string(sAkV)
                else
                  Fr_Specif.sf_akciz  := ' - ' ;

                Fr_Specif.sf_NalSt    := DoubleToStr(ProcNds,'\2p[|-]3666') + ' %' ;
                Fr_Specif.sf_NalStb   := DoubleToStr(ProcNds,'\2p[|-]3666');
                Fr_Specif.sf_Nalog    := sNDSV;

                cenabez := SpStep.Summa + if(BaseDoc.VhodNal = 1, 0, SpStep.Nds);
                Fr_Specif.sf_StNal    := cenabez - sNSelv;

                if (GetFirst fastfirstrow KlPrice
                  where ((SpStep.cPriceList == KlPrice.nRec )) = tsOK)
                {
                  TekKlPrice := SpStep.cPriceList;
                  if (GetFirst fastfirstrow GrPrice
                               where (( KlPrice.cGrPrice == GrPrice.nRec )) = tsOK)
                    TekGrPrice := KlPrice.cGrPrice
                  else
                    TekGrPrice := -1;
                }
                else
                {
                  TekKlPrice := 0;
                  TekGrPrice := -1;
                }

                FR_Specif.printIer := 0;

                if (TekGrPrice <> CurGrPrice)
                {
                  CurGrPrice := TekGrPrice;
                  CurKlPrice := TekKlPrice;
                  FR_Specif.printIer     := 2;
                  FR_Specif.ier_Group    := if (CurGrPrice = -1, 'Прайс-листы без группы', GrPrice.Name)   ;
                  FR_Specif.ier_PriceL   := if (CurKlPrice = 0, 'Без привязки к прайс-листу', KlPrice.Name);
                }

                if (TekGrPrice = CurGrPrice) and (TekKlPrice <> CurKlPrice)
                {
                  FR_Specif.printIer     := 1;
                  CurKlPrice := TekKlPrice;
                  FR_Specif.ier_PriceL   := if (CurKlPrice = 0, 'Без привязки к прайс-листу', KlPrice.Name);
                }

                insert current FR_Specif;
                NoData := false;
              }

//---------вывод Первой цены для протокола согласования --------------------
              FirstCena := 0;
              UchetCena := 0;
              OtpCena   := 0;

              if ( SpStep.prMC = 1 )
                {
                  FirstCena := oDOfuns.DoroundNDE(BaseDoc.VidDoc, KatParty.CenaZav);

                  if ( FirstCena < 0.01 )
                    FirstCena := oDOfuns.DoroundNDE(BaseDoc.VidDoc, KatMC.CenaMC);

                  if boGetTune('Doc.ProtSogl')     // пересчет учетной цены
                    {
                      //InitMCInfo(BaseDoc.dDoc); - инициализируем в начале цикла
                      StepMCInfo(  SpStep.cMCUsl
                                , 0
                                , 0
                                , 0
                                , if(SpStep.cParty=0,comp(-1),SpStep.cParty)
                                );

                      if ( WasStoppedMCInfo )
                        Break;

                      UchetCena := oDOfuns.DoroundNDE(BaseDoc.VidDoc, orderAveragePrice);
                      //DoneMCInfo; - закрываем в конце цикла
                    }

                  if ( FirstCena < 0.01 )
                    FirstCena := UchetCena;
                }
              else
                {
                  FirstCena := oDOfuns.DoroundNDE(BaseDoc.VidDoc,KatUsl.RasCenka);
                  UchetCena := FirstCena;
                }


              if ( SpStep.kol > 0 )
                OtpCena := oDOfuns.DoroundNDE(BaseDoc.VidDoc, SpStep.Summa / SpStep.Kol * kurs); //отпускная цена

              if ( FirstCena < 0.01 )
                FirstCena := UchetCena;

              if ( UchetCena < 0.01 )
                UchetCena := FirstCena;

              SumNadb1 := SumNadb1 + (UchetCena - FirstCena) * SpStep.kol;
              SumNadb2 := SumNadb2 + (OtpCena - UchetCena) * SpStep.kol;

              if (toc = 0)
              {
                FPrDoc.Write(FirstCena, 2);  // заводская цена
                FPrDoc.Write(UchetCena, 2);  // прайс-цена
                FPrDoc.Write(OtpCena, 2);    // отпускная цена
              }

              tu    := 0;
              tuNDS := 0;
              tuALL := 0;

              _loop SpStepC where (( SpStep.nRec == SpStepC.cSpMC ))
                {
                  tu    := tu    + SpStepC.Summa - if(BaseDoc.VhodNal=1,SpStepC.Nds,0);
                  tuNDS := tuNDS + SpStepC.NDS;
                }

              tuALL := tu + tuNDS;
              if (toc = 0)
              {
                FPrDoc.Write(tu, 2);     //  стоимость услуг, отнесенных к
                FPrDoc.Write(tuNDS, 2);  //  данной позиции спецификации
                FPrDoc.Write(tuALL, 2);
              }
           }
        }

      if boGetTune('Doc.ProtSogl')     // пересчет учетной цены
        DoneMCInfo;

      if (toc = 0)
      {
      FPrDoc.PutEvent(feBreak);

      FPrDoc.Write(SumNadb1, 2);     // Сумма надбавок
      FPrDoc.Write(SumNadb2, 2);

      FPrDoc.Write(ObSkid,2);  //Сумма скидок по позициям

      if ( BaseDoc.cVal = 0 )
        FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,ObSkid), 2);
      else
        FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc, ObSkid * Kurs), 2);
      }

      if (toc = 0)
        if ( BaseDoc.Nds <> 0 )
          {
            if ( BaseDoc.VhodNal = 1 )
              FPrDoc.Write('Итого с учетом налогов');
            else
              FPrDoc.Write('Итого без учета налогов');
          }
        else
          FPrDoc.Write('Итого');

      if (   ((BaseDoc.VidDoc = 211) or (BaseDoc.VidDoc = 111))
         and (BaseDoc.SpecYes = 0)
         )
        {
          SummainBaseDoc := BaseDoc.Total;
          bSum           := BaseDoc.Total;
        }
      else
        SummainBaseDoc := BaseDoc.Summa;

      if (toc = 0)
      {
        FPrDoc.Write(SummainBaseDoc, 2);
        FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc, SummainBaseDoc * kurs), 2);
        FPrDoc.Write(bSum, 2);          // i2
        FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,bSum * Kurs), 2);  //i2r

        FPrDoc.Write(BaseDoc.Total, 2);          // i2new
        FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,BaseDoc.TotalNDE), 2);
      }
//----------печать налогов по ДО-----------------------------------------------
      if ( BaseDoc.Nds <> 0 )
        {

          if (   ((BaseDoc.VidDoc = 111) or (BaseDoc.VidDoc = 211))
             and (BaseDoc.SpecYes = 1)
             )
            {
              tNds  := tNds  / 100 * BaseDoc.ProcOpl;
              tNdsR := tNdsR / 100 * BaseDoc.ProcOpl;

              tAk   := tAk   / 100 * BaseDoc.ProcOpl;
              tAkR  := tAkR  / 100 * BaseDoc.ProcOpl;

              tNSel := tNSel  / 100 * BaseDoc.ProcOpl;
              tNSelR:= tNSelR / 100 * BaseDoc.ProcOpl;
            }

          if (toc = 0)
          {
          FPrDoc.Write(Simv1);
          FPrDoc.Write(tNds, 2);
          FPrDoc.Write(SimvolB);
          FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,tNDSR), 2);
          FPrDoc.Write(s_SimvRub);

          if ( Simv2 = '' )
            FPrDoc.SkipFormat(5)
          else
            {
              FPrDoc.Write(Simv2);
              FPrDoc.Write(tAk, 2);
              FPrDoc.Write(SimvolB);
              FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,tAkR), 2);
              FPrDoc.Write(s_SimvRub);
            }

          if ( Simv3 = '' )
            FPrDoc.SkipFormat(5)
          else
            {
              FPrDoc.Write('Налог с продаж');
              FPrDoc.Write(tNSel, 2);
              FPrDoc.Write(SimvolB);
              FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,tNSelR), 2);
              FPrDoc.Write(s_SimvRub);
            }

          FPrDoc.Write(tNds1, 2);
          FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,tNDS1R), 2);

          FPrDoc.Write(tNds2, 2);
          FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,tNDS2R), 2);

          FPrDoc.Write(tGSM, 2);
          FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,tGSMR), 2);
          }

          if ( BaseDoc.VhodNal <> 1 )
            {
              if (toc = 0)
                FPrDoc.Write('Итого с учетом налогов');

              DoSkidka := if(BaseDoc.VhSkid = 1, 1 - BaseDoc.Skidka/100, BaseDoc.Skidka);

              if ((BaseDoc.VidDoc = 111) or (BaseDoc.VidDoc = 211))
                TotVhNal := (BaseDoc.Summa + BaseDoc.NDS * 100 / BaseDoc.ProcOpl) / DoSkidka;
              else
                TotVhNal := BaseDoc.Total/doSkidka;

              if (toc = 0)
              {
                FPrDoc.Write(TotVhNal, 2);
                FPrDoc.Write(SimvolB);
                FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,(TotVhNal * Kurs)), 2);
                FPrDoc.Write(s_SimvRub);
              }
            }
          else
            if (toc = 0)
              FPrDoc.SkipFormat(5);

        }
      else
        if (toc = 0)
          FPrDoc.SkipFormat(26);

//-------------Скидка по ДО----------------------------------
      vrem := 0;

      if ( BaseDoc.Skidka <> 0 )
        {
          if (toc = 0)
          {
            FPrDoc.Write('Скидка к сумме по документу ');
            FPrDoc.Write(BaseDoc.Skidka, 2);
          }

          if ( BaseDoc.VhSkid = 1 )
            {
              if ( (BaseDoc.VidDoc = 111) or (BaseDoc.VidDoc = 211) )
                {
                  if ( BaseDoc.VhodNal <> 1 )
                    vrem :=   (BaseDoc.Summa + BaseDoc.NDS) / (1 - BaseDoc.Skidka / 100)
                            - BaseDoc.Summa
                            - BaseDoc.NDS;
                  else
                    vrem := BaseDoc.Summa / (1 - BaseDoc.Skidka / 100) - BaseDoc.Summa;
                }
              else
                // ПИР 101.35410
                if (wGetTuneRes('Tara.SkTara', ResTunes.Tara_SkTara) = 1)
                  vrem := BaseDoc.Total / (1 - BaseDoc.Skidka / 100) - BaseDoc.Total;
                else
                  {
                    var SumBezT : double;
                    SumBezT := 0;
                    _loop SpStep
                      if (SpStep.PrMC = 1)
                        {
                          if ( KatMC.kGroupMC <> sGetTuneRes('Tara.KodGrMcTara', ResTunes.Tara_KodGrMcTara) )
                            SumBezT := SumBezT + SpStep.Summa;
                        }
                      else
                        SumBezT := SumBezT + SpStep.Summa;

                    vrem := SumBezT / (1 - BaseDoc.Skidka / 100) - SumBezT;
                  }

              vrem := oDOfuns.Doround(BaseDoc.cVal, BaseDoc.VidDoc, vrem);

              if (toc = 0)
              {
                FPrDoc.Write(' %');
                FPrDoc.Write(vrem, 2);
                FPrDoc.Write(SimvolB);
              }
              d3 := ' %';
            }
          else
            {
              vrem := (BaseDoc.Skidka * 100) / (BaseDoc.Total + BaseDoc.Skidka);

              if (toc = 0)
              {
                FPrDoc.Write(SimvolB);
                FPrDoc.Write(vrem, 2);
                FPrDoc.Write(' %');
              }
              d3 := SimvolB;
              vrem := BaseDoc.Skidka;
            }

          if (toc = 0)
          {
            FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc,vrem * kurs), 2);
            FPrDoc.Write(s_SimvRub);
          }
        }
      else
        if (toc = 0)
          FPrDoc.SkipFormat(7);

//------Итоги и сумма прописью---------------------------------------------
      if (toc = 0)
      {
      FPrDoc.Write(BaseDoc.Total, 2);
      FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc, BaseDoc.TotalNDE), 2);

      FPrDoc.Write(PredOplata, 2);    // предоплата
      FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc, PredOplata * Kurs), 2);

      FPrDoc.Write(Doplata, 2);       // необходимо оплатить
      FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc, Doplata * Kurs), 2);

      FPrDoc.Write(BaseDoc.Nds, 2);
      FPrDoc.Write(oDOfuns.DoroundNDE(BaseDoc.VidDoc, BaseDoc.Nds * Kurs), 2);

      vrem := Round(BaseDoc.Total * 100) / 100;
      FPrDoc.Write(DoubleToString(BaseDoc.cVal, vrem));

      vrem := Round(oDOfuns.DoroundNDE(BaseDoc.VidDoc, BaseDoc.TotalNDE) * 100) / 100;
      FPrDoc.Write(DoubleToString(0, vrem));

      if ( (BaseDoc.TipMoney = 2) and (BaseDoc.DopProc <> 0) )
        {
          FPrDoc.Write('Процент к курсу на день оплаты ');
          FPrDoc.Write(BaseDoc.DopProc, 2);
        }
      else
        FPrDoc.SkipFormat(2);

      FPrDoc.Write(DoubleToString(BaseDoc.cVal, round(tNds,2)));
      FPrDoc.Write(BaseDoc.KolDn, 0);
      FPrDoc.Write(TaraVoz);

      FPrDoc.Write(sGetTune('Boss'));    //директор
      FPrDoc.Write(sGetTune('MainBuh')); //гл.бухгалтер

      if ( cycle_flag = 1 )
        {
        if ( p_flag = 1 )
          {
            FPrDoc.PutEventById(fefalse, fcDelimiter);
            FPrDoc.write(' ');
          }
        else
          {
            FPrDoc.PutEventById(fetrue, fcDelimiter);
            FPrDoc.SkipFormat(1);
          }
        }
      }
      else
      {
        _LOOP BaseFin where (( word(0)          == BaseFin.TiDkBase
                AND  StepDoc.NRec     == BaseFin.cStepDoc))
        {
          ClearBuffer(#FR_BaseFin);
          FR_BaseFin.Nrec2 := fr_nrec;
          FR_BaseFin_Nrec  := FR_BaseFin_Nrec + 1;
          FR_BaseFin.Nrec  := FR_BaseFin_Nrec;
          FR_BaseFin.Nomer := '№ ' + BaseFin.NoDoc;
          FR_BaseFin.Data  := if ( DateToStr(BaseFin.dDoc, 'DD/MM/YYYY') <> 'ДД/ММ/ГГГГ'
                                               , ' от ' + DateToStr(BaseFin.dDoc, 'DD/MM/YYYY'), '');
          Insert Current FR_BaseFin;
        }

        fr_vid            := BaseDoc.VidDoc;

        if (NoData = true)
        {
          ClearBuffer(#fr_Specif);
          FR_Specif.NRec2  := fr_nrec;
          Fr_Specif.Nrec   := Fr_Specif_Nrec;
          fr_Specif.Naimen := '';
          Insert Current fr_Specif;
        }

        ClearBuffer(#fr_Schet);
        //Заголовок - Header
        fr_Schet.nrec           := fr_nrec;
        fr_Schet.H_descr        := BaseDoc.Descr;
        fr_Schet.NoData         := if (NoData = true, 1, 0);

        if ( (BaseDoc.TipMoney = 2) or (BaseDoc.TipMoney = 3) )
          fr_Schet.kurs :=  'Курс '
                      + SimvolB
                      + ' '
                      + string(Kurs)
                      + ' на '
                      + DateToStr(if(BaseDoc.ValCurse<>0, BaseDoc.dValCurse, CursVal.DatVal) , '');

        fr_Schet.H_simvVal      := SimvolB;
        fr_Schet.H_simvRub      := s_SimvRub;
        fr_Schet.H_NomSchet     := BaseDoc.NoDoc;
        fr_Schet.H_dateSchet    := DateToStr(BaseDoc.dDoc, 'DD/MM/YYYY');

        // Данные по собственной организации
        GetInfoKatorg(Myorg.nRec, MyBank.nRec, InfoKO);
        fr_Schet.H_kontr1       := InfoKO.KOName;
        fr_Schet.H_unn_name1    :=  sGetTune('KatOrg.FldView.UNN') + ':';
        fr_Schet.H_unn1         :=  InfoKO.KOUNN;
        fr_Schet.H_unnKpp_name1 :=  sGetTune('KatOrg.FldView.UNN') + ' / КПП:';

        if (InfoKO.KOUNN <> 0) or (InfoKO.KOKODPLATNDS <> 0)
          fr_Schet.H_unnKpp1    := InfoKO.KOUNN + ' / '+  InfoKO.KOKODPLATNDS;

        fr_Schet.H_bank1        := InfoKO.KBName;
        fr_Schet.H_bankAddr1    := InfoKO.KBAddr;
        fr_Schet.H_bankcity1    := InfoKO.KBCity;
        fr_Schet.H_schNom1      := InfoKO.KBSchet1 + ' ' + sGetTune('KatOrg.FldView.MFO') + ' ' + InfoKO.KBMFO1;
        fr_Schet.H_mfo1         := InfoKO.KBSchet2 + ' ' + sGetTune('KatOrg.FldView.MFO') + ' ' + InfoKO.KBMFO2;
        fr_Schet.H_kod1         := if(InfoKO.KBSchet1<>'', '№ ' + InfoKO.KBSchet1, '') + if(InfoKO.KBName <> '', ' в ' +  InfoKO.KBName, '')
                                   + if(InfoKO.KBAddr<> '', ', ' + InfoKO.KBAddr, '')
                                   + if(InfoKO.KBMFO1<>'', ', код ' + InfoKO.KBMFO1, '');

        fr_Schet.H_adres1       := GetJurAddrForSF(Myorg.nRec);
        fr_Schet.H_telFax1      := InfoKO.KOTel;
         // Для счета-фактуры

        cRecMyOrg := coGetTune('MyOrg');

        HeadOrg := InfoKO.KOName;

        if ExAttrFun.ValueExists(coKatOrg, cRecMyOrg, 'Головная организация')
        {
          cRecMyOrg := ExAttrFun.coGetAttr(coKatOrg, cRecMyOrg, 'Головная организация');

          if GetFirst KatOrg where ((cRecMyOrg == KatOrg.nRec)) = tsOk
            HeadOrg := KatOrg.Name;
        };

        fr_Schet.sf_H_pokupatel :=  HeadOrg;
        fr_Schet.sf_H_pokupatelB := HeadOrg + if(InfoKO.KOUNN <> '', ', УНП ', ' ')  + InfoKO.KOUNN +
                                    if(InfoKO.KOOKPO <> '', ', ОКЮЛП ', ' ') + InfoKO.KOOKPO;

        fullMyOrgAdres := GetJurAddrForSF(cRecMyOrg);

        fr_Schet.sf_H_adres2 := if (fullMyOrgAdres = '', InfoKO.KOAddr, fullMyOrgAdres);
        fr_Schet.sf_H_unn_name2 :=  sGetTune('KatOrg.FldView.UNN') + '/' + sGetTune('KatOrg.FldView.KodPlatNDS') + ' покупателя';

        var sf_KodPlat : string;

        sf_KodPlat := if(BaseDoc.Direct = 1, Fromorg.KodPlatNDS, Toorg.KodPlatNDS);

        fr_Schet.sf_H_unn2  :=  if (InfoKO.KOUNN       = '', ' - ', InfoKO.KOUNN) + ' / '
                              + if (sf_KodPlat = '', ' - ', sf_KodPlat);
        // Грузоотправитель
        cRecOrg := BaseDoc.cGrOtpr;

        if (BaseDoc.VidDoc <> 101)
        {
          fullOrgGruzFrom := GetPostAddrForSF(BaseDoc.cGrOtpr);
          fr_Schet.sf_H_gruzOtpb := fullOrgGruzFrom ;

          if (cRecMyOrg = BaseDoc.cGrOtpr)
          {
            fullOrgGruzFrom := 'он же'
            fr_Schet.sf_H_gruzOtpb := fullOrgGruzFrom ;
          }
          else
          {
            if (GetFirst fastfirstrow KatOrgXL = 0)
            {
              fr_Schet.sf_H_gruzOtpb := KatOrgXL.Name + if(Fromorg.UNN <> '', ', УНП ', '') + Fromorg.UNN
                                        + if(Fromorg.OKPO <> '', ', ОКЮЛП ', '') + Fromorg.OKPO
                                        + if(fullOrgGruzFrom <> '', ', ', ' ') + fullOrgGruzFrom;
              fullOrgGruzFrom := KatOrgXL.Name + if( fullOrgGruzFrom <> '', ', ', '') + fullOrgGruzFrom;
            }
          }
        }

        // Данные по контрагенту
        GetInfoKatorg( BaseDoc.corg, BaseDoc.cBank, InfoKO);

        fr_Schet.H_kontr2       := InfoKO.KOName;
        fr_Schet.H_unn_name2    := sGetTune('KatOrg.FldView.UNN') + ':';
        fr_Schet.H_unn2         := InfoKO.KOUNN;
        fr_Schet.H_unnKpp_name2 := sGetTune('KatOrg.FldView.UNN') + ' / КПП:';

        if (InfoKO.KOUNN <> 0) or (InfoKO.KOKODPLATNDS <> 0)
          fr_Schet.H_unnKpp2    := InfoKO.KOUNN + ' / ' + InfoKO.KOKODPLATNDS;

        fr_Schet.H_bank2        := InfoKO.KBName;
        fr_Schet.H_bankAddr2    := InfoKO.KBAddr;
        fr_Schet.H_bankcity2    := InfoKO.KBCity;
        fr_Schet.H_schNom2      := InfoKO.KBSchet1 + ' ' + sGetTune('KatOrg.FldView.MFO') + ' ' + InfoKO.KBMFO1;
        fr_Schet.H_mfo2         := InfoKO.KBSchet2 + ' ' + sGetTune('KatOrg.FldView.MFO') + ' ' + InfoKO.KBMFO2;
        fr_Schet.H_kod2         := if(InfoKO.KBSchet1<>'', '№ ' + InfoKO.KBSchet1, '') + if(InfoKO.KBName<> '', ' в ' +  InfoKO.KBName, '')
                                   + if(InfoKO.KBAddr<> '', ', ' + InfoKO.KBAddr, '')
                                   + if(InfoKO.KBMFO1<>'', ', код ' + InfoKO.KBMFO1, '');
        fr_Schet.H_adres2       := GetJurAddrForSF(InfoKO.KONRec);
        fr_Schet.H_telFax2      := InfoKO.KOTel;
        fr_Schet.H_Prim         := BaseDoc.Name;
        // Для счета-фактуры

        HeadOrg := '';

        if ExAttrFun.ValueExists(coKatOrg, BaseDoc.cOrg, 'Головная организация')
          cHeadRec := ExAttrFun.coGetAttr(coKatOrg, BaseDoc.cOrg, 'Головная организация');
        else
          cHeadRec := BaseDoc.cOrg;

        if GetFirst KatOrg where ((cHeadRec == KatOrg.nRec)) = tsOk
          HeadOrg := LL.GetKatOrgName(cHeadRec, koOnTune);

        fr_Schet.sf_H_prodavec  := HeadOrg;
        fr_Schet.sf_H_prodavecb := HeadOrg + if(GetUnnOrg(cHeadRec) <> '', ', УНП ' + GetUnnOrg(cHeadRec), '')
                                   + if(Katorg.OKPO <> '', ', ОКЮЛП ' + Katorg.OKPO, ' ');

        fullOrgAdres := GetJurAddrForSF(cHeadRec);

        fr_Schet.sf_H_adres1    := if (fullOrgAdres = '', InfoKO.KOAddr, fullOrgAdres);
        fr_Schet.sf_H_unn_name1 := sGetTune('KatOrg.FldView.UNN') + '/' + sGetTune('KatOrg.FldView.KodPlatNDS') + ' продавца';

        sf_KodPlat := if(BaseDoc.Direct = 1, Toorg.KodPlatNDS, Fromorg.KodPlatNDS);

        fr_Schet.sf_H_unn1      := if (InfoKO.KOUNN = '', ' - ', InfoKO.KOUNN) + ' / ' +
                                   if (sf_KodPlat = '', ' - ', sf_KodPlat);

        // Грузоотправитель и грузополучатель

        fullOrgGruzTo   := GetPostAddrForSF(BaseDoc.cGrPol);
        fr_Schet.sf_H_gruzPolb := LL.GetKatorgName(Toorg.nRec, koOnTune) + if(Toorg.UNN <> '', ', УНП ', '') + Toorg.UNN
                                  + if(Toorg.OKPO <> '', ', ОКЮЛП ', '') + Toorg.OKPO
                                  + if (fullOrgGruzTo = '', ' ', ', ' + fullOrgGruzTo);

        if (GetFirst fastfirstrow KatOrgXL = 0)
        {
          fr_Schet.sf_H_gruzPolb := KatOrgXL.Name + if(Toorg.UNN <> '', ', УНП ', '') + Toorg.UNN
                                    + if(Toorg.OKPO <> '', ', ОКЮЛП ', '') + Toorg.OKPO
                                    + if (fullOrgGruzTo = '', ' ', ', ' + fullOrgGruzTo);
          fullOrgGruzTo := KatOrgXL.Name + if(fullOrgGruzTo <> '', ', ', '') + fullOrgGruzTo;
        }

        if (BaseDoc.VidDoc = 101 OR BaseDoc.VidDoc = 1410)
        {
          fullOrgGruzFrom := GetPostAddrForSF(BaseDoc.cGrOtpr);

          if (BaseDoc.cOrg = BaseDoc.cGrOtpr)
          {
            fullOrgGruzFrom := 'он же'
            fr_Schet.sf_H_gruzOtpb := fullOrgGruzFrom ;
          }
          else
          {
            if (GetFirst fastfirstrow KatOrgXL = 0)
            {
              fr_Schet.sf_H_gruzOtpb := KatOrgXL.Name + if(Fromorg.UNN <> '', ', УНП ', '') + Fromorg.UNN
                                        + if(Fromorg.OKPO <> '', ', ОКЮЛП ', '') + Fromorg.OKPO
                                        + if(fullOrgGruzFrom <> '', ', ', ' ') + fullOrgGruzFrom;
              fullOrgGruzFrom := KatOrgXL.Name + if( fullOrgGruzFrom <> '', ', ', '') + fullOrgGruzFrom;
            }
          }
        }

        fr_Schet.sf_H_gruzOtp := fullOrgGruzFrom;
        fr_Schet.sf_H_gruzPol := fullOrgGruzTo;

        // Итоги - Footer
        GetInfoKatorg( BaseDoc.corg, BaseDoc.cBank, InfoKO);

        fr_Schet.F_ItogoNadpis  := 'Итого ' + if ( BaseDoc.Nds <> 0,if ( BaseDoc.VhodNal = 1 , 'с учетом налогов:','без учета налогов:' ),'');
        fr_Schet.F_Itogo        := bSum;
        fr_Schet.F_Itogo_Okr    := oDOfuns.DoroundNDE(BaseDoc.VidDoc,bSum * Kurs);
        fr_Schet.F_Skidki       := ObSkid;
        fr_Schet.F_ItogoSkid    := bSum - ObSkid;
        fr_Schet.F_ItogoSkidNal := (bSum - ObSkid)*realSkidPercent/100;
        fr_Schet.F_ItogoNal     := BaseDoc.Nds;
        fr_Schet.F_ItogoBezNal  := BaseDoc.Total - BaseDoc.Nds;
        fr_Schet.F_ItogopoPoz   := BaseDoc.Total;
        fr_Schet.F_Skidki_Okr   := if ( BaseDoc.cVal = 0, oDOfuns.DoroundNDE(BaseDoc.VidDoc,ObSkid)
                                                        , oDOfuns.DoroundNDE(BaseDoc.VidDoc, ObSkid * Kurs))  ;
        fr_Schet.F_ItogoSkid_Okr:= oDOfuns.DoroundNDE(BaseDoc.VidDoc,bSum * Kurs) - if ( BaseDoc.cVal = 0
                                              , oDOfuns.DoroundNDE(BaseDoc.VidDoc,ObSkid)
                                                                                  , oDOfuns.DoroundNDE(BaseDoc.VidDoc, ObSkid * Kurs));
        if (BaseDoc.VhodNal <> 1) and (BaseDoc.Nds <> 0)
        {
          fr_Schet.F_Nalog        := TotVhNal;
          fr_Schet.F_Nalog_Okr    := oDOfuns.DoroundNDE(BaseDoc.VidDoc,(TotVhNal * Kurs));
        }

        if ( BaseDoc.Skidka <> 0 )
        {
          fr_Schet.F_SkidSumNadpis:= 'Скидка к сумме по документу ' + StringNLZR( if (d3= ' %', BaseDoc.Skidka, vrem), 0, 3) + ' %';
          fr_Schet.F_SkidSumNadpis1:= 'Скидка к сумме по документу '
                                      + StringNLZR( if (d3= ' %', BaseDoc.Skidka, BaseDoc.Skidka * 100/bSum ), 0, 3) + ' %';
          fr_Schet.F_SkidkSum     := if (d3=' %', vrem, BaseDoc.Skidka);

          fr_Schet.F_SkidkSumNDE  := oDOfuns.DoroundNDE(BaseDoc.VidDoc,vrem * kurs);
        }
        fr_Schet.F_ItogokOpl    :=  BaseDoc.Total;
        fr_Schet.F_ItogokOpl_ok :=  oDOfuns.DoroundNDE(BaseDoc.VidDoc, BaseDoc.TotalNDE);
        fr_Schet.F_ItogokOpl_Okr:=  DoubleToStr(oDOfuns.DoroundNDE(BaseDoc.VidDoc,BaseDoc.TotalNDE), '666 666 666 666 666 667,88')
                                              + ' ' + s_SimvRub + ' (НДС '
                                              + DoubleToStr(oDOfuns.DoroundNDE(BaseDoc.VidDoc,tNDSR), '666 666 667,88') + ')';
        fr_Schet.F_ItogkOpl_full:=  DoubleToStr(BaseDoc.Total, '666 666 666 666 666 667,88') + ' ' + SimvolB
                                       + if (tNDS <> 0,' (НДС ' + DoubleToStr(tNDS, '666 666 667,88'), '')
                                       + if ((tNDS <> 0) and (tnSel <> 0),',  Налог с продаж ' + DoubleToStr(tnSel, '666 666 667,88'), '') + ')';

        if ( BaseDoc.Nds <> 0 )
        {
          fr_Schet.F_NDS_Simv     :=  Simv1;
          fr_Schet.F_NDS          :=  tNDS;
          fr_Schet.F_Akciz_Simv   :=  Simv2;
          fr_Schet.F_Akciz        :=  tAk;
          fr_Schet.F_NalProdSimv  := 'Налог с продаж';
          fr_Schet.F_NalProd      :=  tnSel;
          fr_Schet.F_NDS_okr      :=  oDOfuns.DoroundNDE(BaseDoc.VidDoc, tNDSR);
          fr_Schet.F_Akciz_okr    :=  oDOfuns.DoroundNDE(BaseDoc.VidDoc, tAkR);
          fr_Schet.F_NalProd_okr  :=  oDOfuns.DoroundNDE(BaseDoc.VidDoc, tnSelR);
        }
        if ( BaseDoc.VhodNal <> 1)
          fr_Schet.F_SumSNalog  := bSum + tNDS + tAk + tnSel;

        vrem := Round(BaseDoc.Total * 100) / 100;

        fr_Schet.F_SumPropis    :=  DoubleToString(BaseDoc.cVal, vrem);

        vrem := Round(oDOfuns.DoroundNDE(BaseDoc.VidDoc, BaseDoc.TotalNDE) * 100) / 100;

        fr_Schet.F_SumPropis_Okr:=  DoubleToString(0, vrem);
        if (BaseDoc.TipMoney = 2) and (BaseDoc.DopProc <> 0)
          fr_Schet.F_Procent      := 'Процент к курсу на день оплаты ' + String(BaseDoc.DopProc);
        fr_Schet.F_schet_deist  := 'Счет действителен в течение ' + String(BaseDoc.KolDn) + ' дней';
        fr_Schet.F_TaraVoz := TaraVoz;

      // Для счета-фактуры
        if (tNDs <> 0) and ( BaseDoc.Nds <> 0 )
          fr_Schet.sf_F_SummaNal := tNds;
        if ((BaseDoc.Total - tNSel) <> 0) and  (BaseDoc.Nds <> 0 )
          fr_Schet.sf_F_VsegosNal:= BaseDoc.Total - tNSel;
        fr_Schet.F_SumPropisNDS :=  DoubleToString(BaseDoc.cVal, (Round(tNds * 100) / 100));
        fr_Schet.F_SumPropisVsg :=  DoubleToString(BaseDoc.cVal, (Round(BaseDoc.Total * 100) / 100))
                                    + if(tnSel <> 0, ' (в т.ч. Налог с продаж ' + DoubleToStr(tnSel, '666 666 667,88') + ')', '');

        var ForPrice, ForVPrice, ForSumma, ForVSumma: word;

        oDOfuns.GetRoundValues(BaseDoc.VidDoc, ForPrice, ForVPrice, ForSumma, ForVSumma);

        fr_Schet.brForPrice  := ForPrice;
        fr_Schet.brForSumma  := ForSumma;
        fr_Schet.brForVPrice := if(BaseDoc.cVal = 0, ForPrice, ForVPrice);
        fr_Schet.brForVSumma := if(BaseDoc.cVal = 0, ForSumma, ForVSumma);

        insert current fr_Schet;
      }
      Printed := true;
    }
  while ( cycle_flag = 1 );

  StopVisual('', vfSilent);

  if ( NotPrinted <> '' )
    {
      NotPrinted := SubStr(NotPrinted, 1, Length(NotPrinted) - 2);

      Message(   ''#3'В документах NN '
               + NotPrinted
               + ' нет спецификации.'
               + ''#13#3'Документы не напечатаны.'
             , OkButton + InFormation
             );
    }

  if ( printed ) and (toc = 0)
    {
      FPrDoc.PutEventById(fefalse, fcDelimiter);
      FPrDoc.SkipFormat(1);
      FPrDoc.PutEvent(feBreak);

      if ( FPrDoc.error )
        FPrDoc.abortForm;
      else
        {
          if ( Doview <> 1 )
            FPrDoc.abortForm;
          else
            FPrDoc.ShowFile('');
/*
                Case BaseDoc.VidDoc of
                 101 : FPrDoc.ShowFile('Документ-основание на закупку');
                 201 : FPrDoc.ShowFile('Документ-основание на продажу');
                 102 : FPrDoc.ShowFile('Документ-основание приема консигнационного товара');
                 202 : FPrDoc.ShowFile('Документ-основание отпуска на консигнацию');
                 else FPrDoc.ShowFile('Документ-основание');
                end;
*/
        }
    }

  if ( toc = 1)
  {
    Case BaseDoc.VidDoc of
    101 : RunFReportByGroup(DTS, 'zakupka' );
    201 : RunFReportByGroup(DTS, 'prodazha');
    111,
    211 : RunFReportByGroup(DTS, 'predop');
    102 : RunFReportByGroup(DTS, 'consig_priem' );
    202 : RunFReportByGroup(DTS, 'consig_otpusk');
    1410: RunFReportByGroup(DTS, 'Narjad_les');
    1420: RunFReportByGroup(DTS, 'Schet_les');
    end;

    Delete All Fr_Schet;
    Delete All Fr_Specif;
    Delete All Fr_BaseFin;
  }

  saveMyDsk(0, 'vidReport_vschet');

//---------------------------------------------------------------------
// Не удалять !!! Доработка для ССТ
//---------------------------------------------------------------------
  ContAnDone(CAnHashID);

  SaveMyDsk(FALSE, 'PrnDocs_ZamenMC_SST');
//---------------------------------------------------------------------
}

HandleEvent

cmInit :
{
  s_SimvRub := sGetTune('NDE.SimvRub');
  PrDoc(p_flag);

  Abort;
}

cmOnVipLoad:
{
  s_SimvRub := sGetTune('NDE.SimvRub');
}

end; // HandleEvent

End.
