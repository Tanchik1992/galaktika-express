/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,97 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Накладные на продажу                                      ║
 ║ Версия        : 5.70                                                      ║
 ║ Назначение    : Товарно-транспортная накладная (Штерн-Цемент)             ║
 ║ Ответственный : Глушаков дмитрий Сергеевич                                ║
 ║ Параметры     :                                                           ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
#doc
ТTH (тарная)
#end
.linkform 'sc_ttn' prototype is tovn
.NameInList 'ТTH (тарная)'
.group 'ТТН тара'
!.group 'Накладные на продажу'
.var
  CountAllSum       : double
  countTimePogr,countTimeRazgr,
!  countNormativPogr,countNormativRazgr,
  TimePogr,TimeRazgr,
  NormativPogr,NormativRazgr,
  tekValue          : longint

  strTimePogr,
  strProstoy1,
!  strNormativRazgr,
  strTimeRazgr,
  strProstoy2       : string
.endvar
#include format.frn
! возращает время погрузки/разгрузки в минутах
.procedure GetGruzCountTime( _bd : date ;
                             _bt : time ;
                             _ed : date ;
                             _et : time ;
                             var result_GetGruzCountTime : longint);
begin
  if( (_bd = _ed) or (_bd = date(0,0,0)) or (_ed = date(0,0,0)) )
    {
    if (_et > _bt)
      result_GetGruzCountTime := Longint((60*Hour(Sub_Time(_et,_bt)))+Minute(Sub_Time(_et,_bt)));
!      result_GetGruzCountTime := Longint(Round(To_Sec100(Sub_Time(_et,_bt)) / 6000) ) ;
    else
      result_GetGruzCountTime := Longint(0);
    }
  else
    result_GetGruzCountTime := Longint(Round(_SubDateTime( _DateTime1( _ed , _et ) ,
                                                           _DateTime1( _bd , _bt ) ) / 6000) ) ;
end.
! возращает строку времени в формате 'HHHH:MM'
.procedure GetTimeString(_minute:longint;var result_GetTimeString:string);
begin
  result_GetTimeString := LpadCh(DoubleToStr(trunc(_minute/60),'6666666'),'0',2)
                         +':'
                         +LpadCh(DoubleToStr((_minute-(60*trunc(_minute/60))),'6666666'),'0',2) ;
end.
.fields

  if (ПолучательКод<>'',ПолучательКод+' ','')+Получатель
!.if tovn01
  Основание
!.else
!.end

  if (ГрузоотправительКод       <> '' ,ГрузоотправительКод+' '       ,'')
    + Грузоотправитель
  if (ГрузоотправительКод       <> '' ,ГрузоотправительКод+' '       ,'')
    + Грузоотправитель
  if (ГрузоотправительКод       <> '' ,ГрузоотправительКод+' '       ,'')
    + Грузоотправитель
  if (ГрузоотправительКод       <> '' ,ГрузоотправительКод+' '       ,'')
    + Грузоотправитель
  if (Грузоотправитель_ТЕЛ      <> '' ,'тел. '+Грузоотправитель_ТЕЛ  ,'')

  Номер
  Номер
  DateToStr(Дата,'от DD mon YYYY г.')
  DateToStr(Дата,'от DD mon YYYY г.')

  if (ПолучательКод       <> '' ,ПолучательКод+' '        ,'')
    + Получатель
  Substr(if (ТТН_АвтоОрг_Тип     <> '' ,ТТН_АвтоОрг_Тип+' '      ,'')
           + ТТН_АвтоОрг_Имя,1,31)
  if (ПолучательКод       <> '' ,ПолучательКод+' '        ,'')
    + Получатель

  if (ГрузополучательКод       <> '' ,ГрузополучательКод+' '       ,'')
    + Грузополучатель
  ''+ТТН_Номер_ПЛист+''
  Substr(''+ТТН_Маршрут_Код+'/'+DoubleToStr(if(ТТН_ПунктР_Расст_Маршрут<>0,
                                               ТТН_ПунктР_Расст_Маршрут,
                                              (ТТН_ПунктР_Расст-ТТН_ПунктП_Расст)),'66666666.8'),1,17)
  if (ГрузополучательКод       <> '' ,ГрузополучательКод+' '       ,'')
    + Грузополучатель

  ТТН_ПунктП_Имя+' '+ТТН_ПунктП_СТРАНА_ИМЯ+' '+ТТН_ПунктП_ГОРОД_ИМЯ+' '+ТТН_ПунктП_Адрес
  ТТН_Водитель_Имя
  ТТН_ПунктП_Имя+' '+ТТН_ПунктП_СТРАНА_ИМЯ+' '+ТТН_ПунктП_ГОРОД_ИМЯ+' '+ТТН_ПунктП_Адрес

  ТТН_ПунктР_Имя+' '+ТТН_ПунктР_СТРАНА_ИМЯ+' '+ТТН_ПунктР_ГОРОД_ИМЯ+' '+ТТН_ПунктР_Адрес
  ТТН_Авто_Марка+if(ТТН_Авто_Вес>0,'  '+DoubleToStr(ТТН_Авто_Вес,'666666666.999')+' т','')
  ТТН_ПунктР_Имя+' '+ТТН_ПунктР_СТРАНА_ИМЯ+' '+ТТН_ПунктР_ГОРОД_ИМЯ+' '+ТТН_ПунктР_Адрес

  if (ТТН_Авто_Номер<>'',ТТН_Авто_Номер,' ') + '/' + ТТН_Авто_НомерГараж+''
  ''+ТТН_Прицеп1_Номер+''

  Substr(if (ТТН_АвтоОрг_Тип     <> '' ,ТТН_АвтоОрг_Тип+' '      ,'')
           + ТТН_АвтоОрг_Имя,1,27)
  Substr(ТТН_Водитель_Имя,1,19)

  ''+ТТН_Номер_ПЛист+''
  Substr(''+ТТН_Маршрут_Код+'/'+DoubleToStr(if(ТТН_ПунктР_Расст_Маршрут<>0,
                                               ТТН_ПунктР_Расст_Маршрут,
                                              (ТТН_ПунктР_Расст-ТТН_ПунктП_Расст)),'66666666.8'),1,16)
!  ТТН_Авто_Марка+'  '+DoubleToStr((ТТН_Авто_Вес/1000),'666666666.999')+' т'
  ТТН_Авто_Марка+if(ТТН_Авто_Вес>0,'  '+DoubleToStr((ТТН_Авто_Вес/1000),'666666666.999')+' т','')
  if (ТТН_Авто_Номер<>'',ТТН_Авто_Номер,' ') + '/' + ТТН_Авто_НомерГараж+''
  ''+ТТН_Прицеп1_Номер+''

!.{
  Название
  ОтпЕд
  КолФ
  ЦНац
  СтНац

  ТТН_ПунктП_Время_С
  ТТН_ПунктП_Время_По
!  ТТН_ПунктР_Время_С
!  if (СпТТН_ПунктП_Время_С <>'00:00',СпТТН_ПунктП_Время_С ,'')
!  if (СпТТН_ПунктП_Время_По<>'00:00',СпТТН_ПунктП_Время_По,'')

  Название
  КолФ
  СтНац
!.}
!.{ CHECKENTER TOVNUSL ---------- Вывод услуг в накладной
!  НазваниеУслуги
!  ОтпЕдИзмУслуги
!  КолФУслуги
!  ЦенаУслуги
!  ЦенаУслуги * КолФУслуги
!
!  НазваниеУслуги
!  КолФУслуги
!  ЦенаУслуги * КолФУслуги
!.}
  DoubleToStr(CountAllSum, Cena_PrR)
  НомерДовер
  strTimePogr       // время погрузки
  strProstoy1       // простой
  ТТН_ПунктР_Норматив_Разгр // норматив разгрузки
!  strNormativRazgr  // норматив разгрузки
!  strTimeRazgr      // время разгрузки
!  strProstoy2       // простой
  if (ДатаДовер<>date(0,0,0),DateToStr(ДатаДовер,'от DD mon YYYY г.'),'от')
!.{
!.}
 СпецСимвол
.endfields
.p 48
.defo landscape //                                                                                                            элита!                                                сжатый!                    элита/сж.!
.{
.begin
  CountAllSum        := 0 ;
  countTimePogr      := 0 ;
  countTimeRazgr     := 0 ;
!  countNormativPogr  := 0 ;
!  countNormativRazgr := 0 ;
end.
[5{ Ш                                                                                @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
     ┌─────────────────────────────────────┬────────────────┬──────┬─────────┐                                форма N1т                                                         корешок к форме N1т
     │1экз-Остается у грузоотправителя     │ Номер счета    │      │         │
     │1экз-Грузополучателю                 ├────────────────┼──────┼─────────┤   БГрузоотправитель: Щ
.if tovn01
 Ш     │1экз-С отм.грузопол и АТП-грузоотпр  │ @@@@@@@@@@@@@@@│      │         │  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ┌──────────────────────────────┐ Ш
.else
 Ш     │1экз-С отм.грузопол и АТП-грузоотпр  │                │      │         │  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ┌──────────────────────────────┐ Ш
.end
.if tovn02
.end
 Ш     └─────────────────────────────────────┴────────────────┴──────┴─────────┘  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                    БТалон экспедирования Б                   │ 1экз-Пропуск для охраны      │
                                                                                                                                                  Бгруза к ТТН № @@@@@@@@@@@@@@@@@@@@@@@@ Б │ 1экз-С отм.грузополуч.АТП    │
                    БТОВАРНО-ТРАНСПОРТНАЯ НАКЛАДНАЯ № @@@@@@@@@@@@@@@@@@@@ Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                                    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ │ 1экз-Оборотный для грузоотпр │
                                                                                                                                                                                        └──────────────────────────────┘
       БЗаказчик Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  БАТП Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ┌───────┬─────────────────┐        БЗаказчик Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
       БГрузополучатель Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  Бк путевому листу № Б @@@@@@@@@@@@@@@@ │№.рейса│@@@@@@@@@@@@@@@@@│        БГрузополучатель Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
       БПункт погрузки Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  БВодитель Б @@@@@@@@@@@@@@@@@@@@@@@@@@ └───────┴─────────────────┘        БПункт погрузки Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
       БПункт разгрузки Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  БАвтомобиль Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        БПункт разгрузки Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
       БПереадресовка Б ______________________________________________________  БГос./Гар.N а/м Б @@@@@@@@@@@@@@@@@@@@@   БПрицеп Б @@@@@@@@@@@@@@@@@@        БПереадресовка Б __________________________________________
                                           БТ О В А Р Н Ы Й   Р А З Д Е Л Б                                                                           БАТП Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  БВодитель Б @@@@@@@@@@@@@@@@@@@@
     ┌───────────────────────────────────────┬─────┬───────────┬────────────┬──────────────┬───────────────┬─────────────┬───────────────┐        Бк путевому листу N Б @@@@@@@@@@@@@@@@@@@  БКод рейса Б @@@@@@@@@@@@@@@@@@@@@@
     │           Наименование груза          │ Ед. │           │            │              │   Погрузка    │ Прибыть под │   Разгрузка   │        БАвтомобиль Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
     │                  услуг                │ изм │  Кол-во   │ Цена с НДС │    Сумма     ├───────┬───────┤  разгрузку  ├───────┬───────┤        БГос./Гар.N а/м Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@  БПрицеп Б @@@@@@@@@@@@@@@@@@@
     │                                       │     │           │            │              │  нач  │  кон  │             │  нач  │  кон  │       │       Наименование груза,услуг           │ Количество │     Сумма      │
     ├───────────────────────────────────────┼─────┼───────────┼────────────┼──────────────┼───────┼───────┼─────────────┼───────┼───────┤       ├──────────────────────────────────────────┼────────────┼────────────────┤ Ш
.{
 Ш     │@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@│@@@@@│&&&&&&&&&&&│&&&&&&&&&&&&│&&&&&&&&&&&&&&│ @@@@@ │ @@@@@ │             │       │       │       │@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@│&&&&&&&&&&&&│&&&&&&&&&&&&&&&&│ Ш
.begin
  CountAllSum := CountAllSum + СтНац ;
 // суммируем время погрузки (в минутах/double)
  GetGruzCountTime(СпТТН_ПунктП_Дата_С,
                   StrToTime(СпТТН_ПунктП_Время_С+':0:0','HH:MM:SS:SSS'),
                   СпТТН_ПунктП_Дата_По,
                   StrToTime(СпТТН_ПунктП_Время_По+':0:0','HH:MM:SS:SSS'),
                   tekValue) ;
  countTimePogr := countTimePogr + tekValue ;
 // суммируем время разгрузки (в минутах/double)
  GetGruzCountTime(СпТТН_ПунктР_Дата_С,
                   StrToTime(СпТТН_ПунктР_Время_С+':0:0','HH:MM:SS:SSS'),
                   СпТТН_ПунктР_Дата_По,
                   StrToTime(СпТТН_ПунктР_Время_По+':0:0','HH:MM:SS:SSS'),
                   tekValue) ;
  countTimeRazgr := countTimeRazgr + tekValue ;
!  // суммируем время норматива погрузки (в минутах/double)
!  countNormativPogr := countNormativPogr + Longint(trunc(To_Sec100(StrToTime(СпТТН_НормаПогрузки+':0:0','HH:MM:SS:SSS'))/6000) ) ;
!  // суммируем время норматива разгрузки (в минутах/double)
!  countNormativRazgr := countNormativRazgr + Longint(trunc(To_Sec100(StrToTime(СпТТН_НормаРазгрузки+':0:0','HH:MM:SS:SSS'))/6000) ) ;
end.
.}
.{ CHECKENTER TOVNUSL
.}
.begin
  // время погрузки
  if ( (ТТН_ПунктП_Дата_С  <> ТТН_ПунктП_Дата_По ) or
       (ТТН_ПунктП_Время_С <> ТТН_ПунктП_Время_По) )
    GetGruzCountTime(ТТН_ПунктП_Дата_С,
                     StrToTime(ТТН_ПунктП_Время_С+':0:0','HH:MM:SS:SSS'),
                     ТТН_ПунктП_Дата_По,
                     StrToTime(ТТН_ПунктП_Время_По+':0:0','HH:MM:SS:SSS'),
                     TimePogr) ;
  else
    TimePogr := countTimePogr ;
  // время разгрузки
  if ( (ТТН_ПунктР_Дата_С  <> ТТН_ПунктР_Дата_По ) or
       (ТТН_ПунктР_Время_С <> ТТН_ПунктР_Время_По) )
    GetGruzCountTime(ТТН_ПунктР_Дата_С,
                     StrToTime(ТТН_ПунктР_Время_С+':0:0','HH:MM:SS:SSS'),
                     ТТН_ПунктР_Дата_По,
                     StrToTime(ТТН_ПунктР_Время_По+':0:0','HH:MM:SS:SSS'),
                     TimeRazgr) ;
  else
    TimeRazgr := countTimeRazgr ;
!------------- в отчет --------------
  // время погрузки
  GetTimeString(TimePogr,strTimePogr) ;

  // простой
  NormativPogr := Longint(trunc(To_Sec100(StrToTime(ТТН_ПунктП_Норматив_Погр+':0:0','HH:MM:SS:SSS'))/6000) );
  if( (TimePogr-NormativPogr) > 0)
    GetTimeString((TimePogr-NormativPogr),strProstoy1) ;
  else
    strProstoy1 := '00:00' ;

!  // норматив разгрузки
!  GetTimeString(countNormativRazgr,strNormativRazgr)

  // время разгрузки
  GetTimeString(TimeRazgr,strTimeRazgr) ;

  // простой
  NormativRazgr := Longint(trunc(To_Sec100(StrToTime(ТТН_ПунктР_Норматив_Разгр+':0:0','HH:MM:SS:SSS'))/6000) );
  if( (TimeRazgr-NormativRazgr) > 0)
    GetTimeString((TimeRazgr-NormativRazgr),strProstoy2) ;
  else
    strProstoy2 := '00:00' ;
end.
 Ш     └───────────────────────────────────────┴─────┴───────────┴────────────┼──────────────┼───────┴───────┴─────────────┴───────┴───────┘       └──────────────────────────────────────────┴────────────┴────────────────┘
                                                                  БИтого: Б     │&&&&&&&&&&&&&&│                                                      БПодпись водителя Б __________________________                      БОтметки Б
                                                                            └──────────────┘                                                     ┌───────────┬─────────┬───────────┬───────────┬──────────┐ Бгрузоотправителя Б
                                          БУказанный груз за исправной тарой и упаковкой Б                                                           │Вр.погрузки│ Простой │Норм.разгр.│ Вр.разгр. │  Простой │
                  БДиспетчер Б              │  БВодитель-экспедитор Б              │                БГрузополучатель Б                                       ├───────────┼─────────┼───────────┼───────────┼──────────┤
       БСдал Б ____________________________ Б  Б│  БПринял Б _________________________ │      БПо доверенности Б @@@@@@@@@@@@@@@@@@@@@@@@@@@                     │   @@@@@@@ │ @@@@@@@ │  @@@@@@@  │           │          │
                  Бштамп диспетчера Б       │  БСдал Б   _________________________ │       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                     └───────────┴─────────┴───────────┴───────────┴──────────┘
      Б - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Б│                            │ Поддоны  │ Мешки  │                     БОсобые отметки Б           │  БГрузополучатель Б        │ Поддоны  │ Мешки  │
                                   БОсобые отметки Б                           │                            ├──────────┼────────┤                                             │                        ├──────────┼────────┤
                                                                           │  БПринял Б ___________________ │          │        │                    ________________________ │  БПринял Б _______________ │          │        │
       Поддоны подлежат возврату в месячный срок                           │                            └──────────┴────────┘                                             │                        └──────────┴────────┘
                                                                           │    БВозвратная ведомость Б                                              ________________________ │     БВозвратная ведомость Б
     ───────────────────────────────────────────────────────────────────── │                            ┌──────────┬────────┐                                             │                        ┌──────────┬────────┐
                                                                           │  БВернул Б ________________ Бм.п Б │          │        │                    ________________________ │  БВернул Б ____________ Бм.п Б │          │        │
     ───────────────────────────────────────────────────────────────────── │  БВодитель-экспедитор Б        ├──────────┼────────┤                                             │  БВодитель-экспедитор Б    ├──────────┼────────┤
                                                                           │  БПринял Б ___________________ │          │        │                    ________________________ │  БПринял Б _______________ │          │        │
     ───────────────────────────────────────────────────────────────────── │  БСдал Б _____________________ ├──────────┼────────┤                           БПереадресовка Б      │  БСдал Б _________________ ├──────────┼────────┤
                                БПереадресовка Б                               │  БКладовщик Б                  │          │        │                                             │  БКладовщик Б              │          │        │
                                                                           │  БПринял Б ___________________ │          │        │                                             │  БПринял Б _______________ │          │        │
                                                                                            Бм.п. Б         └──────────┴────────┘                                                             Бм.п. Б      └──────────┴────────┘ Ш
.{
.}
#ifdef __SKYSHOP__
#include sky.inc
#end
   ^
.}
.endform
