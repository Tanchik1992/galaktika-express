!
!  (c) 1987 ™Æ‡ØÆ‡†Ê®Ô ÉÄãÄäíàäÄ
!
!  è‡Æ•™‚        : ÉÄãÄäíàäÄ
!  ë®·‚•¨†       : éØ•‡†‚®¢≠Î© ™Æ≠‚„‡
!  Ç•‡·®Ô        : 5.20
!
!  ç†ß≠†Á•≠®•    : Ä™‚ Ø•‡•ÆÊ•≠™® (§ÆÆÊ•≠™®)
!
!  é‚¢•‚·‚¢•≠≠Î© : Ä´•™·†≠§‡ Ç†´•‡Ï•¢®Á ä‡†ÂÆ‚™Æ
!
!  è†‡†¨•‚‡Î     : çÖí
!
!--------------------------------------------------------------------
!  àß¨•≠•≠®Ô :
!       Ä¢‚Æ‡:                                         Ñ†‚†:
!       ñ•´Ï :
!
!--------------------------------------------------------------------
#include predefs.inc

#doc
Ääí èé èÖêÖéñÖçäÖ åñ
#end
.linkform 'skorder_01_k' prototype is 'skorder'
.NameInList 'Ääí èé èÖêÖéñÖçäÖ åñ'
.Group 'ë™´†§·™Æ© Æ‡§•‡'
.ORIENT LANDSCAPE
.create view SklDoocen
  var
    cur_rec : comp;
  as select
    SpOrder.*
  from
    SpOrder(ReadOnly)
  where ((
           cur_rec == SpOrder.nRec
        ))
;
.function if01(_d:double):double;
begin
  if01 := if ( abs(_d) < GetPresision_forKol, 1, _d) ;
end.
.var
  doo_kol           : double
  doo_price_up      : double
  doo_price_after   : double
  doo_sum_up        : double
  doo_sum_after     : double
  doo_ssm_up        : double
  doo_ssm_after     : double
.endvar
.fields
  CommonFormHeader
.endfields
^
.fields
  dOrder:'m:DD mon YYYY £.'

  Sklad
  Mol

  '('+RublSimv+')' '('+RublSimv+')'

  MC NNomer ED

  Party

  doo_kol

  doo_price_up     doo_sum_up

  doo_price_after  doo_sum_after

  doo_ssm_up
  doo_ssm_after

  doo_ssm_after - doo_ssm_up

.endfields
.begin
  doo_kol           := 0 ;
  doo_price_up      := 0 ;
  doo_price_after   := 0 ;
  doo_sum_up        := 0 ;
  doo_sum_after     := 0 ;
  doo_ssm_up        := 0 ;
  doo_ssm_after     := 0 ;
 end.
.{
                  Ääí èé èÖêÖéñÖçäÖ åñ
                   ¸ ___________ Æ‚ ^

.begin
 end.
.if sklorder01
.if sklorder02
.end
.end

ˇò ë™´†§ ^
 åÆ´   ^

ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
                                  ≥              ≥         ≥                                  ≥            ≥ ÑÆ Ø•‡•ÆÊ•≠™® @@@@@@@@@             ≥ èÆ·´• Ø•‡•ÆÊ•≠™® @@@@@@@@
 ç†®¨•≠Æ¢†≠®• åñ                  ≥ äÆ§          ≥  Ö§àß¨  ≥ è†‡‚®Ô                           ≥ äÆ´®Á•·‚¢Æ √ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
                                  ≥              ≥         ≥                                  ≥            ≥ ñ•≠†           ≥ ë„¨¨†              ≥ ñ•≠†           ≥ ë„¨¨†
ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
.{
.{
.begin
   set SklDoocen.cur_rec := SpOrderRec ;
   if (SklDoocen.GetFirst SpOrder <> 0)
     {
     doo_kol         := 0 ;
     doo_price_up    := 0 ;
     doo_price_after := 0 ;
     doo_sum_up      := 0 ;
     doo_sum_after   := 0 ;
     doo_ssm_up      := 0 ;
     doo_ssm_after   := 0 ;
     }
   else
     {
     InitMCInfo(sub_day(dOrder,1)) ;
     #ifdef GAL5_80
     SkladProizv(SklDoocen.SpOrder.SP);
     #end
     doo_kol   := NalT ( sub_day(SklDoocen.SpOrder.dOrd,1),
                         SklDoocen.SpOrder.cMC,
                         if (SklDoocen.SpOrder.ccPodr=0,comp(-1),SklDoocen.SpOrder.ccPodr),
                         if (SklDoocen.SpOrder.ccMol =0,comp(-1),SklDoocen.SpOrder.ccMol ),
                         if (SklDoocen.SpOrder.cParty=0,comp(-1),SklDoocen.SpOrder.cParty)
                       ) ;
     ReInitMcInfo ( sub_day(SklDoocen.SpOrder.dOrd, 1) ) ;
     StepMCInfo ( SklDoocen.SpOrder.cMC, comp(0),
                  if (SklDoocen.SpOrder.ccPodr=0,comp(-1),SklDoocen.SpOrder.ccPodr),
                  if (SklDoocen.SpOrder.ccMol =0,comp(-1),SklDoocen.SpOrder.ccMol ),
                  if (SklDoocen.SpOrder.cParty=0,comp(-1),SklDoocen.SpOrder.cParty)
                ) ;
     doo_price_up    := AveragePrice ;
     doo_sum_up      := doo_price_up * if01(doo_kol) ;
     doo_sum_after   := doo_sum_up + SpOrder.srPrice ;
     doo_price_after := doo_sum_after / if01(doo_kol) ;

     doo_ssm_up    := doo_ssm_up    + doo_sum_up    ;
     doo_ssm_after := doo_ssm_after + doo_sum_after ;
     DoneMCInfo ;
     }
 end.
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@ @@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ &'&&&&&&.&&& &#'&&&&&&&&&&.&& &#'&&&&&&&&&&&&&&.&& &#'&&&&&&&&&&.&& &#'&&&&&&&&&&&&&&.&&
.}



.}
.}

   à‚Æ£Æ ØÆ †™‚„                                                                                                           &#'&&&&&&&&&&&&&&&&.&&                &#'&&&&&&&&&&&&&&&&.&&

   ê†ß≠Æ·‚Ï ØÆ Ø•‡•ÆÊ•≠™• ·Æ·‚†¢´Ô•‚ &'&&&&&&&#&&&&&&&.&&
                                                                                     è‡•§·•§†‚•´Ï ™Æ¨®··®®

ˇò
.begin
 end.
.endform

!--------------------------------------------------------------------
#doc
Ääí èé èÖêÖéñÖçäÖ åñ (êìÅ.-ÇÄã.)
#end
.linkform 'skorder_02_k' prototype is 'skorder'
.NameInList 'Ääí èé èÖêÖéñÖçäÖ åñ (êìÅ.-ÇÄã.)'
.ORIENT LANDSCAPE
.Group 'ë™´†§·™Æ© Æ‡§•‡'
.create view SklDoocen
  var
    cur_rec : comp;
  as select
    SpOrder.*
  from
    SpOrder(ReadOnly)
  where ((
           cur_rec == SpOrder.nRec
        ))
;
.function if01(_d:double):double;
begin
  if01 := if ( abs(_d) < GetPresision_forKol, 1, _d) ;
end.
.var
  doo_kol       : double

  doo_priceR_1   : double
  doo_priceR_2   : double
  doo_sumR_1     : double
  doo_sumR_2     : double
  doo_ssmR_1     : double
  doo_ssmR_2     : double

  doo_price_1   : double
  doo_price_2   : double
  doo_sum_1     : double
  doo_sum_2     : double
  doo_ssm_1     : double
  doo_ssm_2     : double

  val           : string
  rub           : string
  bVal          : string
.endvar
.fields
  CommonFormHeader
.endfields
^
.fields
  dOrder:'m:DD mon YYYY £.'

  Sklad
  Mol


  MC NNomer ED

  Party

  doo_kol

  doo_priceR_1  rub  doo_sumR_1  rub  doo_priceR_2  rub  doo_sumR_2  rub
  doo_price_1   val  doo_sum_1   val  doo_price_2   val  doo_sum_2   val

  doo_ssmR_1   rub    doo_ssmR_2   rub
  doo_ssm_1    bVal   doo_ssm_2    bVal

  doo_ssmR_2 - doo_ssmR_1   rub
  doo_ssm_2  - doo_ssm_1    bVal

.endfields
.begin
  doo_kol       := 0 ;
  doo_priceR_1   := 0 ;
  doo_priceR_2   := 0 ;
  doo_sumR_1     := 0 ;
  doo_sumR_2     := 0 ;
  doo_ssmR_1     := 0 ;
  doo_ssmR_2     := 0 ;

  doo_price_1   := 0 ;
  doo_price_2   := 0 ;
  doo_sum_1     := 0 ;
  doo_sum_2     := 0 ;
  doo_ssm_1     := 0 ;
  doo_ssm_2     := 0 ;

 end.
.{
                  Ääí èé èÖêÖéñÖçäÖ åñ
                   ¸ ___________ Æ‚ ^

.begin
   InitGetCur ;
#ifndef GAL5_80
   if GetFirst SystDate =0
     rub:= SystDate.simvRub;
#else
     rub := sGetTune('NDE.SimvRub');
#end
 end.
.if sklorder01
.if sklorder02
.end
.end

ˇò ë™´†§ ^
 åéã   ^

ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
                                  ≥              ≥         ≥                                  ≥            ≥                ÑÆ Ø•‡•ÆÊ•≠™®                  ≥              èÆ·´• Ø•‡•ÆÊ•≠™®
 ç†®¨•≠Æ¢†≠®• åñ                  ≥ äÆ§          ≥  Ö§àß¨  ≥ è†‡‚®Ô                           ≥ äÆ´®Á•·‚¢Æ √ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
                                  ≥              ≥         ≥                                  ≥            ≥ ñ•≠†                ≥ ë„¨¨†                   ≥ ñ•≠†                ≥ ë„¨¨†
ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
.{
.{
.begin
   set SklDoocen.cur_rec := SpOrderRec ;
   if (SklDoocen.GetFirst SpOrder <> 0)
     {
     doo_kol     := 0 ;

     doo_priceR_1 := 0 ;
     doo_priceR_2 := 0 ;
     doo_sumR_1   := 0 ;
     doo_sumR_2   := 0 ;
     doo_ssmR_1   := 0 ;
     doo_ssmR_2   := 0 ;

     doo_price_1 := 0 ;
     doo_price_2 := 0 ;
     doo_sum_1   := 0 ;
     doo_sum_2   := 0 ;
     doo_ssm_1   := 0 ;
     doo_ssm_2   := 0 ;
     }
   else
     {
     if SpOrder.cVal<>0
      if GetFirst KlVal where ((SpOrder.cVal == KlVal.nRec)) =0
        Val:= KlVal.simvolV
      else Val:='?'
     else Val:=Rub;
     InitMCInfo(sub_day(dOrder,1)) ;
     #ifdef GAL5_80
     SkladProizv(SklDoocen.SpOrder.SP);
     #end
     doo_kol   := NalT ( sub_day(SklDoocen.SpOrder.dOrd,1),
                         SklDoocen.SpOrder.cMC,
                         if (SklDoocen.SpOrder.ccPodr=0,comp(-1),SklDoocen.SpOrder.ccPodr),
                         if (SklDoocen.SpOrder.ccMol =0,comp(-1),SklDoocen.SpOrder.ccMol ),
                         if (SklDoocen.SpOrder.cParty=0,comp(-1),SklDoocen.SpOrder.cParty)
                       ) ;
     ReInitMcInfo ( sub_day(SklDoocen.SpOrder.dOrd, 1) ) ;
     StepMCInfo ( SklDoocen.SpOrder.cMC, SklDoocen.SpOrder.cVal,
                  if (SklDoocen.SpOrder.ccPodr=0,comp(-1),SklDoocen.SpOrder.ccPodr),
                  if (SklDoocen.SpOrder.ccMol =0,comp(-1),SklDoocen.SpOrder.ccMol ),
                  if (SklDoocen.SpOrder.cParty=0,comp(-1),SklDoocen.SpOrder.cParty)
                ) ;

     doo_priceR_1   := AveragePrice ;
     doo_sumR_1     := doo_priceR_1 * if01(doo_kol);
     doo_sumR_2   := doo_sumR_1 + SklDoocen.SpOrder.srPrice ;
     doo_priceR_2 := doo_sumR_2 / if01(doo_kol) ;

     doo_ssmR_1 := doo_ssmR_1 + doo_sumR_1 ;
     doo_ssmR_2 := doo_ssmR_2 + doo_sumR_2 ;

     // ¢ ¢†´Ó‚•
     doo_price_1    := AverageVPrice ;
     doo_sum_1      := doo_price_1 * if01(doo_kol);
     doo_sum_2   := doo_sum_1 + SklDoocen.SpOrder.VPrice ;
     doo_price_2 := doo_sum_2 / if01(doo_kol) ;

     doo_ssm_1 := doo_ssm_1 + PGetBaseCurrency(SklDoocen.SpOrder.cVal, doo_sum_1, sub_day(SklDoocen.SpOrder.dOrd,1) ) ;
     doo_ssm_2 := doo_ssm_2 + PGetBaseCurrency(SklDoocen.SpOrder.cVal, doo_sum_2, SklDoocen.SpOrder.dOrd) ;
     DoneMCInfo ;
     }
 end.
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@ @@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ &'&&&&&&.&&& &#'&&&&&&&&&&.&& @@@@ &#'&&&&&&&&&&&&&&.&& @@@@ &#'&&&&&&&&&&.&& @@@@ &#'&&&&&&&&&&&&&&.&& @@@@
                                                                                                            &#'&&&&&&&&&&.&& @@@@ &#'&&&&&&&&&&&&&&.&& @@@@ &#'&&&&&&&&&&.&& @@@@ &#'&&&&&&&&&&&&&&.&& @@@@

.}



.}
.}

.begin
 bVal:= PGetSimvBaseCurrency;
end.
ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
   à‚Æ£Æ ØÆ †™‚„                                                                                                                &#'&&&&&&&&&&&&&&&&.&& @@@@                     &#'&&&&&&&&&&&&&&&&.&& @@@@
                                                                                                                                &#'&&&&&&&&&&&&&&&&.&& @@@@                     &#'&&&&&&&&&&&&&&&&.&& @@@@

   ê†ß≠Æ·‚Ï ØÆ Ø•‡•ÆÊ•≠™• ·Æ·‚†¢´Ô•‚ &'&&&&&&&#&&&&&&&.&& @@@@
                                     &'&&&&&&&#&&&&&&&.&& @@@@                                                                  è‡•§·•§†‚•´Ï ™Æ¨®··®® _____________________________________________________

ˇò
.begin
  DoneGetCur ;
 end.
.endform
