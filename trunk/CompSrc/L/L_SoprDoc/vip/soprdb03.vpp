//******************************************************************************
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Логистика
// HandleEvent из soprdocb.vip
//******************************************************************************

#include SOPRC13.VPP


cmsetdefault:
{
 If CurTable=#SpSopr or CurTable=#SpSopUsl or CurTable=#SoprOrdB
  if not OtkatToOldState(false,word(0))
   {//ReReadrecord(CurTable);
    stop;exit;
   }
 If not DocBuyAddMcUsl
  If KatSopr.wADoc = adSoprDocKN
  {
 //  rereadrecord(CurTable);
   stop; exit;
  }

 ClearBuffer(#SpSopUsl);
 SpSopUsl.VidSopr := KatSopr.VidSopr; SpSopUsl.cSopr := KatSopr.NRec;
 SpSopUsl.dSopr := KatSopr.dSopr;     SpSopUsl.dOprTTN := KatSopr.dOpr;
 SpSopUsl.cVal := KatSopr.cValut;     
 SpSopUsl.PrMC := wGetTune('Oper.Buy.Nakl.Auto.TipSopUsl');
 SpSopUsl.nRec := GetNextNRec(#SpSopUsl, 0);

 SetEditOption;
 SelectField(#KatUsl.Name);

#ifndef ATL51
 if boGetTune('Pick.AutoPickinInterface')
    putcommand(cmPick);
#end

#ifdef __MTR_TO_SPEC__
  oLinkMTR2Spec.SetValU(word(coSpSopr), SpSopUsl.nRec, coGetTune('CelUchForModul.BUY'), false);
#end
}

cmSetCurField :
{
  if not OtkatToOldState(false,word(0))
   {//ReReadrecord(CurTable);stop;
    exit;
   }
if boGetTune('Pick.AutoPickinInterface')
 if ((CurField = #KatUsl.Name) or (CurField = #KatUsl.Kod))
  if (SpSopUsl.cMCUsl = 0)
    putcommand(cmPick);
}

cmPick :
Case CurField of
 #prSopUsl,#prsopuslFullName : {
  case RunMenu('PrihUsl') of
    cmCancel  : Exit;
    cmAllVo   : set SpSopUsl.PrMC := 3;
    cmAllVos  : set SpSopUsl.PrMC := 4;
    cmAllVosM : set SpSopUsl.PrMC := 5;
    cmAllVosV : set SpSopUsl.PrMC := 6;
    cmValue1  : set SpSopUsl.PrMC := 7;
  end;
  SetEditOption;
 }
#ifndef __MTR_TO_SPEC__
   #KatStroy1.Name:RunInterface(KatStroy, 0, true, SpSopUsl.cUKS, false, false, false);
   #AddSumTune1.Name:
   {
     var ztr : comp;
     ztr := AddSumTune1.nRec;
     if UpDateTable {};
     if (RunInterface(GetZatr,ztr) = cmDefault)
     {
       if (IsValid(#SpecZatr1))
         update current SpecZatr1 Set SpecZatr1.cAddSumTune := ztr
       else
       {
         ClearBuffer(#SpecZatr1);
         SpecZatr1.coTable := coSpSopr;
         SpecZatr1.cAddSumTune := ztr;
         SpecZatr1.cUKS := SpSopUsl.cUKS;
         insert current SpecZatr1;
       }
       ReReadRecord(#SpSOpUsl);
     }
   }
#else
    #SaldTuneSop.Name
  , #vsKau1S
  , #vsKau2S
  , #vsKau3S
  , #vsKau4S
  , #vsKau5S
  , #vsKau6S
  , #vsKau7S
  , #vsKau8S
  , #vsKau9S
  , #vsKau10S :
      {
        PutCommand(cmIerarchy);
      }
#end
  #KlVal.SimvolV :  If curtable=#SpSopUsl  PickKlVal;
end;

cmPositionChanged :
{
 SetEditOption;

#ifdef __MTR_TO_SPEC__
#ifdef _LINKMTR2SPEC_
  if ( CurTable = #SpSopUsl )
    oLinkMtr2Spec2.SetObjParam(word(coSpSopr), SpSopUsl.nRec, if(not OtkatToOldState(false, word(0)), 1, 0));
#end
#end
}

cmPick :
  if (CurField = #KatUsl.Name) or (CurField = #KatUsl.Kod)
    {
      var PrNom : comp;
      Delete Pick where ((word(12) == Pick.wlist));
      PrNom := SpSopUsl.PrMC;
      if (RunInterface(GetSomeUsl,SpSopUsl.cMCUsl) = cmCancel)
        Exit;

      if (GetFirst Pick where ((word(12) == Pick.wList)) ordered by index Pick02 = tsOk)
        {
          if (Not isNew)
            oSDfuns.SpSopr_Delete (SpSopUsl.nRec);
#ifdef __MTR_TO_SPEC__
          else
            oLinkMTR2Spec.DelVal(word(coSpSopr), SpSopUsl.nRec);
#end

          _LOOP Pick where ((word(12) == Pick.wList)) ordered by index pick02
          {
             ClearBuffer(#SpSopUsl);
             SpSopUsl.PrMC := PrNom;
             SpSopUsl.cSopr := KatSopr.NRec;
             if (PrNom = 2)
               {
                 SpSopUsl.Kol := Pick.PickKol;
                 SpSopUsl.KolFact := Pick.PickKol;
                 SpSopUsl.kolOpl := Pick.PickKol;
               }
             SpSopUsl.VidSopr := katSopr.VidSopr;
             SpSopUsl.dSopr := KatSopr.dSopr;
             SpSopUsl.dOprTTN := KatSopr.dOpr;
             SpSopUsl.cVal := KatSopr.cValut;
             SpSopUsl.cMCUsl := Pick.cRec;
             SpSopUsl.Npp := oSpNext.GetSpNppNext(KatSopr.NRec,coSpSopr);
             Insert current SpSopUsl;

#ifdef __MTR_TO_SPEC__
             oLinkMTR2Spec.SetValU(word(coSpSopr), SpSopUsl.nRec, coGetTune('CelUchForModul.BUY'), false);
             oLinkMTR2Spec.SelFormat(true);
#end

             rereadrecord(#SpSopUsl);//без этого сообщение о дублировании NREC при вcтавке расч.услуги
          //-- РАСЧЕТНАЯ УСЛУГА
              if (KatUsl.TYPEUSL = 1) and (SpSopUsl.PrMC <> 1)
                {
                  if (KatSopr.cVal = 0)
                    RunInterface('GETPAR2',1,SpSopUsl.Nrec,KatUsl.Nrec,
                                        SpSopUsl.Price,SpSopUsl.Kol,word(coSpSopr))
                  else
                    RunInterface('GETPAR2',1,SpSopUsl.Nrec,KatUsl.Nrec,
                                        SpSopUsl.VPrice,SpSopUsl.Kol,word(coSpSopr))
                  if update current spsopusl<>tsOK
                    {};
                 }
          //--
          }

          CheckSumma(true);//персчет всего документа

          if (SpSopUsl.PrMc = 3)
            SelectField(#SpSopUsl.Kol)
          else
            if (KatSopr.cVal <> 0)
              SelectField(#SpSopUsl.VPrice)
            else
              SelectField(#spSopUsl.Price);
          SetEditOption;
        }
      rereadrecord(#SpSopUsl);
    }

cmCheckField :
{
  if (SpSopUsl.cMcUsl = 0)
  {
    Message('Не указана Услуга.');
    ReReadRecord(#SpSopUsl);
    Exit;
  }

  CheckSumma(FALSE);

  case CurField of
    #OldKolUsl, #OldPriceUsl, #SpSopUsl.Kol, #SpSopUsl.Price, #SpSopUsl.VPrice:
    {
      procDocAutoCalcUsl;
    }
  end;
}


cmInsertRecord :
{
  SpSopUsl.Npp := oSpNext.GetSpNppNext(KatSopr.NRec,coSpSopr);
  Insert current SpSopUsl;
}
cmUpdateRecord : Update current SpSopUsl;
cmDeleteRecord :
{
 if (SpSopUsl.wADocSp = adSoprDocKN) {
  Message('Данная накладная является корректирующей накладной. Поэтому невозможно удалять услуги, присутствующие в исходной приходной накладной.'#13+'Вы можете просто указать для них нулевое значение процента.');
  Abort;
 } else {

    if (spsopusl.cMcUsl=0 and spsopusl.nRec=0)  //пир 102.44938
     {
      rereadrecord(#SpSopUsl);
      exit;
     }

    if (Message(''#3'Удалить сопутствующую услугу ?',YesNo) = cmYes) {
      SetSchFactFlag;
      Delete NoVisual SpDocNalSopUsl
                            where ((SpSopUsl.NRec == SpDocNalSopUsl.cSpDoc and
                                    TypeSopr == SpDocNalSopUsl.Tipdoc));
      //поиск следующей записи
      var pNextRec: comp;
      PushPos(#SpSopUsl);
      if (GetNext SpSopUsl <> tsOk)
        if (GetPrev SpSopUsl = tsOk) {}
      pNextRec := SpSopUsl.NRec;
      PopPos(#SpSopUsl);
      //удаление записи
      oSDfuns.SpSopr_Delete (SpSopUsl.nRec);
      //установка позиции на сл. запись
      if pNextRec <> SpSopUsl.NRec
        if GetLast SpSopUsl where ((pNextRec == SpSopUsl.NRec)) <> tsOK {}
      //перечитать запись перед пересчетом
      ReReadRecord(#SpSopUsl);
      CheckSumma(false);
      SetEditOption;
      procDocAutoCalcUsl;
  } // if
 }
}

cmDelOnProtect:
{
  case CurField of
   #KatStroy1.Name:set SpSopUsl.cUKS:=0;
   #AddSumTune1.Name:
    {
      if UpDateTable {};
      if (delete current SpecZatr1 = tsOk)
        ReReadRecord(#SpSOpUsl);
    }
    #SaldTuneSop.Name
  , #vsKau1S
  , #vsKau2S
  , #vsKau3S
  , #vsKau4S
  , #vsKau5S
  , #vsKau6S
  , #vsKau7S
  , #vsKau8S
  , #vsKau9S
  , #vsKau10S :
      {
        PutCommand(cmIerarchy);
        RereadRecord;
      }
  end;
}
