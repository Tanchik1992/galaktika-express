//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 7.12 - _
// _
//********************************************************************************


Procedure MakeNewMTabReestrforKN3;
{
 delete all MTabReestrforKN3;

 If GetFirst KatSopr where ((c1 == KatSopr.nRec)) = tsOk{};

   StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm,
    'Формирую еще одну временную таблицу.', 1);
 _LOOP SpSopr
  _LOOP SpSopr4
  {
    If (SpSopr4.PrMC = 1) AND (SpSopr.cMcUsl = SpSopr4.cMcUsl)
    {
     ClearBuffer(#MTabReestrforKN3);
       MTabReestrforKN3.KatSopr3nRec   := KatSopr4.nRec;
       MTabReestrforKN3.KatSopr3VidSopr:= KatSopr4.VidSopr;
       MTabReestrforKN3.SpSopr3nRec    := SpSopr4.nRec;
       MTabReestrforKN3.KatSopr3nSopr  := KatSopr4.nSopr;
       MTabReestrforKN3.KatSopr3dSopr  := KatSopr4.dSopr;
       MTabReestrforKN3.KatSopr3dOpr   := KatSopr4.dOpr;
// == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
//   SpSopr.NRec                    == SoprOrdB4.cSpSopr AND
//   SoprOrdB4.cPodr                == KatPodr4.NRec     AND
//   SoprOrdB4.cMol                 == KatMol4.NRec      AND
       MTabReestrforKN3.KatPodrName    := KatPodr4.Name;
       MTabReestrforKN3.KatMolName     := KatMol4.Name;
       MTabReestrforKN3.cKatPodr       := KatPodr4.nRec;
       MTabReestrforKN3.cKatMol        := KatMol4.nRec;
//   SpSopr4.cSopr                  == KatSopr4.nRec     AND
//   KatSopr4.cPodrFrom             == PodrFrom4.NRec    AND
//   KatSopr4.cMolFrom              == MolFrom4.NRec     AND
       MTabReestrforKN3.PodrFrom       := PodrFrom4.Name;
       MTabReestrforKN3.MolFrom        := MolFrom4.Name;
       MTabReestrforKN3.cPodrFrom      := KatSopr4.cPodrFrom;
       MTabReestrforKN3.cMolFrom       := KatSopr4.cMolFrom;
// == == == == == == == == == == == == == == == == == == == == == == == == == == == == == == ==
       MTabReestrforKN3.KatMCName      := KatMc4.Name;
       MTabReestrforKN3.KatPartyName   := Katparty4.Name;
       MTabReestrforKN3.KatSopr3cVal   := KatSopr4.cVal;
       MTabReestrforKN3.NewPrice       := SpSopr.rprice;
       MTabReestrforKN3.oldPrice       := SpSopr4.rprice;
       MTabReestrforKN3.KolOpl         := SpSopr4.KolOpl;
     If insert current MTabReestrforKN3<>tsOK{};
     if not NextVisual Break;
   }//If (SpSopr4.PrMC = 1) AND (SpSopr.cMcUsl = SpSopr4.cMcUsl)
  }//_LOOP SpSopr4
    StopVisual('', 0);
}//Procedure


Procedure SetFltBNSopr3;
{
 var str: string[20];
 str := MTabReestrforKN3.KatSopr3nSopr;

 if (RunDialog(DlgSetFltBNSopr, str) <> cmCancel)
    {
     BNSopr4 := str;
     PushBounds(tbnSoprBound4);
    }
  else
      if (Message('Снять установленный фильтр?', YesNo) = cmYes)
        {
          PopBounds(tbnSoprBound4);
        };

  RereadRecord;
}

Procedure SetSoprFlt3;
var aBegDate, aEndDate: Date;
    WhatDate: word;
{
  ReadMyDsk(aBEGdate, 'aBEGdate_MakePos201fromKN', FALSE);
  ReadMyDsk(aENDdate, 'aENDdate_MakePos201fromKN', FALSE);

!  if (RunDialog(GetInterval, abegdate, aenddate) <> cmCancel)
 if (RunDialog(GetInterval1, WhatDate, abegdate, aenddate) <> cmCancel)
    {
      if (abegdate > aenddate)
        {
          Message('Начальная дата фильтра больше конечной. Фильтр не изменен...', Information);
          Exit;
        }
      begdate := abegdate;
      enddate := aenddate;
      if WhatDate = 0
         PushBounds(tbdMainBound4);
      else
         PushBounds(tbdMainBound24);
    }
  else
      if (Message('Снять установленный фильтр?', YesNo) = cmYes)
        {
         if WhatDate = 0
            PopBounds(tbdMainBound4);
         else
            PopBounds(tbdMainBound24);
        };

  SaveMyDsk(aBEGdate, 'aBEGdate_MakePos201fromKN');
  SaveMyDsk(aENDdate, 'aENDdate_MakePos201fromKN');
  RereadRecord;
}


Procedure KatSopr204Default(TW: word);
{
!  ClearBuffer(#KatSopr);
  KatSopr.nRec := 0;
  KatSopr.VidSopr := 204;
  KatSopr.wADoc   := if (TW = 0, adSoprDocSNSell, adSoprDocKNSell);
  KatSopr.cADoc   := MTabReestrforKN3.KatSopr3nRec;
//  KatSopr.NSopr    := if(TW = 0, KatSopr.NSopr+'(-КН)', KatSopr.NSopr+'(КН)');
  KatSopr.NSopr    := if(TW = 0, KatSopr.NSopr+'(-КН)', KatSopr.NSopr+'(КН'+if(NN_KN>1, string(NN_KN), '')+')');

  if (TW<>0 AND p1 = 1)//Склад-МОЛ из приходной накладной(КН)
  {
    KatSopr.cPodrFrom := MTabReestrforKN3.cKatPodr;
    KatSopr.cMolFrom  := MTabReestrforKN3.cKatMOL;
  }

  KatSopr.cStepDoc := 0;
  KatSopr.reserved := 0;
  if not BoGetTune('Oper.CopyTXO')
    KatSopr.cHozOper := 0; //101.13575, 101.17360

  case wGetTune('Doc.Sell.Nakl.FacturDate') of
    0: { // дата приходной накладной
      PushPos(#KatSopr2);

      if GetFirst KatSopr2 where((c1 == KatSopr2.nRec)) = tsOk
        KatSopr.dSopr := KatSopr2.dSopr;
      PopPos(#KatSopr2);
    }

    1: { // дата акта на списание
      KatSopr.dSopr := MTabReestrforKN3.KatSopr3dSopr;
    }

    2: { // текущая дата
      KatSopr.dSopr := Cur_Date;
    }
  end;

  KatSopr.dOpr     := 0;
  KatSopr.cKatSopr := 0;
  KatSopr.YearSopr := Year(Cur_Date);
  KatSopr.cSchFact := 0;

  if (not boGetTune('Doc.ChangeDescr'))
  {
    KatSopr.Descr := sGetTune('User.Descr');
    KatSopr.DesGr := sGetTune('User.DesGr');
  }
  Insert current KatSopr;
  Curse := GetCursPrice;
}

Procedure SpSopr204Default(TW: word);
{
!  ClearBuffer(#SpSopr);
  var vcSpec : comp;
#ifndef __MTR_TO_SPEC__
  var vcZatr : comp;
  vcZatr := 0;
  if (IsValid(#SpecZatr))
    vcZatr := SpecZatr.cAddSumTune;
#end

  vcSpec := SpSopr.nRec;
  SpSopr.nRec := 0;
  SpSopr.cSopr := KatSopr.NRec;
  SpSopr.dSopr := KatSopr.dSopr;
  SpSopr.dOprTTN := 0;
  SpSopr.cSpOrder := 0;
  SpSopr.cSpStep := 0;
  SpSopr.cSpSopr := 0;
  SpSopr.cSpSchf := 0;//пир 103.1227
  SpSopr.Npp := oSpNext.GetSpNppNext(KatSopr.NRec, coSpSopr);

  SpSopr.wADocSp  := KatSopr.wADoc;
  SpSopr.cADocSp  := vcSpec;

  if TW = 0
  {
   SpSopr.KolOpl := -SpSopr.KolOpl;
   SpSopr.Kol := -SpSopr.Kol;
   SpSopr.KolFact := -SpSopr.KolFact;
  }else//  If TW<>0
  {
    SpSopr.rprice := MTabReestrforKN3.NewPrice;
    SpSopr.rvprice := MTabReestrforKN3.NewPrice/Curse;
    SpSopr.price := SpSopr.rprice;
    SpSopr.vprice := SpSopr.rvprice;
  }

  Insert current SpSopr;
#ifndef __MTR_TO_SPEC__
  if (vcZatr <> 0)
    insert SpecZatr Set SpecZatr.coTable := coSpSopr, SpecZatr.cSpec := SpSopr.nRec, SpecZatr.cAddSumTune := vcZatr;
#else
  oMTRFun.CopySpecMTR(coSpSopr, vcSpec, coSpSopr, SpSopr.nRec);
#end
  RunInterface('CopySpDocSmeta', word(coSpSopr), vcSpec, word(coSpSopr), SpSopr.nRec);
//-- Копирование налогов по позиции
//в Актах на списание нет налогов
}//SpSopr204Default


Procedure MTabReestrforKN3cmAlt1;
{
  If CurTable <> #MTabReestrforKN3 Exit;
  PushPos(#MTabReestrforKN3);
   If GetFirst MTabReestrforKN3 where(( 1 == MTabReestrforKN3.Pick)) ordered by index TMP08indexmem<>tsOk
    {
     Message('Необходимо пометить по <Ins> позиции для формирования по ним Актов на списание.');
     PopPos(#MTabReestrforKN3);
     Exit;
    }

    If RunDialog(DlgSetTypeWork, p1) = cmCancel
    {
     Exit;
    }

    var _KatSopr2nSopr  : string; _KatSopr2nSopr := MTabReestrforKN3.KatSopr3nSopr;
    var _KatPodrName    : string; _KatPodrName := MTabReestrforKN3.KatPodrName;
    var _KatMolName     : string; _KatMolName := MTabReestrforKN3.KatMolName;
    var TmpKatSoprnRec  : comp;   TmpKatSoprnRec := 0;
    var i               : word;   i := 0;

     ShowRep := FALSE;

   StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm, 'Создание Актов на списание.', 1);

     If GetFirst KatSopr where((MTabReestrforKN3.KatSopr3nRec == KatSopr.nRec)) = tsOk
     {
        KatSopr204Default(i);
        TmpKatSoprnRec := KatSopr.nRec; NN_KN := 1;
        WriteERRRMessage;
       For ( i := 0; i<2; i := i+1 )  //два прохода сначала делаю -КН потом КН документы
      {
       _LOOP MTabReestrforKN3 where(( 1 == MTabReestrforKN3.Pick)) ordered by index TMP08indexmem
       {
         if not NextVisual Break;
         If (_KatSopr2nSopr = MTabReestrforKN3.KatSopr3nSopr)
           AND CheckRazrez(i, _KatPodrName, MTabReestrforKN3.KatPodrName, _KatMolName, MTabReestrforKN3.KatMolName)
          {
             If GetFirst SpSopr where((MTabReestrforKN3.SpSopr3nRec == SpSopr.nRec)) = tsOk
             {
              SpSopr204Default(i);
             }
          }
          else
          {
            If (_KatSopr2nSopr <> MTabReestrforKN3.KatSopr3nSopr)
              NN_KN := 1;
            else
              NN_KN := NN_KN+1;
              //пересчитываю толькочто созданные документы
             If GetFirst KatSopr where((TmpKatSoprnRec == KatSopr.nRec)) = tsOk
             {
              RecalcSumm;
!               RunInterface( iChkSum, KatSopr.NRec, 0, FALSE, If(KatSopr.cVal = 0, 10, 20), TRUE);
               if not NextVisual Break;
             }

              _KatSopr2nSopr := MTabReestrforKN3.KatSopr3nSopr;
              _KatPodrName  := MTabReestrforKN3.KatPodrName;
              _KatMolName   := MTabReestrforKN3.KatMolName;

              If GetFirst KatSopr where((MTabReestrforKN3.KatSopr3nRec == KatSopr.nRec)) = tsOk
              {
                 KatSopr204Default(i);
                 TmpKatSoprnRec := KatSopr.nRec;
                 WriteERRRMessage;
                  If GetFirst SpSopr where((MTabReestrforKN3.SpSopr3nRec == SpSopr.nRec)) = tsOk
                  {
                    SpSopr204Default(i);
                  }
              }

          } //else
       }//_LOOP

         //пересчитываю толькочто созданные документы
      if GetFirst KatSopr where((TmpKatSoprnRec == KatSopr.nRec)) = tsOk
        {
         RecalcSumm;

        if (NOT NextVisual)
           Break;

        // формировние ордеров по сторнирующей накладной
!        var isOrdGen: boolean;
!        isOrdGen := if (KatSopr.wADoc = adSoprDocSNSell, (wTune AND 1) = 1,
!                      if (KatSopr.wADoc = adSoprDocKNSell, (wTune AND 2) = 2, FALSE));

!        if (isOrdGen)
!        {
!          var pSoprDoc: SoprDocObj;
!          GetVipRef(pSoprDoc, 'SoprDoc');

!          pSoprDoc.MakeRashOrderByKatSopr(KatSopr.NRec, FALSE, KatSopr.dSopr);
!        }
      }

         _KatSopr2nSopr := '';
     }//FOR ( i := 0; i<2; i := i+1 )
    }// If GetFirst KatSopr where((MTabReestrforKN3.KatSopr3nRec == KatSopr.nRec)) = tsOk

   StopVisual('', 0);
   PopPos(#MTabReestrforKN3);

  if ShowRep
    {
      errr.PutEvent(feBreak);
      errr.ShowFile('Реестр созданных Актов на списание.');
      MakeNewMTabReestrforKN3;
      RereadRecord;
    }
    else
    {
     errr.AbortForm;
     Message('Операция завершена. Новые документы не созданы.');
    }
   PutCommand(cmUnSelectAll);
}

Procedure MTabReestrforKN3cmMarkUnMark;
{
  If MTabReestrforKN3.Pick<>0
     MTabReestrforKN3.Pick := 0;
  else
     MTabReestrforKN3.Pick := 1;
    update current MTabReestrforKN3;

#ifdef ATL51
 RedrawCurrentAndGo (GetCurrentFormat, TRUE);
#else
 if (GetNext MTabReestrforKN3 = tsOk)
    CallToNeighbours(cmPosDown, #MTabReestrforKN3);
 RescanPanel(#MTabReestrforKN3);
#end
}

Procedure MTabReestrforKN3cmSelectAll;
{
  PushPos(#MTabReestrforKN3);
  _LOOP MTabReestrforKN3
   {
     If MTabReestrforKN3.Pick<>1
       {
        MTabReestrforKN3.Pick := 1;
        update current MTabReestrforKN3;
       }
   }//_LOOP MTabReestrforKN3
  PopPos(#MTabReestrforKN3);
  RescanPanel(#MTabReestrforKN3);
}

Procedure  MTabReestrforKN3cmUnSelectAll;
{
  PushPos(#MTabReestrforKN3);
  _LOOP MTabReestrforKN3
   {
     If MTabReestrforKN3.Pick<>0
       {
        MTabReestrforKN3.Pick := 0;
        update current MTabReestrforKN3;
       }
   }//_LOOP MTabReestrforKN3
  PopPos(#MTabReestrforKN3);
  RescanPanel(#MTabReestrforKN3);
}
