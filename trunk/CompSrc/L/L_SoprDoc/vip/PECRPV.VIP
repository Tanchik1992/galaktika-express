!╔═══════════════════════════════════════════════════════════════════════════╗
!║ Назначение    : Формирование Pick по складам разрешенным для              ║
!║                 пользователя для получения ведомости движения по складам  ║
!╚═══════════════════════════════════════════════════════════════════════════╝

//******************************************************************************

#doc
Назначение:
  Формирование Pick по складам разрешенным для
  пользователя для получения ведомости движения по складам

Параметры:
  Res - результат обработки
#end

//******************************************************************************

Interface pecrpv;
Create View
var
  Res : word;
From
  Pick,
  KatPodr
;

Parameters
  Res;

HandleEvent
cmInit :
 {
   if (coGetTune('Pick.cGrPodr') = 0)
     {
       Res := 2;
       Abort;
       Exit;
     }
   delete Pick where ((word(555) == Pick.wlist));
   Res := 0;
   StartNewVisual(vtNumericVisual,vfTimer,''#3'Сканируется список разрешенных складов: ',1);
   _loop KatPodr where ((coGetTune('Pick.cGrPodr') == KatPodr.cGrPodr and
                         0 <<= KatPodr.Sklad))
     {
       Pick.cRec := KatPodr.NRec;
       Pick.WList := 555;
       if (insert current Pick <> tsOk)
         {
           Res := 1;
           Exit;
         }
       Res := 3;
       NextVisual;
     }
   StopVisual('',0);
   Abort;
 }
end; // HandleEvent
end. // interface
