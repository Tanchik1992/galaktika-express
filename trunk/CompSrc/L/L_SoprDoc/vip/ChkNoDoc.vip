
//╔═══════════════════════════════════════════════════════════════════════════╗
//║настройка:Контролировать уникальность номеров в пределах календарного года ║
//╚═══════════════════════════════════════════════════════════════════════════╝

//******************************************************************************

#doc
Назначение:
  Проверка уникальности номеров в пределах календарного года

Параметры:
  pVidSopr  - вид сопроводительного документа
  pYearSopr - год создания сопр.документа
  pNSopr    - номер сопр.документа
  pCanEdit  - результат проверки
#end

//******************************************************************************

Interface iCheckNODOC alwaysReturn;//,cacheable;

create view
var
  pVidSopr,pYearSopr: word;
  pCanEdit  : boolean;
  pNSopr    : string;
from
  KatSopr
where
((
// KatSopr12   =  VidSopr + YearSopr + NSopr
  pVidSopr  == KatSopr.VidSopr  and
  pYearSopr == KatSopr.YearSopr and
  pNSopr    == KatSopr.NSopr
));

Parameters
  pVidSopr,
  pYearSopr,
  pNSopr,
  pCanEdit;

function funCheckNODOC : boolean;
{
 var whatNastr : word;

  funCheckNODOC := true;

  case pVidSopr of
     101, 108:
     {
       whatNastr := wGetTune('Oper.Buy.Nakl.UniqNoDoc');
     }
     1411:
     {
       whatNastr := wGetTune('Doc.Wood.Journ.UniqNoDoc');
     }
     201:
     {
       whatNastr := wGetTune('Oper.Sell.Nakl.UniqNoDoc');
     }
     1421:
     {
       whatNastr := wGetTune('Doc.Wood.Nakl.UniqNoDoc');
     }
     else
     {
       Exit;
     }
  end;

  case whatNastr of
   0: {
   }

   1: {
     if (GetFirst KatSopr = tsOk)
       funCheckNODOC := false;
   }

   2: {
     if (GetFirst KatSopr = tsOk)
       if Message(''#13'Накладная с номером №'+KatSopr.NSopr+' в '+string(pYearSopr)+' году уже существует.'+
                  ''#13#3'Продолжить редактирование документа?',YesNo)=cmNo
         funCheckNODOC := false;
     }
  end;
}

Handleevent
cmInit:
  {
    pCanEdit := funCheckNODOC;
    Abort;
  }
end;
End.