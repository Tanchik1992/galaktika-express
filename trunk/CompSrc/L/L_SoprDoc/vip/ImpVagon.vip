

//******************************************************************************

#doc
Назначение:
  Импорт результатов взвешивания

Параметры:
  Параметров нет
#end

//******************************************************************************

interface ImportVagonsFromDBF 'Импорт результатов взвешивания' Gray, EscClose;
show at (18,5,62,15);
create view
var
  FileEmpty, FileFull: string;
  DirEmpty, DirFull: string;
from
  X$Users
;

panel pnImpVagon;
screen srImpVagon;
fields
  FileEmpty ('',,sci13Esc): pickbutton;
  FileFull  ('',,sci13Esc): pickbutton;
buttons
  cmValue1,,,'Выполнить операцию импорта',,sci1Esc;
  cmCancel,,,'Закрыть окно',,sci1Esc;
<<

   Файл с собственной массой вагонов
   .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
   Файл с массой загруженных вагонов
   .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

        <.Выполнить.>    <.Закрыть.>
>>
end; // screen srImpVagon

handleEvent
  cmPick: ProcessCommand(cmValue10);
end; // handleevent panel pnImpVagon
end; // panel pnImpVagon

handleEvent
  cmInit: {
    if (not ReadMyDsk(DirEmpty, 'ImpVagon_DirEmpty', boolean(true))) then DirEmpty := '';
    if (not ReadMyDsk(DirFull, 'ImpVagon_DirFull', boolean(true))) then DirFull := '';
  };

  cmDone: {
    SaveMyDsk(DirEmpty, 'ImpVagon_DirEmpty');
    SaveMyDsk(DirFull, 'ImpVagon_DirFull');
  };

  cmValue1: {
    message('Здесь будет вызываться функция импорта.', cmOk);
  };

  cmValue10: {
    case CurField of
      #FileEmpty: {
        set FileEmpty := GetFileName(DirEmpty + '*.dbf', 'Укажите файл с собственной массой вагонов');
        if (FileEmpty <> '') then {
          DirEmpty := FileEmpty;
          while (Length(DirEmpty) > 0 and SubStr(DirEmpty,Length(DirEmpty),1) <> '\') do
            DirEmpty := SubStr(DirEmpty, 1, Length(DirEmpty) - 1);
        };
      };
      #FileFull: {
        set FileFull := GetFileName(DirFull + '*.dbf', 'Укажите файл с массой загруженных вагонов');
        if (FileFull <> '') then {
          DirFull := FileFull;
          while (Length(DirFull) > 0 and SubStr(DirFull,Length(DirFull),1) <> '\') do
            DirFull := SubStr(DirFull, 1, Length(DirFull) - 1);
        };
      };
    end; // case
  };
end; // handleevent
end. // interface