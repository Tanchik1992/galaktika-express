/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,97 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Оперативный контур                                        ║
 ║ Версия        : 5.00                                                      ║
 ║ Назначение    : Выбор записи из каталога подразделений/складов            ║
 ║ Ответственный : Мощенский Владимир Владимирович                           ║
 ║ Параметры     : есть                                                      ║
 ║   Изменения   : Мощенский 12-01-98  Открытие иерархии подразделений       ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

interface GetSomeSpDocs DoAccept,EscClose; //alwaysreturn;
Create View
var
  OkMulti      : boolean;
  pDocOwner    : comp;
  TiDkOwner    : word;
  p1           : comp;
  EmptyFlt,
  pCopyZam,
  pDirect      : word;
;

Parameters
  OkMulti,    // true- групповой выбор false-одиночный
  pDocOwner,  // ссылка на документ из которого надо брать спецификацию
  TiDkOwner,  //  тип документа из которого надо брать спецификацию
  p1,          // ссылка на выбраную позицию при одиночном выборе
  EmptyFlt,
  pCopyZam,   //-- только для OkMulti=true, 1-доступно только без копирования замен
              //-- 2-доступно только с копированием замен
              //-- доступно все
  pDirect;

HandleEvent
cmInit :
  {

        if (RunInterface(GetSomeSpDocs1, OkMulti,pDocOwner,
                     TiDkOwner,p1,EmptyFlt,comp(0),pCopyZam,pDirect) = cmDefault)
          {
            PutCommand(cmDefault);
            exit;
          }
        else
          {
            abort;
            exit;
          }

    if (RunInterface(GetSomeSpDocsMain, OkMulti,pDocOwner,
                  TiDkOwner,p1,EmptyFlt) = cmDefault)
      {
        PutCommand(cmDefault);
      }
    else
      {
        abort;
        exit;
      }
  }

end;
end.


Interface GetSomeSpDocsMain 'Выбор  спецификации документов'
                                           EscClose,
                                           Cyan,
                                           DoAccept;
  Show at (0,0,80,25);

Create View
Var
#ifdef __YUKOS__
  CurGroup: comp;
#end
//--параметры
  OkMulti      : boolean;
  pDocOwner    : comp;
  TiDkOwner    : word;
  p1           : comp;
  EmptyFlt     : word;
//--
  MarkerSpDocs    : longint;
  IndexSpDocs     : longint;
  MarkerKol    : longint;
  IndexKol     : longint;
  tmpKol       : double;
  myKol       : double;
  (
  picked,       // 1
  SpDocsPr,     // 2
  SpDocsName,   // 3
  SpDocsGrName, // 4
  PickedKol      // 5
  )
As Select
//  1
  if(OkMulti,
     if(SearchMarker(MarkerSpDocs,SpDocs.NRec,IndexSpDocs),
        '√',' '),
       ''),
// 2  SpDocsPr
  if (SpDocs.prMC = 1,'Т',
    if (SpDocs.prMC = 2,'У','')),
// 3  SpDocsName
  if (SpDocs.cMCUsl = 0,'',
    if (SpDocs.prMC = 1,if (isValid(tnKatMC),KatMC.Name,'? MC ' + string(SpDocs.cMCUsl)),
    if (SpDocs.prMC = 2,if (isValid(tnKatUsl),KatUsl.Name,'? Услуга ' + string(SpDocs.cMCUsl)),''))),
// 4 SpDocsGrName
  if (SpDocs.cGrMCUsl = 0,'',
    if (SpDocs.prMC = 1,if (isValid(tnGroupMC),GroupMC.Name,''),
    if (SpDocs.prMC = 2,if (isValid(tnGroupUsl),GroupUsl.Name,''),''))),
// 5
  if (GetMarker(MarkerKol,IndexSpDocs,tmpKol),tmpKol,0.0)

From
  SpDocs    ,
  GroupMC   ,
  GroupUsl  ,
  KatMC     ,
  KatUsl    ,
  KatOtpEd  ,
  ResOtgr   ,
  KlVal     ,
#ifdef __YUKOS__
  synonym SpDocs SpDocs2      ,
  synonym SpDocs SpDocs3      ,
#end
  synonym Shipment SpShipment ,
  synonym TipOtg SpTipOtg     ,
  synonym WayMove SpWayMove   ,
  MoveCell  ,
  ResOtgr   
Where
  ((
      pDocOwner           ==   SpDocs.cDoc     and
      TiDkOwner           ==   SpDocs.TiDk     and
      SpDocs.cGrMCUSL     ==   GroupMC.nRec    and
      SpDocs.cGrMCUSL     ==   GroupUsl.nRec   and
      SpDocs.cMCUSL       ==   KatMC.nRec      and
      SpDocs.cMCUSL       ==   KatUsl.nRec     and
      SpDocs.cOtpEd       ==   KatOtpEd.nRec   and
      SpDocs.cResOtgr     ==   ResOtgr.nRec    and
      SpDocs.cVal         ==   KlVal.nRec      and
      SpDocs.cResOtgr     ==   ResOtgr.nRec    and
      SpDocs.cMoveCell    ==   MoveCell.nRec   and
      SpDocs.cShipment    ==   SpShipment.nRec and
      SpDocs.cTipOtg      ==   SpTipOtg.nRec   and
      SpDocs.cWayMove     ==   SpWayMove.nRec
#ifdef __YUKOS__
  and CurGroup            ==   SpDocs.cSpMc    
  and SpDocs.nRec         ==   SpDocs2.cSpMc   
#end
  ))
Bounds SpDocs1
      pDocOwner           ==   SpDocs.cDoc    and
      TiDkOwner           ==   SpDocs.TiDk     and
      word(EmptyFlt)      ==   SpDocs.Empty
#ifdef __YUKOS__
  and CurGroup            ==   SpDocs.cSpMc
#end

Order By
  SpDocs.Code
;

Parameters
  OkMulti,    // true- групповой выбор false-одиночный
  pDocOwner,  // ссылка на документ из которого надо брать спецификацию
  TiDkOwner,  //  тип документа из которого надо брать спецификацию
  p1,          // ссылка на выбраную позицию при одиночном выборе
  EmptyFlt
  ;
Window winGetPickKol 'Введите количество' (, , sci1Esc) EscClose, DoAccept, Gray;
  Show at (,7,,10);
Panel panGetPickKol
Screen scrGetPickKol1;
  Fields
    myKol ('Количество',, sci1Esc): [prSignsInKol], NoProtect;
<<

 Введите количество по данной позиции .@@@@@@@@@@@@
>>
end;

HandleEvent
cmCheckField:
  if (CurField = #myKol) and (KatOtpEd.Diskret = 1) and (Round(myKol) <> myKol)
    { message(''#3'Отпускная единица не является делимой!');
      abort;
    }
end;
end;

HandleEvent
cmInit:
  myKol := 0;

end; // of HandleEvent Window winSerach

end; // of Window winSerach

//-- Установить заголовок окна
Procedure SetMyTitle;
{
  if ( OkMulti)
    SetTitle('Групповой выбор спецификации документа (помечено: ' + string(GetMarkerCount(MarkerSpDocs)) + ')');
  else
    SetTitle('Выбор спецификации документа');
}

procedure PickKol(par:word);
{
  if (par=wGetTune('Pick.ChkGrpIns'))
    {
      case (par) of
       1:
         {
           if RunWindowModal(winGetPickKol) = cmCancel
             myKol := 0;
           InsertMarker(MarkerKol,
                        if ((myKol*KatOtpEd.Koef) > SpDocs.Ostatok,
                            if(KatOtpEd.Diskret = 1,
                               Trunc(SpDocs.Ostatok/KatOtpEd.Koef),
                               SpDocs.Ostatok/KatOtpEd.Koef),
                            if(KatOtpEd.Diskret = 1, Trunc(myKol), myKol)
                           )
                       );
         }
       2:
         {
           if RunWindowModal(winGetPickKol) = cmCancel
             myKol := 0;
           var i, MarkerCount: LongInt;
           var pickrec: comp;
           MarkerCount := GetMarkerCount(MarkerSpDocs);
           ClearMarker(MarkerKol);
           for(i := 0; i < MarkerCount; i := i+1)
             if GetMarker(MarkerSpDocs, i, pickrec)
               { if (GetFirst SpDocs
                   where (( pickrec == SpDocs.nRec )) = tsOK) {};
                 InsertMarker(MarkerKol,
                              if ((myKol*KatOtpEd.Koef) > SpDocs.Ostatok,
                                  if(KatOtpEd.Diskret = 1,
                                     Trunc(SpDocs.Ostatok/KatOtpEd.Koef),
                                     SpDocs.Ostatok/KatOtpEd.Koef),
                                  if(KatOtpEd.Diskret = 1, Trunc(myKol), myKol)
                                 )
                             );
               }
         }
      end;
    }
}

//-- Отменить выделение
Procedure KillPick;
{
  ClearMarker(MarkerSpDocs);
  ClearMarker(MarkerKol);
  SetMyTitle;
}

!------------------------------------------------------------------------------
Panel panSpDocs;
 Table SpDocs;
#ifdef __YUKOS__
tree 1 brSpDocs1 (,hcDogViewListPos,sci1EnInsTree);
#else
Browse brSpDocs1 (,hcDogViewListPos,sci1EnIns);
#end
show at (,,,16);
Fields
  picked        '√' ('') : [1], skip,
    {Font = {Color = if (Picked = '√',ColorMark,0)}};
#ifdef __YUKOS__
  SpDocs.CODE    'п/н' ('') : [10], protect,
#else
  SpDocs.CODE    'п/н' ('') :  [3], protect,
#end
    {Font = {Color = if (Picked = '√',ColorMark,0)}};
  SpDocsPr       '' ('') : [2], protect,
    {Font = {Color = if (Picked = '√',ColorMark,0)}};
  SpDocsGrName   'Группа' ('') : [15], protect,
    {Font = {Color = if (Picked = '√',ColorMark,0)}};
  SpDocsName     'Продукция' ('') : [20], protect,
    {Font = {Color = if (Picked = '√',ColorMark,0)}};
  KatOtpEd.Name  'ЕдИзм' ('') : [5], protect,
    {Font = {Color = if (Picked = '√',ColorMark,0)}};
  SpDocs.Kol     'Количество' ('',,sci178Esc) : [10],[prSignsInKol], protect,
    {Font = {Color = if (Picked = '√',ColorMark,0)}};
  PickedKol     'Выбрано' ('',,sci178Esc) : [10.3], protect,
    {Font = {Color = if (Picked = '√',ColorMark,0)}};
  SpDocs.Price   'Цена' ('Цена в валюте',,sci178Esc) : [10.2], protect,
    {Font = {Color = if (Picked = '√',ColorMark,0)}};
  KlVal.SimvolV  'Валюта' ('') : [3], protect ,
    {Font = {Color = if (Picked = '√',ColorMark,0)}};
end ; // browse
Browse brSpDocs2 (,hcDogViewListPos,sci1EnEsc);
show at (,,,16);
Fields
  SpDocs.CODE    'п/н' ('') : [5] , protect ;
  SpDocsPr       '' ('') : [2], protect;
  SpDocsGrName   'Группа' ('') : [15], protect;
  SpDocsName     'Продукция' ('') : [20], protect;
  KatOtpEd.Name  'ЕдИзм' ('') : [5], protect;
  SpDocs.Kol     'Количество' ('',,sci178Esc) : [10],[prSignsInKol], protect;
  SpDocs.Price   'Цена' ('Цена в валюте',,sci178Esc) : [10.2], protect;
  KlVal.SimvolV  'Валюта' ('') : [3], protect ;
end ; // browse
screen scrSpDocs3 (,hcDogViewListPos,sci1EnEsc);
show at (,17,,);
fields
  SpDocs.Ostatok/KatOtpEd.Koef  ('',,sci178Esc) : [prSignsInKol], skip;
  SpDocs.Summa   ('Стоимость в валюте',,sci178Esc) : [11.2], skip;
  MoveCell.Name  ('Наименование единицы подвижного состава',,) : skip;
  ResOtgr.Name   ('Наименование ресурса отгрузки',,) : skip;
  SpShipment.Name('Способ отгрузки',,) : skip;
  SpTipOtg.Name  ('Базис поставки',,) : skip;
  SpWayMove.Name ('Способ транспортировки',,) : skip;
  SpDocs.ShipAddTerms ('Дополнительные условия отгрузки',,):skip;
<<
 `Остаток`.@@@@@@@@@@@@@@@@@@@@ `Сумма`.@@@@@@@@@@@@@@@@@@@@
 `Единица подвижного состава`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Ресурс отгрузки`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Способ отгрузки`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Базис`.@@@@@@@@@@@@@@@@@@@@@`Транспорт`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Дополнительно`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;

!-------------------------------------------------------------------------------


HandleEvent

#ifdef __YUKOS__
cmTreeTop      : CurGroup := 0;
cmTreeUp       : CurGroup := SpDocs.cSpMc;
cmTreeDown     : CurGroup := SpDocs.NRec;
cmTreeNodeType : if not IsValid (tnSpDocs2) TreeSetNodeType(brSpDocs1,2);
cmTreeNeedOwner: TreeJumpToRecord ( brSpDocs1, SpDocs.cSpMc );
#end
end; // HandleEvent

end; // panel

//-- пометить одну позицию
function OneMarkPick:boolean;
{
  OneMarkPick := false;
  InsertMarker(MarkerSpDocs,SpDocs.NRec);
  PickKol(1);
#ifdef __YUKOS__
  var c1, c2: comp;
  c1 := SpDocs.nRec;
  _loop SpDocs3 where (( c1 == SpDocs3.cSpMc )) {
    InsertMarker(MarkerSpDocs,SpDocs3.NRec);
    c2 := SpDocs3.nRec;
    CurGroup := SpDocs3.cSpMc;
    TreeJumpToRecord(brSpDocs1, c2);
    RescanPanel(#SpDocs);
    PickKol(1);
  }
#end
  OneMarkPick := true;
}

HandleEvent // Interface

cmInit :
{
#ifdef __YUKOS__
  CurGroup := 0;
#end
  MarkerSpDocs:=InitMarker('MSpDocs',8,100,10,false);
  ClearMarker(MarkerSpDocs);
  MarkerKol:=InitMarker('MSpDocsKol',8,100,10,false);
  ClearMarker(MarkerKol);
  SetMyTitle;
  SetFormat(if(OkMulti,brSpDocs1,brSpDocs2));
  if (EmptyFlt>-1)
    PushBounds(tbSpDocs1);

}


cmDefault :
  {
    if (not isValid(#SpDocs))
      {
        abort;
        exit;
      }
    if (not OkMulti)
      p1 := SpDocs.nRec
    else
      {
      p1 := 0;
      if ( (GetMarkerCount(MarkerSpDocs) = 0) and isValid(#SpDocs) )
#ifdef __YUKOS__
        if (SpDocs.cSpMC = 0)
#end
          if (OneMarkPick = false)
            {
              Abort;
              EXIT;
            }
      PickKol(2);
      }
  }

cmDone:
  {
    DoneMarker(MarkerSpDocs,'MSpDocs');
    DoneMarker(MarkerKol,'MSpDocsKol');
  }
cmMarkUnMark : // Если на группу то выбирать все из группы
if IsValid(#SpDocs)
#ifdef __YUKOS__
and (SpDocs.cSpMC = 0)
#end
{
  if SearchMarker(MarkerSpDocs,SpDocs.NRec,IndexSpDocs)
   { var tmpDouble : double;
     DeleteMarker(MarkerSpDocs,SpDocs.NRec)
     if (GetMarker(MarkerKol,IndexSpDocs,tmpDouble))
       AtDeleteMarker(MarkerKol,IndexSpDocs);
#ifdef __YUKOS__
     var ret: word;
     _loop SpDocs2
     if SearchMarker(MarkerSpDocs,SpDocs2.NRec,IndexSpDocs)
     {
       DeleteMarker(MarkerSpDocs,SpDocs2.NRec)
       if (GetMarker(MarkerKol,IndexSpDocs,tmpDouble))
         AtDeleteMarker(MarkerKol,IndexSpDocs);
     }
#end
   }
  else
    OneMarkPick;
  SetMyTitle;
  if (GetNext SpDocs = tsOK)
    CallToNeighBours(cmPosDown,#SpDocs);
  RescanPanel(#SpDocs);
}

cmSelectAll :
  {
  PushPos(#SpDocs);
  KillPick;
#ifdef __YUKOS__
  ProcessCommand(cmTreeTop);
  if GetFirst SpDocs = tsOK {};
  TreeJumpToRecord(brSpDocs1, SpDocs.NRec);
  RescanPanel(#SpDocs);
#end             
  var ret  : word;
  _loop SpDocs
    if (SpDocs.NRec <> 0)
    {
      RescanPanel(#SpDocs);
      OneMarkPick;
     
    }
  SetMyTitle;
  PopPos(#SpDocs);
  ReReadRecord;
  RescanPanel(#SpDocs);
  }

cmUnSelectAll :
  {
  KillPick;
  RescanPanel(#SpDocs);
  ReReadRecord;
  }


end; // HandleEvent Interface

end. // Interface
