//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 8.10 - настройки
// Создание/модификация настроек компонента L_Dogovor
//********************************************************************************

#include CreateTune.vih

//------------------------------------------------------------------------------
Handler with replace L_Dogovor_DateModifyTune on ExtensionPoint
  epDateModifyTuneEx (TS : ObjStartCreateTuneEx)
Action
{
  TS.SetLastDateModTuneComp('#__COMPONENT__', 01,07,2009);
  Result := true;
}
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
Handler with replace L_Dogovor_CreateTune on extensionPoint
  epCreateTuneComponent (TR: ObjCreateTuneEx) [45]
Action
{
  Result := true;
  TR.SetComponent('#__COMPONENT__');     // установить имя компонента

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Dogovor');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************
  TR.AddPartU('Oper.Dogovor.CancelDog', 'Формирование отменяющих соглашений', 'UserTuneDogovFormOtmenSogl');
  TR.AddPartU('Oper.Dogovor.UserName',  'Пользовательские названия документов', 'NastrPolzNazDocumentov');
  TR.AddPartA('Oper.Dogovor.Dolg',      'Соглашение реструктуризации долга', 'Dogov_NastrRestruct');
  TR.AddPartU('Oper.Dogovor.Algoritm',  'Формирование ПКП в договорах по корпоративным планам', 'NastrFormPKPVDogPoKorpPlanam');
  TR.AddPartU('Oper.Dogovor.Umolchan',  'Значения по умолчанию', 'SysTuneUprDogov');
  TR.AddPartU('OPER.DOGOVOR.RULES',     'Права доступа', 'NastrLogRightAccess');
  TR.AddPartU('OPER.DOGOVOR.LocMnu',    'Дополнительные функции локального меню', 'NastrDopFunkLocMenu');
  TR.AddPartU('OPER.DOGOVOR.Algoritm',  'Запуск алгоритмов', 'NastrOperDocSnabNaklAlg');
//********************************************************************************
  TR.SetNextNumberTune(0);
//********************************************************************************

  TR.AddTuneS('Oper.UniqNoDog',         'Контроль уникальности номеров договоров', ftBoolean, '0', '', 'SysTune_ControlNumDog');

  TR.AddTuneS('Dog.DopKlas',            'Дополнительная классификация договоров', ftWord, '', '', 'NastrDopKlassDogovorov');
    TR.AddIntr('GetKauTable');

  TR.AddTuneS('Dog.DocNameKlas',        'Наименования договоров/соглашений/ПКП из внешней классификации', ftBoolean, '0', '', 'NastrLogNameDogVneshKlass');

  TR.AddTuneS('Oper.Dogovor.IskiDaysInYear', 'Число дней в году для ставки рефинансирования', ftWord, '360', '', 'NastrChisloDney');

  TR.AddTuneS('FN.SellDoOnDog',         'Формирование номера ДО на продажу по ПКП', ftList, '0', '', 'NastrNumerDOProd');
    TR.AddList(0, 'автонумерация');
    TR.AddList(1, 'номер договора/соглашения_Номер ПКП');
    TR.AddList(2, 'номер ПКП');

  TR.AddTuneS('FN.BuyDoOnDog',          'Формирование номера ДО на закупку по ПКП', ftList, '0', '', 'NastrNumerDOZak');
    TR.AddList(0, 'номер договора/соглашения_Номер ПКП');
    TR.AddList(1, 'номер ПКП');
    TR.AddList(2, 'автонумерация');

  TR.AddTuneU('Round.AdvSell',          'Округление в договорах/Соглашениях/ПКП/НЗ', ftList, '0', '', 'UserTune_Rounds');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'математическое');
    TR.AddList(2, 'в большую сторону');

  TR.AddTuneU('Round.AdvSellIn',        '..округлять цену при вставке в дог/согл/ПКП/НЗ', ftBoolean, '0', '', 'UserTune_n_116');

  TR.AddTuneU('Round.AdvSellRub',       '..значения в НДЕ округлять до'   , ftDouble, '1.0000', '666667.8899', 'UserTune_RoundRub');

  TR.AddTuneU('Round.AdvSellVal',       '..значения в валюте округлять до', ftDouble, '0.0100', '666667.8899', 'UserTune_RoundVal');

  TR.AddTuneU('Dog.SumDogSogl',         'Пересчитывать сумму вышестоящего документа при изменении суммы соглашения', ftList, '0', '', 'UserTuneDogovCalcSumDog1');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');
    TR.AddList(2, 'по запросу');

  TR.AddTuneU('Dog.ReSchetSumDog',      'Пересчитывать сумму договора при изменении суммы ПКП', ftList, '0', '', 'UserTuneDogovCalcSumDog2');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');
    TR.AddList(2, 'по запросу');

  TR.AddTuneU('Dog.ReCalcSumDog',       'Пересчитывать сумму договора при изменении спецификации, условий взаиморасчетов', ftList, '2', '', 'NastrPereschSummDog');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');
    TR.AddList(2, 'по запросу');

  TR.AddTuneU('Dog.KontrolSpecDog',     'Запрещать расхождение стоимости спецификации с суммой договора/соглашения', ftList, '0', '', 'NastrDocDogovCheckStoimSpec');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');
    TR.AddList(2, 'по запросу');

  TR.AddTuneU('Dog.SumSoprDog',         'Запрещать превышение накладными и актами суммы по договору', ftList, '0', '', 'NastrDogZapretPrevysh');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');
    TR.AddList(2, 'по запросу');

  TR.AddTuneU('Dog.SumBaseDocDog',      'Запрещать превышение документами-основаниями суммы по договору', ftList, '0', '', 'NastrZaprPrevDOSummDog');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');
    TR.AddList(2, 'по запросу');

  TR.AddTuneU('Oper.Dogovor.ControlDO', 'Контролировать в документах-основаниях наличие ссылки на договор', ftList, '0', '', 'NastrContrVDOSsylNaDogovor');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneU('Oper.Dogovor.ControlDolgDG', 'Контролировать задолженность', ftList, '0', '', 'NastrKontrZadol');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'по договору');
    TR.AddList(2, 'по контрагенту');

  TR.AddTuneU('Oper.Dogovor.ControlDel', 'Разрешать удаление договора при наличии в документах ссылок на него', ftList, '0', '', 'NastrDogZapretDel');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');
    TR.AddList(2, 'по запросу');

  TR.AddTuneU('Oper.Dogovor.DocumentsDolgDG', '..при создании в управлении сбытом', ftList, '0', '', 'NastrDocDogovPriSozdanii');
    TR.AddList(0, 'ДО и сопроводительных документов');
    TR.AddList(1, 'только ДО');
    TR.AddList(2, 'только сопроводительных документов');

  TR.AddTuneU('Oper.Dogovor.ZapretDolgDG',   '..запрещать превышение задолженности', ftList, '1', '', 'NastrZaprPrevZadol');
    TR.AddList(1, 'да');
    TR.AddList(2, 'по запросу');

  TR.AddTuneU('Doc.EditSpCalPlan',           'Контролировать редактирование спецификации ПКП', ftBoolean, '0', '', 'UserTune_DocPKPControl');

  TR.AddTuneU('Dog.CloseIspPKP',             'Разрешать закрытие только исполненных ПКП', ftBoolean, '0', '', 'NastrLogCloseIspPKP');

  TR.AddTuneU('NZ.IzmCenaKol',               'Изменение суммы в наряд-заказах', ftList, '0', '', 'NastrIzmSummNarZak');
    TR.AddList(0, 'не давать изменять сумму');
    TR.AddList(1, 'изменить количество');
    TR.AddList(2, 'изменить цену');

  TR.AddTuneU('Dog.CloseNotAktSver',         'Разрешать закрытие договоров без наличия актов сверки', ftBoolean, '0', '', 'NastrLogZakrDogAktSver');

  TR.AddTuneU('Dogovor.MarkDaysLeft',        'Выделять исполняемый договор цветом, если до окончания действия осталось дней', ftWord, '5', '', 'NastrDocDogovSetColor');

  TR.AddTuneU('Oper.Dogovor.AutoIntrNumAlg', 'Алгоритм формирования внутреннего номера договора', ftComp, '0', '', 'NastrAddAlg');
    TR.AddIntr('PickAlgor');

  TR.AddTuneU('Dogovor.cAgentUsl',           'Услуга - агентское вознаграждение', ftComp, '0', '', 'NastrLogUslAgVozn');
    TR.AddIntr('GetUsl');

  TR.AddTuneU('Dog.DogNameInComment',        'Номер договора/соглашения в примечании документов-оснований и сопроводительных документов', ftList, '0', '', 'NastrLogNomDogDoc');
    TR.AddList(0, 'внутренний номер');
    TR.AddList(1, 'входящий номер');

  TR.AddTuneU('Dog.DateDogInComment', 'Дата договора/соглашения в ДО и сопроводительных документах', ftList, '0', '', 'NastrLogDateDogov');
    TR.AddList(0, 'по дате заключения');
    TR.AddList(1, 'по дате создания');

  TR.AddTuneU('Dog.SchemaRecalc', 'Пересчет схемы платежей', ftList, '0', '', 'NastrLogCountShPlat');
    TR.AddList(0, 'относительно %');
    TR.AddList(1, 'относительно сумм');

  TR.AddTuneU('Oper.Dogovor.NewSogl.Param', 'Копировать спецификацию, КП, перепривязывать документы, хозоперации, финансовые операции', ftBoolean, '1', '', ' NastrLogDogovCopySpec');

  TR.AddTuneU('Dog.ShowUserIcons',          'Пользовательские иконки статусов договоров, соглашений, ПКП', ftBoolean, '0', '', 'NastrLogUserIconsStatus');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Dogovor.Umolchan');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Dog.VidDog',             'Вид договора', ftComp, '0', '', 'NastrVidDogovPoUmolch');
    TR.AddIntr('GETVIDDOG');

  TR.AddTuneU('Dog.PKPTypeDef',         'Вид платежей в ПКП', ftList, '0', '', 'UserTuneDogovVidPlat');
    TR.AddList(0, 'авансовый');
    TR.AddList(1, 'по факту');

  TR.AddTuneU('Dog.PKPRunOKDef',        'Признак платежей в ПКП', ftList, '0', '', 'NastrPrizPlatPKPUmol');
    TR.AddList(0, 'необязательные');
    TR.AddList(1, 'обязательные');

  TR.AddTuneU('Dog.PKPdInputDef',       'Дата ввода пункта плана', ftList, '0', '', 'NastrDataVvodPunktPlan');
    TR.AddList(0, 'текущая дата');
    TR.AddList(1, 'дата создания договора/соглашения');
    TR.AddList(2, 'дата заключения договора/соглашения');
    TR.AddList(3, 'не задавать');

  TR.AddTuneU('Dog.CursForPlPor', 'Методика определения курса для учета платежей', ftList, '0', '', 'NastrLogMetOpredKurs');
    TR.AddList(0, 'на дату получения платежа');
    TR.AddList(1, 'на дату перечисления платежа');
    TR.AddList(2, 'по документу');
    TR.AddList(3, 'на дату сопроводительного документа');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Dogovor.CancelDog');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Oper.Dogovor.CancelDog.Default', 'Алгоритм формирования', ftList, '0', '', 'UserTuneDogovFormOtmenSogl');
    TR.AddList(0, 'по запросу');
    TR.AddList(1, 'по настройке');

  TR.AddTuneU('Oper.Dogovor.CancelDog.Param', 'Копировать спецификацию, КП, перепривязывать документы, хозоперации, финансовые операции', ftBoolean, '0', '', 'UserTuneDogovFormOtmenSogl');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Dogovor.UserName');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************
  TR.AddTuneU('Oper.Dogovor.UserName.Dogovor', 'Пользовательское название договора', ftString, '', '', 'NastrPolzNazDocumentov');

  TR.AddTuneU('Oper.Dogovor.UserName.OtmenDogovor', 'Пользовательское название отменяющего договора', ftString, '', '', 'NastrPolzNazDocumentov');

  TR.AddTuneU('Oper.Dogovor.UserName.UtochSogl', 'Пользовательское название уточняющего соглашения', ftString, '', '', 'NastrPolzNazDocumentov');

  TR.AddTuneU('Oper.Dogovor.UserName.OtmenSogl', 'Пользовательское название отменяющего соглашения', ftString, '', '', 'NastrPolzNazDocumentov');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Dogovor.Algoritm');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************
  TR.AddTuneU('Oper.Dogovor.AlgBuy',   'Формирование ПКП на закупку', ftComp, '0', '', 'NastrFormPKPVDogPoKorpPlanam');
    TR.AddIntr('Alg_PKP_Buy');

  TR.AddTuneU('Oper.Dogovor.AlgSell',  'Формирование ПКП на продажу', ftComp, '0', '', 'NastrFormPKPVDogPoKorpPlanam');
    TR.AddIntr('Alg_PKP_Sell');

  TR.AddTuneU('Oper.Dogovor.AlgDsIn',  'Формирование ПКП на передачу давальческого сырья', ftComp, '0', '', 'NastrFormPKPVDogPoKorpPlanam');
    TR.AddIntr('Alg_PKP_DsIn');

  TR.AddTuneU('Oper.Dogovor.AlgDsOut', 'Формирование ПКП на возврат готовой продукции', ftComp, '0', '', 'NastrFormPKPVDogPoKorpPlanam');
    TR.AddIntr('Alg_PKP_DsOut');

  TR.AddTuneU('Oper.Dogovor.AutoIntrNumAlgPKP', 'Алгоритм формирования номера ПКП', ftComp, '0', '', 'NastrAddAlg');
    TR.AddIntr('PickAlgor');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Dogovor.Dolg');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneS('Dolg.StatHistory', 'Признак ведения истории статусов', ftList, '0', '', 'Dogov_NastrRestruct');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneS('Dolg.SpNum', 'Способ нумерации соглашений', ftList, '0', '', 'Dogov_NastrRestruct');
    TR.AddList(0, 'не ведется');
    TR.AddList(1, 'с помощью специальной таблицы');
    TR.AddList(2, 'по последним номерам БД');

  TR.AddTuneS('Dolg.AutoNum', 'Автонумерация соглашений', ftList, '0', '', 'Dogov_NastrRestruct');
    TR.AddList(0, 'по всем документам');
    TR.AddList(1, 'в рамках дескриптора');

  TR.AddTuneS('Dolg.VidDoc', 'Отображение вида документа', ftList, '0', '', 'Dogov_NastrRestruct');
    TR.AddList(0, 'последний лист');
    TR.AddList(1, 'все дерево');

  TR.AddTuneU('Dolg.DefStat', 'Статус соглашения по умолчанию', ftComp, '0', '', 'Dogov_NastrRestruct');
    TR.AddIntr('GETSOMEKATNOTES189');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('OPER.DOGOVOR.RULES');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Dogovor.Visible', 'Доступ к договорам', ftList, '0', '', 'NastrLogRightAccess');
    TR.AddList(0, 'по настройке "Общ.настройки системы / Доступ к документам"');
    TR.AddList(1, 'все права по курирующему подразделению');

  TR.AddTuneU('Dogovor.cCurrPodr', 'Подразделение-куратор', ftComp, '0', '', 'NastrLogRightAccess');
    TR.AddIntr('GETPODR');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Doc.NZ');
///\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Doc.NZ.SpOnePos', 'В спецификации только одна позиция', ftBoolean, '0', '', 'n_116_64');

  TR.AddTuneU('Doc.NZ.FormNum', 'Формировать номер по специальному алгоритму', ftList, '0', '', 'n_116_128');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'алгоритм 8-ого знака');
    TR.AddList(2, 'алгоритм по контрагенту');

  TR.AddTuneU('Doc.NZ.Num=Num', 'Номер заменяющего НЗ равен номеру заменяемого', ftBoolean, '0', '', 'n_116_256');

  TR.AddTuneU('Doc.NZ.TipNz', 'Тип НЗ по умолчанию', ftList, '0', '', 'n_116_512');
    TR.AddList(0, 'обычный');
    TR.AddList(1, 'групповой');

  TR.AddTuneU('Doc.NZ.RotgrFormNum', 'Распоряжения на отгрузку: форм. номер по спец. алгоритму', ftList, '0', '', 'n_116_2048');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'СИ');

  TR.AddTuneU('Doc.NZ.EditCen', 'Разрешить редактирование цены в спецификации', ftList, '0', '', 'NastrRazrRedTsenyVSpec');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneU('Doc.NZ.CheckFieldRazPog', 'Контролировать заполнение пунктов погрузки/разгрузки в наряд-заказах', ftList, '1', '', 'NastrLogPogrRazgrNarZak');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('OPER.DOGOVOR.LocMnu');
///\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************
  TR.AddPartU('OPER.DOGOVOR.LocMnu.CalPlan', 'Главное окно календарного плана', 'NastrDopFunkLocMenu');
  TR.AddPartU('OPER.DOGOVOR.LocMnu.SpDocs',  'Окно спецификации документа', 'NastrDopFunkLocMenu');
//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('OPER.DOGOVOR.LocMnu.CalPlan');
///\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneS('OPER.DOGOVOR.LocMnu.CalPlan.DopFunc01', 'Функция 1', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('PICKALGOR');

  TR.AddTuneS('OPER.DOGOVOR.LocMnu.CalPlan.DopFunc02', 'Функция 2', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('PICKALGOR');

  TR.AddTuneS('OPER.DOGOVOR.LocMnu.CalPlan.DopFunc03', 'Функция 3', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('PICKALGOR');

  TR.AddTuneS('OPER.DOGOVOR.LocMnu.CalPlan.DopFunc04', 'Функция 4', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('PICKALGOR');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('OPER.DOGOVOR.LocMnu.SpDocs');
///\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneS('OPER.DOGOVOR.LocMnu.SpDocs.DopFunc01', 'Функция 1', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('PICKALGOR');

  TR.AddTuneS('OPER.DOGOVOR.LocMnu.SpDocs.DopFunc02', 'Функция 2', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('PICKALGOR');

  TR.AddTuneS('OPER.DOGOVOR.LocMnu.SpDocs.DopFunc03', 'Функция 3', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('PICKALGOR');

  TR.AddTuneS('OPER.DOGOVOR.LocMnu.SpDocs.DopFunc04', 'Функция 4', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('PICKALGOR');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('OPER.DOGOVOR.Algoritm');
///\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Oper.Dogovor.BeforeChangeStatus', 'Перед изменением статуса договора/соглашения выполнить алгоритм', ftComp, '0', '', 'NastrOperDocSnabNaklAlg');
    TR.AddIntr('PickAlgor');

  TR.AddTuneU('Oper.Dogovor.AfterChangeStatus',  'После изменения статуса договора/соглашения выполнить алгоритм', ftComp, '0', '', 'NastrOperDocSnabNaklAlg');
    TR.AddIntr('PickAlgor');
}
