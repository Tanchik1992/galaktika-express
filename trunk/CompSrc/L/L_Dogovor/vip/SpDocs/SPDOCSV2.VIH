//******************************************************************************
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Логистика
// Объект SpDocs: функции для работы со спецификацией договоров, ПКП, НЗ
//******************************************************************************

#ifndef _SPDOCSV2_VIH_
#define _SPDOCSV2_VIH_

#ifdef ComponentVersion
#component "L_DOGOVOR"
#end

#ifdef ComponentVersionInDict
  #include iSpDocs.vih
  #include iSpStep.vih
  #include iSpSopr.vih
#end

#include TSpDocs.vih
#include BD_types.vpp
#include SD_types.vpp

#doc
Содержит описание функций для работы со спецификацией договоров/соглашений/ПКП/НЗ
#end
ObjInterface tSpDocsV2ObjInterface;

//******************************************************************************
#doc
пересчет налогов по позиции договора/соглашения/ПКП
#end
procedure ChangePosSpDocs (pTiDk  : word;   // общесистемный тип документа
                           pDoc   : comp;   // ссылка на документ
                           pSpDoc : comp);  // ссылка на позицию спецификации

//******************************************************************************
#doc
изменение организации в налогах по договору/соглашению/ПКП
#end
procedure ChangeOrgInNal (pTiDk      : word;   // общесистемный тип документа
                          pDoc, pOrg : comp);  // ссылка на документ и на организацию

//******************************************************************************
#doc
пересчет налогов по всей спецификации договора/соглашения/ПКП
#end
procedure ReCalcSpec (pTiDk  : word;   // общесистемный тип документа
                      pDoc   : comp);  // ссылка на документ

//******************************************************************************
#doc
Функция формирования ДЕИ в спецификации договора/согалшения/ПКП по количеству
в отпускных единицах. Если записи существуют, то проводится пересчет
с новым количеством. Возвращает 0, если операция прошла успешно, не 0 - иначе
#end
procedure UpDateDEIKolSpDocs(SpDocsPos : #TSpDocs;
                             wTipKol   : word;
                             _OldKol   : double;
                             _NewKol   : double;
                             lParam    : longint;
                             _wTiDK    : word);
//******************************************************************************
#doc
возможность НЗ иметь более одной позиции спецификации
#end
function CheckLimitSpec(pDoc  : comp;
                        pTiDk : word) : boolean;
//******************************************************************************
#doc
возвращает способ отгрузки и т.п. из документа
#end
procedure GetDocInfoOtgr(pDoc      : comp;
                         pTiDk     : word;
                     var pShipment : comp;
                     var pTipOtgr  : comp;
                     var pWayMove  : comp;
                     var pFilialNo : longint
                        );
//******************************************************************************
#doc
обнуление ссылок на данную позицию спецификации в других записях спецификаций
#end
procedure SpDocs_ClearUsed(pNRec : comp; pTiDk : word);
//******************************************************************************
#doc
проверяет, есть ли записи сформированные по данному SpDocs
#end
function SpDocs_isInUse(pNRec : comp) : boolean;
//******************************************************************************
#doc
требуется ли выполнять контроль количества
#end
function SpDocs_isInUseStatus(pInUseStat : longint) : boolean;
//******************************************************************************
#doc
Возвращает статус спецификации 0 - обязательная, 1 - рекомендательная.
Статус спецификации указывается в договоре и приложении к договору
и влияет на контроль количества в приложении и календарном плане
#end
function SpDocs_SpecStatusUp(pSpDocsUp : comp;
                             curTiDk   : word) : word;
//******************************************************************************
#doc
возвращает правильное значение для поля Empty
#end
function GetEmpty(Ost : double) : word;
//******************************************************************************
#doc
Требуется ли выполнять контроль количества по вышестоящей спецификации
#end
function SpDocs_isUseControlKol(pSpDocsUp  : comp;
                                curTiDk    : word;
                                pInUseStat : longint) : boolean;
//******************************************************************************
#doc
возвращает следующий номер позиции спецификации
#end
function GetSpDocsCodeNext(pDoc  : comp;
                           pTiDk : word) : string;
//******************************************************************************
#doc
перенумерация спецификации документа
#end
function UpDateSpDocsCode(pDoc  : comp;
                          pTiDk : word) : word;
//******************************************************************************
#doc
возвращает количество позиций спецификации
пересчет количества по всем подчиненным спецификациям для данной позиции спецификации
#end
function SpDocs_RecalcOst(pSpDocs : comp; // NRec SpDocs-а, для которого пересчитывать
                      var kol     : double //-- суммарное количество по всем подчиненым спецификациям
                         ) : boolean;
//******************************************************************************
#doc
Для позиции спецификации модифицировать поле остаток в родительской спецификации
#end
function SpDocs_UpDate_UpDoc(pNRec  : comp; //-- NRec SpDocs-а, для которого модифицировать родителя
                         var retKol : double; //--(возвращаемый) текущее количество
                                               //-- если текущее количество превысит остаток в родителе,
                                               //-- то текущее количество станет равным остатку родителя и вернется здесь
                             pOtpEd : comp;
                             OkNew  : boolean
                            ) : word;
//******************************************************************************
#doc
Праверка количесва для позиции спецификации, если есть подчиненные документы
#end
function Ch_KolSpDocs(pNRec       : comp;   //-- NRec SpDocs-а, для которого модифицировать родителя
                  var retKol      : double; //--(возвращаемый) текущее количество
                                         //-- если текущее количество меньше количества в подчиненных
                                         //-- документах,то текущее количество будет восстановлено
                      cOtpEdSPDoc : comp
                     ) : boolean;
//******************************************************************************
#doc
формирование новой записи в SpDocs на основании другой записи
#end
function SpDocs_InsCurentFromUpDoc(pUpDoc            : comp;//-NReSpDocs-а из которого формировать
                                   pDoc              : comp;  //--NRec документа к которому привязать спецификацию
                                   curTiDk           : word;// тип документа к которому привязать спецификацию
                                   OkMaxKol          : boolean;//--true-в спецификацию вставлять максимально возможное количество
                                                    //--false - количество из myKol
                                   myKol             : double;    //-- количество
                                   pShipment         : comp; //-- ссылка на способ отгрузки
                                   pTipOtgr          : comp; //-- ссылка на базис отгрузки
                                   pWayMove          : comp;  //-- ссылка на способ транспортировки
                                   pFilialNo         : longint;
                                   pDirect           : word;
                                   NotWithOutOstatok : boolean//--true-в спецификацию не вставлять товар с Ostatok <= 0
                                  ) : word;
//******************************************************************************
#doc
проверка в спецификации документа сcылок на позицию МЦ для сопроводительных услуг
#end
procedure UpdateUpSpDocsRef(pDoc    : comp;
                            curTiDk : word);
//******************************************************************************
#doc
добавление МЦ/Усл из выбранных групп спецификации
#end
function SpDocs_InsFromMarkerInGr(pDoc              : comp;
                                  curTiDk           : word;
                                  IsSome            : boolean;
                                  pDirect           : word;
                                  NotWithOutOstatok : boolean) : word;
//******************************************************************************
#doc
добавление позиций в спецификацию документов из маркера
#end
function SpDocs_InsFromMarker(pDoc              : comp;
                              curTiDk           : word;
                              pDirect           : word;
                              NotWithOutOstatok : boolean) : word;
//******************************************************************************
#doc
удаление позиции спецификации документа с пересчетом кодов позиций
#end
function Delete_current_SpDocsEx(pNRec      : comp;
                                 isVis      : boolean;
                                 NeedReCode : boolean) : word;
//******************************************************************************
#doc
удаление позиции спецификации документа
#end
function Delete_current_SpDocs(pNRec : comp;
                               isVis : boolean) : word;
#doc
проверяет, есть ли записи сформированные по SpDocs документа
#end
function SpDocs_SomeIsInUse(pNRec : comp;
                            pTiDk : word) : boolean;
//******************************************************************************
#doc
удаление спецификации документа
#end
function SpDocs_Delete(nRecDoc : comp;
                       nTiDk   : word;
                       isVis   : boolean) : word;
//******************************************************************************
#doc
добавление позиции спецификации по буферу
#end
function Insert_current_SpDocs(var SpDocsPos : #TSpDocsP):word;
//******************************************************************************
#doc
модификация позиции спецификации по буферу
#end
function UpDate_current_SpDocs(var SpDocsPos : #TSpDocsP):word;
//******************************************************************************
#doc
возвращает цену и сумму для SpDocs
функция сделана из-за того что в SpDocs для наряд-заказов нет цены
и цену надо брать из позиций договора/ПКП, по которому сформировано
#end
function getSpDocsPrice(pSpDocs : comp;
                        pDoc    : comp;
                        pOtpEd  : comp;
                    var Prc     : double;
                    var Sum     : double;
                    var pVal    : comp;
                    var pGrNal  : comp) : boolean;
//******************************************************************************
#doc
установка в спецификации признака использования в автоматических расчетах
#end
function SpDocs_Set_InUseStatus(pDoc       : comp;
                                pTiDk      : word;
                                pInUseStat : longint) : word;
//******************************************************************************
#doc
обнуление ссылок на вышестоящие позиции
#end
function disconUpDocs(pDoc  : comp;
                      pTiDk : word) : word;
//******************************************************************************
#doc
добавление позиций в спецификацию из маркера
#end
function SpDocs_InsFromMarker1(pDoc        : comp;
                               curTiDk     : word; //-- документ в который
                               pDocSour    : comp;
                               curTiDkSour : word;  //-- документ из которого
                               pDirect     : word;
                               FromOwner   : boolean) : word;
//******************************************************************************
#doc
копирование замен
#end
procedure SpDocs_CopyZamen(pDocFrom : comp; //-- документ из которого
                           pDocTo   : comp    //-- документ в который
                           );
//******************************************************************************
#doc
наличие в спецификации замен
#end
function SpDocs_isHaveZam(pDoc : comp;
                          TiDk : word) : boolean;
//******************************************************************************
#doc
копирование позиции спецификации из одного документа в другой
#end
function MakeCopySpDocs(nRec_OldSpDocs,
                        cSpMc_SpDocs,
                        nRec_NewDog    : comp;
                        TiDk_Dog       : word;
                        SaveOstatok    : boolean) : comp;
#doc
копирование позиции спецификации из одного документа в другой
#end
function MakeCopySpDocsEx(nRec_OldSpDocs,
                          cSpMc_SpDocs,
                          nRec_NewDog    : comp;
                          TiDk_Dog       : word;
                          SaveOstatok,
                          IsCopy         : boolean) : comp;
//******************************************************************************
#doc
копирование спецификации из одного документа в другой
#end
procedure MakeCopySpDocsSpecifications(TiDk_Dog    : word;
                                       nRec_OldDog,
                                       nRec_NewDog : comp;
                                       SaveOstatok : boolean);
//******************************************************************************
#doc
копирование спецификации из одного документа в другой
#end
procedure MakeCopySpDocsSpecificationsEx(TiDk_Dog    : word;
                                         nRec_OldDog,
                                         nRec_NewDog : comp;
                                         SaveOstatok,
                                         IsCopy      : boolean);
//******************************************************************************
#doc
возвращает буфер текущей позиции спецификации
#end
function GetCurrentPosition  : #TSpDocs;
//******************************************************************************
#doc
возвращает буфер (с позицией) текущей позиции спецификации
#end
function GetCurrentPositionP : #TSpDocsP;
//******************************************************************************
#doc
функция пересчета сумм вышестоящих документов
#end
procedure ReCalcSumsUpDocs(nRecDog,
                           cValDog : comp;
                           dValDog : date;
                           dSumDog,
                           dSumNDS : double);
//******************************************************************************
#doc
подсчет сумм по спецификации договора
#end
function ReCalcSpecDogovor(pDogovor : comp; var sSpec : double; var sNal : double) : boolean;
//******************************************************************************
#doc
пересчет сумм по спецификации договора
#end
function ReCalcSummaDogovor(pDogovor : comp) : boolean;
//******************************************************************************
#doc
возвращает максимально допустимое количество, оставшееся для использования в позиции специфкации документа-основания
#end
procedure CheckSpDocsOstatokOnStep(pNote, cSpDocs_ : comp; Buf : TSpStep; var _KOL : double);
//******************************************************************************
#doc
возвращает максимально допустимое количество, оставшееся для использования в позиции специфкации сопроводительного документа
#end
procedure CheckSpDocsOstatokOnSopr(pNote, cSpDocs_ : comp; Buf : TSpSopr; var _KOL : double);
//******************************************************************************
#doc
функция получения даты для пересчетов сумм
#end
function GetTrueDateValCurse(dValC, dF, dInp : date) : date;
end;

VipInterface vipSpDocsV2 implements tSpDocsV2ObjInterface
#ifdef ATL51
licensed (FREE)
#end
;

#end //_SPDOCSV2_VIH_