//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 7.12 - Управление договорами
// Выбор документов из журнала хозопераций для формирования акта сверки по договору
//********************************************************************************

#include EditDoc.vih   // Обьектный интерфес - стрелочник вызовов интерфейсов редактирования
#include PickDoc.vih
#include PickDoc.tbl

#doc
Интерфейс выбора документов из журнала хозопераций для формирования акта сверки по договору
#end
Interface GetSoprHoz 'Выберите документ' escclose, cyan, doaccept;

#include EditDoc.var   // Переменная типа VipInterface EditDoc
#include PickDoc.var

Function CheckForAppDog: boolean; Forward;

create view vwGetSoprHoz
var
  prmTiDkGal: word;
  prmDogovor: comp;
  pDogovor   : comp;
  prmSoprHoz: comp;
  prmTiDkSver: word;
  Node       : comp;

  rbFltDogovor: word;
  rbFltDogovorSave: word;
  cbFltDate: word;
  cbFltDateSave: word;
  dFlt1: Date;
  dFlt2: Date;
  dFlt1Save: Date;
  dFlt2Save: Date;
  s_SimvRub: string;

(
  ValutName,    // 1
  SoprHozSumma, // 2
  SoprHozDescr, // 3
  DogovorName,  // 4
  ModeDocDir    // 5
)
As select
  // 1
  if ( SoprHoz.KodValut = 0, s_SimvRub, KlVal.SimvolV ),
  // 2
  if ( SoprHoz.KodValut = 0, SoprHoz.Summa, SoprHoz.SumValut ),
  // 3
  SoprHoz.DesGr+'/'+SoprHoz.Descr,
  // 4
  if ( prmDogovor = 0, '', '№ '+Dogovor.NoDoc+' от '+DateToStr(Dogovor.dDoc, 'DD/MM/YYYY')),
  // 5
  if((SoprHoz.TiDkGal = 10) or (SoprHoz.TiDkGal = 21) or (SoprHoz.TiDkGal = 22),
    if((PlPor.ModeDoc and 1024) <> 0, 'продажа',
      if((PlPor.ModeDoc and 2048) <> 0, 'закупка',
        if((PlPor.ModeDoc and 4096) <> 0, 'не определено', '!? ошибка !?'))), '')
from
  KatD
, SoprHoz
, KlVal
, Dogovor
, IerDog
, PlPor
where
((
  Node             == KatD.cNode      AND
  KatD.wCode       == SoprHoz.TiDkGal AND
  SoprHoz.KodValut == KlVal.nRec      AND
  SoprHoz.cSoprDoc == PlPor.nRec      AND
  prmDogovor       == Dogovor.nRec
)) AND
  (( KatD.wCode <> 14 ) AND ( KatD.wCode <> 777 ))
bounds byDogovor = KatD.wCode   == SoprHoz.TiDkGal AND
                   prmDogovor   == SoprHoz.cDogovor
condition byAppDogovor = CheckForAppDog
bounds byDateInterval = dFlt1Save  <<= SoprHoz.DatOb   AND
                        dFlt2Save  >>= SoprHoz.DatOb
;

Parameters
  prmTiDkGal,
  prmTiDkSver,
  pDogovor,
  prmSoprHoz
;

Function CheckForAppDog: boolean;
{
  CheckForAppDog := RecordExists IerDog
                          where (( pDogovor  == IerDog.cUpRec AND
                         SoprHoz.cAppDogovor == IerDog.cRec )) = tsOk;
}

Procedure ASV_PLAT_OUT;
{
  iPickDoc.AddDoc(1);
  iPickDoc.AddDoc(8);
  iPickDoc.AddDoc(9);
  iPickDoc.AddDoc(10);
  iPickDoc.AddDoc(11);
  iPickDoc.AddDoc(18);
  iPickDoc.AddDoc(21);
  iPickDoc.AddDoc(22);
  iPickDoc.AddDoc(31);
  iPickDoc.AddDoc(70);
  iPickDoc.AddDoc(81);
  iPickDoc.AddDoc(83);
  iPickDoc.AddDoc(85);
  iPickDoc.AddDoc(87);
  iPickDoc.AddDoc(90);
  iPickDoc.AddDoc(92);
  iPickDoc.AddDoc(1032);
  iPickDoc.AddDoc(1044);
}

Procedure ASV_PLAT_IN;
{
  iPickDoc.AddDoc(2);
  iPickDoc.AddDoc(3);
  iPickDoc.AddDoc(4);
  iPickDoc.AddDoc(5);
  iPickDoc.AddDoc(6);
  iPickDoc.AddDoc(7);
  iPickDoc.AddDoc(10);
  iPickDoc.AddDoc(17);
  iPickDoc.AddDoc(21);
  iPickDoc.AddDoc(22);
  iPickDoc.AddDoc(32);
  iPickDoc.AddDoc(33);
  iPickDoc.AddDoc(44);
  iPickDoc.AddDoc(70);
  iPickDoc.AddDoc(82);
  iPickDoc.AddDoc(84);
  iPickDoc.AddDoc(86);
  iPickDoc.AddDoc(88);
  iPickDoc.AddDoc(91);
  iPickDoc.AddDoc(1011);
}

Procedure ASV_MC_OUT;
{
  iPickDoc.AddDoc(201);
  iPickDoc.AddDoc(202);
  iPickDoc.AddDoc(203);
  iPickDoc.AddDoc(206);
  iPickDoc.AddDoc(211);
  iPickDoc.AddDoc(110);
  iPickDoc.AddDoc(557);
}

Procedure ASV_MC_IN;
{
  iPickDoc.AddDoc(101);
  iPickDoc.AddDoc(102);
  iPickDoc.AddDoc(103);
  iPickDoc.AddDoc(106);
  iPickDoc.AddDoc(108);
  iPickDoc.AddDoc(111);
  iPickDoc.AddDoc(110);
  iPickDoc.AddDoc(553);
}

Procedure ASV_DO_OUT;
{
  iPickDoc.AddDoc(51);
  iPickDoc.AddDoc(52);
}

Procedure ASV_DO_IN;
{
  iPickDoc.AddDoc(41);
  iPickDoc.AddDoc(42);
}

Procedure ADD_FOR_CHECKS;
{
  iPickDoc.AddDoc(403);
  iPickDoc.AddDoc(440);
  iPickDoc.AddDoc(441);
}

Procedure GoodDocuments;
{
  ASV_PLAT_OUT;
  ASV_PLAT_IN;
  ASV_MC_OUT;
  ASV_MC_IN;
  ASV_DO_OUT;
  ASV_DO_IN;
  ADD_FOR_CHECKS;
}

Procedure ApplyFilter;
{
  if ((rbFltDogovor = 1) AND (rbFltDogovorSave = 0))
  {
    if ConditionActiveInLeave(tcbyAppDogovor, tnSoprHoz)
      PopConditionForLeave(tcbyAppDogovor, tnSoprHoz);
    PopBounds(tbByDogovor);
  }
  else
    if ((rbFltDogovor = 0) AND (rbFltDogovorSave = 1))
    {
      PushBounds(tbByDogovor);
      if (prmDogovor <> pDogovor)
        PushConditionForLeave(tcbyAppDogovor, tnSoprHoz);
    }
  rbFltDogovorSave := rbFltDogovor;
  if (cbFltDate = 1)
  {
    dFlt1Save := dFlt1;
    dFlt2Save := dFlt2;
  }
  if ((cbFltDate = 1) AND (cbFltDateSave = 0)) AddBounds(tbByDateInterval);
  else
  if ((cbFltDate = 0) AND (cbFltDateSave = 1)) SubBounds(tbByDateInterval);
  cbFltDateSave := cbFltDate;
}

#doc
Окно установки фильтров
#end
window winFilter 'Установка фильтра' escclose, gray, doaccept;
  Show at (, , 64, 6);
panel panFilter;
screen scFilter ('Установка фильтра', hcDogDocFiltr, sci1EnEsc);
fields
  rbFltDogovor ('Фильтр по конкретному договору/всем договорам', , sci1EnEsc): noprotect;
  DogovorName  : skip;
  cbFltDate    ('Включить/выключить фильтр по интервалу дат', , sci1EnEsc): noprotect;
  dFlt1        ('Нижняя граница интервала для фильтра', , sci1EnEsc): noprotect;
  dFlt2        ('Верхняя граница интервала для фильтра', , sci1EnEsc): noprotect;
<<

  (.) по договору       ` .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  (.) по всем договорам `

  [.] в интервале дат с ` .@@@@@@@@@@@ по .@@@@@@@@@@@

>>
end; // screen
HandleEvent
  cmCheckField:
    case ( CurField ) of
      #cbFltDate:
        {
          SetFieldSelectable(#dFlt1, cbFltDate <> 0);
          SetFieldSelectable(#dFlt2, cbFltDate <> 0);
        }
    end;
end;
end; // panel

HandleEvent
cmInit:
  {
    rbFltDogovor := rbFltDogovorSave;
    cbFltDate    := cbFltDateSave;

    dFlt1 := dFlt1Save;
    dFlt2 := dFlt2Save;

    SetFieldSelectable(#rbFltDogovor, prmDogovor <> 0);

    SetFieldSelectable(#dFlt1, cbFltDate <> 0);
    SetFieldSelectable(#dFlt2, cbFltDate <> 0);
  }
end;

end; /// window

panel panKatD;
table KatD;

#ifdef ComponentVersion
ToolBar
    F_Common::tbBuhFilter
  , F_BuhRep::tbTreeControl
;
#else
ToolBar
    tbBuhFilter
  , tbTreeControl
;
#end

tree trKatD 'Дерево' ('Выберите документ', hcDogDocSel);
show at (, , , 7);
fields
  KatD.Name  'Тип документов' ('Тип документов', , sci1EscTree): [70], protect;
  KatD.wCode 'Код' ('Код типа документов', , sci1EscTree): [5], protect;
end; // tree

HandleEvent
  cmTreeTop      : Node := 0;
  cmTreeUp       : Node := KatD.cNode;
  cmTreeDown     : Node := KatD.nRec;
  cmTreeNeedOwner: TreeJumpToRecord(trKatD, KatD.cNode);
  cmTreeNodeType: if KatD.IsLeaf TreeSetNodeType(trKatD, 2);
end;
end; // panel

panel panSoprHoz;
table soprhoz;
browse brSoprHoz02 ('Выберите документ', hcDogDocSel, sci14EnEsc);
show at (, 8, , );
fields
  SoprHozDescr    #3'Дескр' ('Группа/дескриптор пользователя'): [5], protect, Centered, NoAutoSize;
  SoprHoz.DatOb   #3'Дата' ('Дата документа'): [10, 'DD/MM/YYYY'], protect, Centered, NoAutoSize;
  SoprHoz.NoDoc   #3'Номер' ('Номер документа'): [10], protect, NoAutoSize;
  SoprHoz.NameSHO #3'Содержание документа' ('Содержание документа'): [20], protect;
  ModeDocDir      #3'Направление': [11], protect, Centered, NoAutoSize;
  SoprHozSumma    #3'Сумма по документу' ('Сумма по документу'): [18, 2], protect, NoAutoSize;
  ValutName       #3'Вал' ('Денежная единица'): [3], protect, NoAutoSize, Centered;
end;  // Browse
HandleEvent
cmEdit:
  if ( CurTable = #soprhoz )
    {
      iEditDoc.RunEditHozDoc(coSoprHoz, SoprHoz.TiDkGal, SoprHoz.TipDoc, SoprHoz.cSoprDoc);
      RescanPanel(#SoprHoz);
    }
end; // HandleEvent
end; // panel

HandleEvent

cmInit:
{
  s_SimvRub := sGetTune('NDE.SimvRub');
  Node := 0;

  RunInterface('CheckKatDoc', word(3)); // 3 - с проверкой версии,  с выдачей сообщений

  iPickDoc.Clear;
  if ( prmTiDkGal <> 0 )
    iPickDoc.AddDoc(prmTiDkGal);
  else
    case ( prmTiDkSver ) of
      11: ASV_MC_OUT;
      12: ASV_DO_OUT;
      13: ASV_PLAT_OUT;
      21: ASV_MC_IN;
      22: ASV_DO_IN;
      23: ASV_PLAT_IN;
      else GoodDocuments;
    end;

  if ( pDogovor <> 0 )
    {
      if (GetFirst IerDog where (( pDogovor == IerDog.cRec )) = tsOk)
        prmDogovor := IerDog.cDogovor;
      PushBounds(tbByDogovor);
      if (prmDogovor <> pDogovor)
        PushConditionForLeave(tcbyAppDogovor, tnSoprHoz);
    }
  else
    {
      rbFltDogovorSave := 1;
      prmDogovor := pDogovor; // т.е. 0
    }
// т.о. pDogovor - ссылка на сам документ (договор или соглашение),
// а prmDogovor - ссылка на договор.
}

cmDefault:
  prmSoprHoz := SoprHoz.nRec;

cmFilterSave:
  if ( RunWindowModal(winFilter) <> cmCancel )
    {
      ApplyFilter;
      if GetFirst SoprHoz <> tsOk {};
      RereadRecord;
    }

cmShowAll: // Раскрыть все ветки
{
  var sav_NRec: comp;
  sav_NRec := KatD.NRec;

  StartNewVisual(vtRotateVisual, vfTimer, ''#3'Раскрытие всех веток...'#13#3, 1);
  if TreeGetFirst(trKatD)
    do
      {
        NextVisual;
        TreeOpenNode(trKatD);
      }
    While TreeGetNext(trKatD);
  StopVisual('', 0);

  TreeJumpToRecord(trKatD, sav_NRec);
  RescanPanel(#KatD);
}

cmHideAll: // Свернуть все ветки
{
  var sav_NRec: comp;

  While (KatD.cNode <> 0)
    TreeJumpToRecord(trKatD, KatD.cNode);
  sav_NRec := KatD.NRec;

  StartNewVisual(vtRotateVisual, vfTimer, ''#3'Сворачивание всех веток...'#13#3, 1);
  if (TreeGetFirst(trKatD))
    do
      {
        NextVisual;
        TreeCloseNode(trKatD);
      }
    While TreeGetNext(trKatD);
  StopVisual('', 0);

  TreeJumpToRecord (trKatD, sav_NRec);
  RescanPanel(#KatD);
}

cmHotKeys:
  PutHotCommand(RunMenu('mnuGetSoprHoz'));

end;

End. // Interface

#doc
Локальное меню главного окна интерфейса <link Interface L_Dogovor::GetSoprHoz>L_Dogovor::GetSoprHoz - Выбор документа из журнала хозопераций для формирования акта сверки по договору</link>
#end
mnuGetSoprHoz Menu
{
- 'Установка фильтров', cmFilterSave, 'Установить/снять фильтр', , 'Alt+B', kbAltB, sci1Esc;
-----------;
- 'Раскрыть все ветки', cmShowAll, 'Разворачивает все дерево документов', , 'Ctrl+''+''', kbCtrlGrayPlus, sci1Esc;
- 'Свернуть все ветки', cmHideAll, 'Сворачивает все дерево документов', , 'Ctrl+''-''', kbCtrlGrayMinus, sci1Esc;
}
