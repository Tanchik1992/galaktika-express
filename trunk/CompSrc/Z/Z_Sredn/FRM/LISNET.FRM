!******************************************************************************
!                                                      (с) корпорация Галактика
! Галактика 8.1 - Заработная плата
! Отчеты для "Контроль заболеваемости"
!******************************************************************************

#doc
Контроль по заболеваемости
#end
.form lisnet
.uniqueconsts
!.set name='lisnet'
.p 60
!.hide

.var
! Строка с символами-отступа для заголовков группировки
  TableHeaderIndent: string;
! Строка с символами-отступа для подписи итогов группировки
  TableTotalIndent: string;
! Количество симоволов в одном уровне отступа для заголовков группировки
! Для rtf-формы используются табы, поэтому там этот параметр не учитывается
  indentCount:  word;

  TotalString: string;

  Дата_начала_больничного_стр: string;
  Дата_окончания_больничного_стр: string;

.endvar
!
! Инициализация
.begin
  indentCount := 4; // длина отступа для одного уровня иерархии
end.

! {----------------- Заголовок с перечнем установленных фильтров
.fields
  XarName
.endfields
 ^
.{ FormHeaderPrint
.fields
  ZagText1 ZagText2
.endfields
 ^ ^
.}
! }----------------- Заголовок с перечнем установленных фильтров

.fields
  VidHeader: word
.endfields
 ^

.{// MainCycle
.{ TableHeader CHECKENTER // ProcessEntity - Печать заголовков иерархических таблиц
.fields
  Depth: integer          // Глубина иерархии
  ProcessEntityString1    // Строка с текстом заголовка иерархии
  ProcessEntityString2
.endfields

 ^ ^ ^
.} // TableHeader

.{ DataCycle CHECKENTER
.fields
  Npp
  Табельный_номер
  ФИО

  Сумма_ФСС: double
  Сумма_дополнительная: double
  Сумма_превышения: double
  Сумма_общая: double

  Data1:date
  Data2:date

  Дней_рабочих
  Дней_рабочих_с_начала_года
  Дней_календарных
  Дней_календарных_с_начала_года

  Номер_больничного

  Nrec_Lschet
  Nrec_Persons
  Nrec_BLISNET

  ФИО_родственника
  День_рождения_родственника_стр
  Возраст_родственника
  Возраст_родственника_стр
  Наименование_заболевания
.endfields
 ^ ^ ^ ^ ^
 ^ ^ ^ ^ ^
 ^ ^ ^ ^ ^
 ^ ^ ^ ^ ^
 ^ ^

! Дополнительные поля для отчета "Учет остатка оплачиваемых дней больничного по уходу за родственниками" {
.{ ChildrenControl CHECKENTER
! Простите за уродливую топологию, но "специфическая" распечатка которую затребовали
! ни к какой красоте не располагает
.fields
  Период_С_ПО
  Возраст_родственника_на_конец_периода_кусочка
  Дней_оплаченных_по_уходу_Первая_строка
  Дней_оплаченных_по_уходу_с_начала_года_Первая_строка
  Календарных_дней_Первая_строка
.endfields
 ^ ^ ^ ^ ^// еще 4 штуки
.{ ShowSplited_BLISTNET CHECKENTER // раздельный показ больничного по годам для контроля остатка оплачиваемых дней по уходу за
.fields
  Период_С_ПО_Цикл_по_кусочкам
  Возраст_родственника_на_конец_периода_Цикл_по_кусочкам
  Дней_оплаченных_по_уходу_Цикл_по_кусочкам
  Дней_оплаченных_по_уходу_с_начала_года_для_кусочка_Цикл_по_кусочкам
  Календарных_дней_Цикл_по_кусочкам
.endfields
 ^ ^ ^ ^ ^
.}
.}
! } дополнительные поля

.} // DataCycle

.{ ProcessTotal CHECKENTER
.fields
  Depth_Total: integer // Глубина иерархии
  ProcessTotalString1  // Строка с подписью итога
  ProcessTotalString2
.endfields
^ ^ ^

!  ИТОГО ПО РЕЕСТРУ :
.fields
  Итого_Сумма_ФСС: double
  Итого_Сумма_дополнительная: double
  Итого_Сумма_превышения: double
  Итого_Сумма_общая: double

  Итого_Дней_рабочих: double
  Итого_Дней_календарных: double

.endfields
  ^ ^ ^ ^ ^ ^  // 8 штук

.{ Totals_forChildrenControl CHECKENTER
.fields
  Итого_Дней_оплаченных_по_уходу               // Оплачиваемые дни с учетом ограничений
// Не имеют смысла такие итоги
.endfields
  ^
.}
.} // ProcessTotal

.} // MainCycle
.endform


 Ш!--------------------------------------------------------------------------------
!================================================================================
!--------------------------------------------------------------------------------
.linkform 'lisnet_01' prototype is 'lisnet'
.group'common_report'
.nameinlist 'Полная форма отчета'
.p 60
.defo landscape
.fields
CommonFormHeader
.endfields
      ^

! {----------------- Заголовок с перечнем установленных фильтров
.fields
 XarName
.endfields
                                                                               БКонтроль заболеваемости Б
           БПредприятие ^ Б

.{ lisnet_FormHeaderPrint
.fields
 ZagText1 ZagText2
.endfields
             Б^ ^ Б
.}
! }----------------- Заголовок с перечнем установленных фильтров

.{ //lisnet_MainCycle CHECKENTER//lisnet_MainCycle
.{ lisnet_TableHeader CHECKENTER // ProcessEntity - Печать заголовков иерархических таблиц
.begin
  TableHeaderIndent := '';
  TableHeaderIndent := PadCh(TableHeaderIndent, ' ', Depth * indentCount); // отступ строки-заголока иерархии
end.
.fields
  TableHeaderIndent     // отступ
  ProcessEntityString1  // строка с заголовком
  ProcessEntityString2
.endfields
        ^^^
.} // lisnet_TableHeader
! { Шапка таблицы
.{?internal;(VidHeader=1);
.[h OverWrite
        ─────┬────────────┬────────────────────────────┬───────────────┬──────────────┬────────────┬──────────────┬──────────┬──────────┬───────────┬───────┬────────────┬──────────
         N - │ Табельный  │    Фамилия И.О.            │ Сумма за счет │   Сумма за   │ Превышение │    Общая     │Дата нача-│   Дата   │Кол-во дней│Календ.│Календ. дней│ Номер
         п/п │   номер    │                            │  предприятия  │   счет ФСС   │            │    сумма     │ла нетруд.│ окончания│ по болезни│ дней  │с нач. года*│больничного
        ─────┼────────────┼────────────────────────────┼───────────────┼──────────────┼────────────┼──────────────┼──────────┼──────────┼───────────┼───────┼────────────┼──────────
.]h
.}
.{?internal;(VidHeader=2);
.[h OverWrite
        ─────┬────────────┬────────────────────────────┬───────────────┬──────────────┬────────────┬──────────────┬──────────┬──────────┬───────────┬───────┬────────────┬──────────
         N - │ Табельный  │    Фамилия И.О.            │    Основная   │     Доп.     │ Превышение │    Общая     │Дата нача-│   Дата   │Кол-во дней│Календ.│Календ. дней│ Номер
         п/п │   номер    │                            │     сумма     │    сумма     │            │    сумма     │ла нетруд.│ окончания│ по болезни│ дней  │с нач. года*│больничного
        ─────┼────────────┼────────────────────────────┼───────────────┼──────────────┼────────────┼──────────────┼──────────┼──────────┼───────────┼───────┼────────────┼──────────
.]h
.} // internal'y
! } Шапка таблицы
.{ lisnet_DataCycle CHECKENTER
.begin
  Дата_начала_больничного_стр := datetostr(Data1,'DD/MM/YYYY');
  Дата_окончания_больничного_стр := datetostr(Data2,'DD/MM/YYYY');
end.
.fields
  Npp
  Табельный_номер
  GetSurnameWithInitials(ФИО)
  DoubleToStr(Сумма_ФСС, '[|-]36''666''666''666''666.88')
  DoubleToStr(Сумма_дополнительная, '[|-]36''666''666''666''666.88')
  DoubleToStr(Сумма_превышения, '[|-]36''666''666''666''666.88')
  DoubleToStr(Сумма_общая, '[|-]36''666''666''666''666.88')
  Дата_начала_больничного_стр
  Дата_окончания_больничного_стр
  Дней_рабочих
  Дней_календарных
  Дней_календарных_с_начала_года
  Номер_больничного
.endfields
         &&&&│@@@@@@@@@@@@│@@@@@@@@@@@@@@@@@@@@@@@@@@@@│&'&&&&&&&&&&&&&│&'&&&&&&&&&&&&│&'&&&&&&&&&&│&'&&&&&&&&&&&&│@@@@@@@@@@│@@@@@@@@@@│&&&&&&&&&&&│&&&&&&&│&&&&&&&&&&&&│@@@@@@@@@@@
!Сие есть цикл с дополнительными полями для НЕэтого отчета
!Так что курим в нем..
.{ lisnet_ChildrenControl CHECKENTER
.{ lisnet_ShowSplited_BLISTNET CHECKENTER
.}
.}
.} // lisnet_DataCycle CHECKENTER 14 штук
        ─────┴────────────┴────────────────────────────┴───────────────┴──────────────┴────────────┴──────────────┴──────────┴──────────┴───────────┴───────┴────────────┴──────────
.{ lisnet_ProcessTotal CHECKENTER
.begin

  TableTotalIndent  := '';

  if (Depth_Total <> 0)
    TableTotalIndent := PadCh(TableTotalIndent, ' ', Depth_Total * indentCount); // отступ строки-заголока иерархии
  else
  {
    TableTotalIndent := '';
    ProcessTotalString1 := 'ИТОГО ПО РЕЕСТРУ:';
    ProcessTotalString2 := '';
  }
end.
.begin
  TotalString := TableTotalIndent + ProcessTotalString1 + ProcessTotalString2;
end.
.fields
  TotalString:'t:-'
  DoubleToStr(Итого_Сумма_ФСС, '[|-]36''666''666''666''666.88')
  DoubleToStr(Итого_Сумма_дополнительная, '[|-]36''666''666''666''666.88')
  DoubleToStr(Итого_Сумма_превышения, '[|-]36''666''666''666''666.88')
  DoubleToStr(Итого_Сумма_общая, '[|-]36''666''666''666''666.88')
  Итого_Дней_рабочих
  Итого_Дней_календарных
!  Итого_Дней_календарных_с_начала_года
.endfields
        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    Г&'&&&&&&&&&&&&& &'&&&&&&&&&&&& &'&&&&&&&&&& &'&&&&&&&&&&&&                       &&&&&&&&&&& &&&&&&&  Г
.{ lisnet_Totals_forChildrenControl CHECKENTER
.}
.} // lisnet_ProcessTotal

.} //lisnet_MainCycle
 *Календарные дни с начала года не считаются для вида пособия "декретный отпуск"
.endform


!--------------------------------------------------------------------------------
!================================================================================
!--------------------------------------------------------------------------------
.linkform 'lisnet_01_konrol_child' prototype is 'lisnet'
.group 'child_kontrol'
.nameinlist 'Контроль больничных по уходу'
.p 60
.defo landscape
.fields
CommonFormHeader
.endfields
      ^

! {----------------- Заголовок с перечнем установленных фильтров
.fields
 XarName
.endfields
                                                                    БКонтроль заболеваемости Б
           БПредприятие ^ Б

.{ lisnet_FormHeaderPrint
.fields
 ZagText1 ZagText2
.endfields
             Б^ ^ Б
.}

             БУчет остатка оплачиваемых дней больничного
            по уходу за родственниками Б
! }----------------- Заголовок с перечнем установленных фильтров

.{ //lisnet_MainCycle CHECKENTER//lisnet_MainCycle
.{ lisnet_TableHeader CHECKENTER // ProcessEntity - Печать заголовков иерархических таблиц
.begin
  TableHeaderIndent := '';
  TableHeaderIndent := PadCh(TableHeaderIndent, ' ', Depth * indentCount); // отступ строки-заголока иерархии
end.
.fields
  TableHeaderIndent // отступ
  ProcessEntityString1         // строка с заголовком
  ProcessEntityString2
.endfields
        ^^^
.} // lisnet_TableHeader
! { Шапка таблицы
        ─────┬────────────┬──────────────────────────┬──────────────────────────┬──────────┬──────────┬──────────────────────┬──────────┬──────────┬────────┬────────┬─────────────┬──────────
         N - │ Табельный  │    Фамилия И.О.          │    Фамилия И.О.          │Дата нача-│   Дата   │        Период        │   Дата   │ Возраст  │  Дней  │  Дней  │Дней с начала│ Номер
         п/п │   номер    │                          │    родственника          │ла нетруд.│ окончания│                      │ рождения │ на конец │ кален- │ оплачи-│года до конца│больничного
             │            │                          │                          │          │          │    с           по    │ родствен.│ периода  │ дарных │ ваемых │   периода   │
        ─────┼────────────┼──────────────────────────┼──────────────────────────┼──────────┼──────────┼──────────────────────┼──────────┼──────────┼────────┼────────┼─────────────┼──────────
! } Шапка таблицы
.{ lisnet_DataCycle CHECKENTER
.{ lisnet_ChildrenControl CHECKENTER // Дополнительные поля для отчета "Контроль остатка оплачиваемых дней"
.begin
  Дата_начала_больничного_стр := datetostr(Data1,'DD/MM/YYYY');
  Дата_окончания_больничного_стр := datetostr(Data2,'DD/MM/YYYY');
end.
.fields
  Npp
  Табельный_номер
  GetSurnameWithInitials(ФИО)
  GetSurnameWithInitials(ФИО_родственника)
  Дата_начала_больничного_стр
  Дата_окончания_больничного_стр
  Период_С_ПО
  День_рождения_родственника_стр
  Возраст_родственника_на_конец_периода_кусочка
  Календарных_дней_Первая_строка
  Дней_оплаченных_по_уходу_Первая_строка
  Дней_оплаченных_по_уходу_с_начала_года_Первая_строка // еще 4 штуки
  Номер_больничного
.endfields
         &&&&│@@@@@@@@@@@@│@@@@@@@@@@@@@@@@@@@@@@@@@@│@@@@@@@@@@@@@@@@@@@@@@@@@@│@@@@@@@@@@│@@@@@@@@@@│@@@@@@@@@@@@@@@@@@@@@@│@@@@@@@@@@│&&&&&&&&&&│&&&&&&&&│&&&&&&&&│&&&&&&&&&&&&&│@@@@@@@@@@@
.{ lisnet_ShowSplited_BLISTNET CHECKENTER // раздельный показ больничного по годам для контроля остатка оплачиваемых дней по уходу за
.fields
  Период_С_ПО_Цикл_по_кусочкам
  Возраст_родственника_на_конец_периода_Цикл_по_кусочкам
  Календарных_дней_Цикл_по_кусочкам
  Дней_оплаченных_по_уходу_Цикл_по_кусочкам
  Дней_оплаченных_по_уходу_с_начала_года_для_кусочка_Цикл_по_кусочкам
.endfields
             │            │                          │                          │          │          │@@@@@@@@@@@@@@@@@@@@@@│          │&&&&&&&&&&│&&&&&&&&│&&&&&&&&│&&&&&&&&&&&&&│
.} // lisnet_ShowSplited_BLISTNET CHECKENTER
.} // lisnet_ChildrenControl CHECKENTER
.} // lisnet_DataCycle CHECKENTER 14 штук
        ─────┴────────────┴──────────────────────────┴──────────────────────────┴──────────┴──────────┴──────────────────────┴──────────┴──────────┴────────┴────────┴─────────────┴───────────
.{ lisnet_ProcessTotal CHECKENTER
.begin
  TableTotalIndent  := '';
  if (Depth_Total <> 0)
    TableTotalIndent := PadCh(TableTotalIndent, ' ', Depth_Total * indentCount); // отступ строки-заголока иерархии
  else
  {
    TableTotalIndent := '';
    ProcessTotalString1 := 'ИТОГО ПО РЕЕСТРУ:';
    ProcessTotalString2 := '';
  }
end.
.begin
  TotalString := TableTotalIndent + ProcessTotalString1 + ProcessTotalString2;
end.
.fields
  TotalString:'t:-'
.endfields
.{ lisnet_Totals_forChildrenControl CHECKENTER
.fields
  Итого_Дней_календарных
  Итого_Дней_оплаченных_по_уходу // Оплачиваемые дни с учетом ограничений
.endfields
        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                              Г&&&&&&& &&&&&&&&  Г
.} // Totals_forChildrenControl CHECKENTER
.} // lisnet_ProcessTotal

.} // lisnet_MainCycle Ш
.endform
