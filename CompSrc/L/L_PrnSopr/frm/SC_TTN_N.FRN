#doc
ТTH (навальная)
#end
.linkform 'TTN_SHT_CE' prototype is 'tovn'
.NameInList 'ТTH (навальная)'
.group 'ТТН навал'
!.group 'Накладные на продажу'
.var
Cur_Iter       : word;
Gruz_Name   : array [1..5] of string;
Gruz_Ed     : array [1..5] of string;
Gruz_Kol    : array [1..5] of double;
Gruz_Price  : array [1..5] of double;
Gruz_Summa  : array [1..5] of double;
Gruz_BegP   : array [1..5] of string;
Gruz_EndP   : array [1..5] of string;
Gruz_Pribyt : array [1..5] of string;
Gruz_BegR   : array [1..5] of string;
Gruz_EndR   : array [1..5] of string;
Gruz_AllSum    : double;
Gruz_AllBrutto : double;
Gruz_AllTara   : double;
Gruz_AllKol    : double;

  countTimePogr,countTimeRazgr,
  TimePogr,TimeRazgr,
  NormativPogr,NormativRazgr,
  tekValue          : longint

  strTimePogr,
  strProstoy1,
  strTimeRazgr,
  strProstoy2        : string
  СтНацСН  : double
.endvar
#include format.frn
! возращает время погрузки/разгрузки в минутах
.procedure GetGruzCountTime( _bd : date ;
                             _bt : time ;
                             _ed : date ;
                             _et : time ;
                             var result_GetGruzCountTime : longint);
begin
  if( (_bd = _ed) or (_bd = date(0,0,0)) or (_ed = date(0,0,0)) )
    {
    if (_et > _bt)
      result_GetGruzCountTime := Longint((60*Hour(Sub_Time(_et,_bt)))+Minute(Sub_Time(_et,_bt)));
!      result_GetGruzCountTime := Longint(Round(To_Sec100(Sub_Time(_et,_bt)) / 6000) ) ;
    else
      result_GetGruzCountTime := Longint(0);
    }
  else
    result_GetGruzCountTime := Longint(Round(_SubDateTime( _DateTime1( _ed , _et ) ,
                                                           _DateTime1( _bd , _bt ) ) / 6000) ) ;
end.
! возращает строку времени в формате 'HHHH:MM'
.procedure GetTimeString(_minute:longint;var result_GetTimeString:string);
begin
  result_GetTimeString := LpadCh(DoubleToStr(trunc(_minute/60),'6666666'),'0',2)
                         +':'
                         +LpadCh(DoubleToStr((_minute-(60*trunc(_minute/60))),'6666666'),'0',2) ;
end.
.fields
Основание
Грузоотправитель Грузоотправитель
Грузоотправитель_ТЕЛ
Номер Номер
DateToStr(Дата,'DD mon YYYY г.')
DateToStr(Дата,'DD mon YYYY г.')
!'"'+string(ДатаДень)+'" '+ string(ДатаМесяц)+' '+string(ДатаГод)
!'"'+string(ДатаДень)+'" '+ string(ДатаМесяц)+' '+string(ДатаГод)
Получатель ТТН_АвтоОрг_Имя  Получатель
Грузополучатель ' '+ТТН_ПЛист_Номер
Substr(''+ТТН_Маршрут_Код+'/'+DoubleToStr(if(ТТН_ПунктР_Расст_Маршрут<>0,
                                             ТТН_ПунктР_Расст_Маршрут,
                                            (ТТН_ПунктР_Расст-ТТН_ПунктП_Расст)),'66666666.8'),1,16)
Грузополучатель
ТТН_ПунктП_Имя+' '+ТТН_ПунктП_СТРАНА_ИМЯ+' '+ТТН_ПунктП_ГОРОД_ИМЯ+' '+ТТН_ПунктП_Адрес
ТТН_Водитель_Имя ТТН_ПунктП_Имя
ТТН_ПунктР_Имя+' '+ТТН_ПунктР_СТРАНА_ИМЯ+' '+ТТН_ПунктР_ГОРОД_ИМЯ+' '+ТТН_ПунктР_Адрес
ТТН_Авто_Марка ''+ТТН_Авто_НомерГараж+'' ТТН_ПунктР_Имя
''+ТТН_Авто_Номер+'' ''+ТТН_Прицеп1_Номер+''

ТТН_АвтоОрг_Имя
''+ТТН_ПЛист_Номер+''
Substr(''+ТТН_Маршрут_Код+'/'+DoubleToStr(if(ТТН_ПунктР_Расст_Маршрут<>0,
                                             ТТН_ПунктР_Расст_Маршрут,
                                            (ТТН_ПунктР_Расст-ТТН_ПунктП_Расст)),'66666666.8'),1,18)
ТТН_Водитель_Имя
ТТН_ПунктП_Норматив_Погр  // норматив погрузки
ТТН_ПунктР_Норматив_Разгр // норматив разгрузки
!strNormativPogr
!strNormativRazgr
ТТН_Авто_Марка ''+ТТН_Авто_НомерГараж+''
''+ТТН_Авто_Номер+'' ''+ТТН_Прицеп1_Номер+''


Gruz_Name[1] Gruz_Ed[1] Gruz_Kol[1] Gruz_Price[1] Gruz_Summa[1] Gruz_BegP[1]
                                                                Gruz_EndP[1]
                      Gruz_Pribyt[1] Gruz_BegR[1]
                      Gruz_EndR[1] Gruz_Name[1]
Gruz_Name[2] Gruz_Ed[2] Gruz_Kol[2] Gruz_Price[2] Gruz_Summa[2] Gruz_BegP[2]
                                                                Gruz_EndP[2]
                      Gruz_Pribyt[2] Gruz_BegR[2]
                      Gruz_EndR[2] Gruz_Name[2]
Gruz_Name[3] Gruz_Ed[3] Gruz_Kol[3] Gruz_Price[3] Gruz_Summa[3] Gruz_BegP[3]
                                                                Gruz_EndP[3]
                      Gruz_Pribyt[3] Gruz_BegR[3]
                      Gruz_EndR[3] Gruz_Name[3]
Gruz_Name[4] Gruz_Ed[4] Gruz_Kol[4] Gruz_Price[4] Gruz_Summa[4] Gruz_BegP[4]
                                                                Gruz_EndP[4]
                      Gruz_Pribyt[4] Gruz_BegR[4]
                                     Gruz_EndR[4] Gruz_Name[4]
Gruz_Name[5] Gruz_Ed[5] Gruz_Kol[5] Gruz_Price[5] Gruz_Summa[5] Gruz_BegP[5]
                                                                Gruz_EndP[5]
                      Gruz_Pribyt[5] Gruz_BegR[5]
                                     Gruz_EndR[5] Gruz_Name[5]
DoubleToStr(Gruz_AllSum, Cena_PrR)
DoubleToStr(Gruz_AllBrutto, Massa_Pr) DoubleToStr(Gruz_AllTara, Massa_Pr)
strProstoy1 DoubleToStr(Gruz_AllKol, Kol_Pr)
DoubleToStr(Gruz_AllKol, Kol_Pr) DoubleToStr(Gruz_AllBrutto, Massa_Pr)
DoubleToStr(Gruz_AllTara, Massa_Pr)

НомерДовер

  strTimePogr       // время погрузки
  strProstoy1       // простой
  ТТН_ПунктР_Норматив_Разгр // норматив разгрузки
!  strNormativRazgr  // норматив разгрузки
!  strTimeRazgr      // время разгрузки
!  strProstoy2       // простой

if (ДатаДовер <> date(0,0,0), DateToStr(ДатаДовер,'DD mon YYYY г.'), '')
СпецСимвол
.endfields
.p 50
.defo landscape
.{
.Begin
  Cur_Iter := 1;
Gruz_AllSum := 0;
Gruz_AllBrutto := 0;
Gruz_AllTara  := 0;
Gruz_AllKol :=0

countTimePogr      := 0 ;
countTimeRazgr     := 0 ;
!countNormativPogr  := 0 ;
!countNormativRazgr := 0 ;
End.
.if tovn01
.end
.if tovn02
.end
.{
.Begin
  if (Cur_Iter <= 5)
  {
    Gruz_Name[Cur_Iter]   := Название;
    Gruz_Ed[Cur_Iter]     := ОтпЕд;
    Gruz_Kol[Cur_Iter]    := КолФ;
!    Gruz_Kol[Cur_Iter]    := КолОпл;
    Gruz_Price[Cur_Iter]  := ЦНацСН;
    СтНацСН  := Round(СтНацСН0,2);
    Gruz_Summa[Cur_Iter]  := СтНацСН;
    Gruz_BegP[Cur_Iter]   := ТТН_ПунктП_Время_С;
    Gruz_EndP[Cur_Iter]   := ТТН_ПунктП_Время_По;
    Gruz_Pribyt[Cur_Iter] := ТТН_ПунктР_Время_С;
    Gruz_BegR[Cur_Iter]   := '';
    Gruz_EndR[Cur_Iter]   := '';
    Gruz_AllSum := Gruz_AllSum + Gruz_Summa[Cur_Iter];
    Gruz_AllKol := Gruz_AllKol + Gruz_Kol[Cur_Iter];
    Gruz_AllBrutto := СпТтнЖд_ВесБрутто + СпТтнЖд_ВесНетто;
    Gruz_AllTara   := СпТтнЖд_ВесБрутто;

    // суммируем время погрузки (в минутах/double)
    GetGruzCountTime(СпТТН_ПунктП_Дата_С,
                     StrToTime(СпТТН_ПунктП_Время_С+':0:0','HH:MM:SS:SSS'),
                     СпТТН_ПунктП_Дата_По,
                     StrToTime(СпТТН_ПунктП_Время_По+':0:0','HH:MM:SS:SSS'),
                     tekValue) ;
    countTimePogr := countTimePogr + tekValue ;
    // суммируем время разгрузки (в минутах/double)
    GetGruzCountTime(СпТТН_ПунктР_Дата_С,
                     StrToTime(СпТТН_ПунктР_Время_С+':0:0','HH:MM:SS:SSS'),
                     СпТТН_ПунктР_Дата_По,
                     StrToTime(СпТТН_ПунктР_Время_По+':0:0','HH:MM:SS:SSS'),
                     tekValue) ;
    countTimeRazgr := countTimeRazgr + tekValue ;
!    // суммируем время норматива погрузки (в минутах/double)
!    countNormativPogr := countNormativPogr + Longint(trunc(To_Sec100(StrToTime(СпТТН_НормаПогрузки+':0:0','HH:MM:SS:SSS'))/6000) ) ;
!    // суммируем время норматива разгрузки (в минутах/double)
!    countNormativRazgr := countNormativRazgr + Longint(trunc(To_Sec100(StrToTime(СпТТН_НормаРазгрузки+':0:0','HH:MM:SS:SSS'))/6000) ) ;
  }
Cur_Iter := Cur_Iter + 1;
End.
.}
.Begin
  // время погрузки
  if ( (ТТН_ПунктП_Дата_С  <> ТТН_ПунктП_Дата_По ) or
       (ТТН_ПунктП_Время_С <> ТТН_ПунктП_Время_По) )
    GetGruzCountTime(ТТН_ПунктП_Дата_С,
                     StrToTime(ТТН_ПунктП_Время_С+':0:0','HH:MM:SS:SSS'),
                     ТТН_ПунктП_Дата_По,
                     StrToTime(ТТН_ПунктП_Время_По+':0:0','HH:MM:SS:SSS'),
                     TimePogr) ;
  else
    TimePogr := countTimePogr ;
  // время разгрузки
  if ( (ТТН_ПунктР_Дата_С  <> ТТН_ПунктР_Дата_По ) or
       (ТТН_ПунктР_Время_С <> ТТН_ПунктР_Время_По) )
    GetGruzCountTime(ТТН_ПунктР_Дата_С,
                     StrToTime(ТТН_ПунктР_Время_С+':0:0','HH:MM:SS:SSS'),
                     ТТН_ПунктР_Дата_По,
                     StrToTime(ТТН_ПунктР_Время_По+':0:0','HH:MM:SS:SSS'),
                     TimeRazgr) ;
  else
    TimeRazgr := countTimeRazgr ;
!------------- в отчет --------------
  // время погрузки
  GetTimeString(TimePogr,strTimePogr) ;

  // простой
  NormativPogr := Longint(trunc(To_Sec100(StrToTime(ТТН_ПунктП_Норматив_Погр+':0:0','HH:MM:SS:SSS'))/6000) );
  if( (TimePogr-NormativPogr) > 0)
    GetTimeString((TimePogr-NormativPogr),strProstoy1) ;
  else
    strProstoy1 := '00:00' ;

!  // норматив погрузки
!  GetTimeString(countNormativPogr,strNormativPogr)

!  // норматив разгрузки
!  GetTimeString(countNormativRazgr,strNormativRazgr)

  // время разгрузки
  GetTimeString(TimeRazgr,strTimeRazgr) ;

  // простой
  NormativRazgr := Longint(trunc(To_Sec100(StrToTime(ТТН_ПунктР_Норматив_Разгр+':0:0','HH:MM:SS:SSS'))/6000) );
  if( (TimeRazgr-NormativRazgr) > 0)
    GetTimeString((TimeRazgr-NormativRazgr),strProstoy2) ;
  else
    strProstoy2 := '00:00' ;
End.
.{ CHECKENTER TOVNUSL
.}
[5{ Ш                                                          Номер счета @@@@@@@@@@@@@@@ Ш
 Р    ┌──────────────────────────────────┬─────────────────┐                                                форма N1                           корешок к форме N1
    │1экз-Остается у грузоотправителя  │    К О Д Ы      │  БГрузоотправитель: Б
    │1экз-грузополучателю              ├──┬───┬───┬───┬──┤ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ┌───────────────────────────┐
    │1экз-С отм.грузополучателя и АТП  │0 │A  │   │   │  │                                                                                                 │1экз-Пропуск для охраны    │
    └──────────────────────────────────┴──┴───┴───┴───┴──┘ т. @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       БТалон экспедирования Б          │1экз-С отм.грузополуч.АТП  │
                                                                                                                              Бгруза к ТТН N Б @@@@@@@@@@@     │1экз-Оборотный для грузоотп│
     БТОВАРНО-ТРАНСПОРТНАЯ  НАКЛАДНАЯ N Б @@@@@@@@@@@@@   Бот Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                        Бот Б @@@@@@@@@@@@@@@@@@@@@@     └───────────────────────────┘

     БЗаказчик Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  БАТП Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       БЗаказчик Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
     БГрузополучатель Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  Бк путевому листу N Б @@@@@@@@@@@  БКод рейса Б @@@@@@@@@@@@@@@@       БГрузополучатель Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
     БПункт погрузки Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  БВодитель Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       БПункт погрузки Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
     БПункт разгрузки Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  БАвтомобиль Б @@@@@@@@@@@@@@@@@@@@@@  БГар.Nа/м Б @@@@@@@@@@@@@@       БПункт разгрузки Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
     БПереадресовка Б ___________________________________________  БГос.N а/м Б @@@@@@@@@@@@@@@@@@@@@@@  БПрицепа Б @@@@@@@@@@@@@@@       БПереадресовка Б ___________________________________________
                                                                                                                              БАТП Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                                         БТ О В А Р Н Ы Й  Р А З Д Е Л Б                                                          Бк путевому листу N Б @@@@@@@@@@  БКод рейса Б @@@@@@@@@@@@@@@@@@
    ┌─────────────────────────┬─────┬──────────┬────────────┬──────────────┬───────────────┬─────────┬────────────────┐       БВодитель Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    │                         │ Ед. │          │            │              │Погрузка(@@@@@)│ Прибыть │Разгрузка(@@@@@)│       БАвтомобиль Б@@@@@@@@@@@@@@@@@@@  БГар.Nа/м Б @@@@@@@@@@@@@@@@@@@
    │   Наименование груза    │ Изм │  Кол-во  │ Цена с НДС │    Сумма     ├───────┬───────┤   под   ├───────┬────────┤       БГос.N а/м Б @@@@@@@@@@@@@@@@@@@  БПрицепа Б @@@@@@@@@@@@@@@@@@@@
    │                         │     │          │            │              │  Нач  │  Кон  │разгрузку│  Нач  │  Кон   │
    ├─────────────────────────┼─────┼──────────┼────────────┼──────────────┼───────┼───────┼─────────┼───────┼────────┤
    │@@@@@@@@@@@@@@@@@@@@@@@@@│@@@@@│&&&&&&&&&&│&&&&&&&&&&&&│&&&&&&&&&&&&&&│ @@@@@ │ @@@@@ │  @@@@@  │ @@@@@ │ @@@@@  │       БНаименование груза Б @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.{?INTERNAL;(Gruz_Name[2]<>'')
    │@@@@@@@@@@@@@@@@@@@@@@@@@│@@@@@│&&&&&&&&&&│&&&&&&&&&&&&│&&&&&&&&&&&&&&│ @@@@@ │ @@@@@ │  @@@@@  │ @@@@@ │ @@@@@  │                         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.}
.{?INTERNAL;(Gruz_Name[3]<>'')
    │@@@@@@@@@@@@@@@@@@@@@@@@@│@@@@@│&&&&&&&&&&│&&&&&&&&&&&&│&&&&&&&&&&&&&&│ @@@@@ │ @@@@@ │  @@@@@  │ @@@@@ │ @@@@@  │                         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.}
.{?INTERNAL;(Gruz_Name[4]<>'')
    │@@@@@@@@@@@@@@@@@@@@@@@@@│@@@@@│&&&&&&&&&&│&&&&&&&&&&&&│&&&&&&&&&&&&&&│ @@@@@ │ @@@@@ │  @@@@@  │ @@@@@ │ @@@@@  │                         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.}
.{?INTERNAL;(Gruz_Name[5]<>'')
    │@@@@@@@@@@@@@@@@@@@@@@@@@│@@@@@│&&&&&&&&&&│&&&&&&&&&&&&│&&&&&&&&&&&&&&│ @@@@@ │ @@@@@ │  @@@@@  │ @@@@@ │ @@@@@  │                         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
.}
    │                         │     │          │            │              │       │       │         │       │        │       БОбщая стоимость Б &&&&&&&&&&&&&&&&&&&&
    └─────────────────────────┴─────┴──────────┴────────────┴──────────────┼───────┴───────┼─────────┼───────┴────────┤       БМасса брутто: Б&&&&&&&&&&&  БМасса тары: Б&&&&&&&&&&&
                                                                   Простой │     @@@@@@@@@@│ Простой │                │       БВ количестве: Б&&&&&&&&&&&&&                         М.П.
                                                                           └───────────────┘         └────────────────┘       БПодпись водителя Б ________________________________________
                       БУказанный груз за исправной пломбой, тарой и упаковкой Б
      БВ количестве Б &&&&&&&&&&&&&   БМасса Брутто Б &&&&&&&&&   БМасса тары Б &&&&&&&&&&&                                              ┌───────────┬─────────┐───────────┬─────────┬─────────┐
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -       │Вр.погрузки│ Простой │Норм.разгр.│Вр.разгр.│ Простой │
                   БДиспетчер Б                          БВодитель-экспедитор Б                        БГрузополучатель Б                ├───────────┼─────────┼───────────┼─────────┼─────────┤
     БСдал Б ______________________________  │  Принял ___________________________    │  БПо доверенности Б @@@@@@@@@@@@             │   @@@@@@@@│  @@@@@@@│   @@@@@@@@│         │         │
    ___________________________________  │  Сдал _____________________________    │  Бот Б @@@@@@@@@@@@@@@@@@@@@@@@@             └───────────┴─────────┴───────────┴─────────┴─────────┘
    ___________________________________  │  __________________________________    │  БПринял Б ___________________________        БОтметки грузополучателя Б_____________________________ М.П.
            штамп диспетчера                    штамп грузополучателя
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -        БОсобые отметки Б __________________________________________
                                                     БОсобые отметки Б
    ___________________________________     __________________________________      __________________________________       _________________________________________________________

    ___________________________________     __________________________________      __________________________________       _________________________________________________________

    ___________________________________     __________________________________      __________________________________       _________________________________________________________

    ___________________________________     __________________________________      __________________________________       _________________________________________________________
.{ Р
.}
#ifdef __SKYSHOP__
#include sky.inc
#end
^
.}
.endform














