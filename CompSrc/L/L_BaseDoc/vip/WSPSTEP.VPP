//******************************************************************************
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Логистика - ДО
// Спецификация документа-основания на закупку
//******************************************************************************

#include wdocnal.vpp

//******************************************************************************

#doc
Окно просмотра скидок к позиции спецификации
#end
Window  wSkidka 'Скидка к позиции спецификации документа' escClose;
  Show at (, , 47, 10);

//******************************************************************************

Panel p1;
  Show at (, , , );
  Table SpStep;

Screen scwSkidka;

Fields
  SpStep.VlSkid ('Величина скидки', hcKouDocBSkidkaPos, sci13Esc): [10.2];
  if (SpStep.PrSkid = 1, '%', SimVolB): skip, {font = {Italic = TRUE}};
  SpStep.PrSkid ('Вариант учета скидки', hcKouDocBSkidkaPos, sci13Esc):
    [LIST 1 'Скидка к позиции как %', 'Скидка к позиции как сумма'], protect;
<<

                 Скидка.@@@@@@@@@@@.@@@@@@
            .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;// Screen
//---------------------------------------------------------------------------

HandleEvent

cmCheckField:
  case CurField of
  //--------------
    #SpStep.VlSkid
  , #SpStep.PrSkid:
      if (UpdateTable) {};
  //--------------
  end;

end; // HandleEvent
end; //Panel
end; // Window


//******************************************************************************

#doc
Расширенная информация о позиции спецификации ДО
#end
Window  wSpStep 'Спецификация документа' escClose;
  Show at (, , 107, 20);

//******************************************************************************

Panel p1;
  Table SpStep;

Screen scSpStep 'Спецификация';
  Show at (, , , 10);
  Table SpStep;

Fields
//------------------------------------------------------------------------------
  KatMC2.Name
                ('Товарная позиция, к которой относится услуга', , sci1378Esc)
                protect;
//------------------------------------------------------------------------------
  Nomenkl
                ('Номенклатурный номер МЦ/услуги', , sci1378Esc)
                protect, QuickChoice,
                {Font = {BackColor = if (SpStep.cMCUSL = 0, ColorNeed, 0)}};
//------------------------------------------------------------------------------
  NamMC
                ('МЦ/услуга', , sci1378Esc)
                protect, QuickChoice;
//------------------------------------------------------------------------------
  NamTovar
                ('Наименование МЦ/услуги',  , sci1378Esc): protect, QuickChoice,
                {Font = {BackColor = if (SpStep.cMCUSL = 0, ColorNeed, 0)}};
//------------------------------------------------------------------------------
  KatParty.Name
                ('Наименование партии для товара', , sci1378Esc)
                protect, QuickChoice;
//------------------------------------------------------------------------------
  SpStep.KolSkl
                ('Количество ', , sci178Esc)
                : [prSignsInKol], noprotect;
//------------------------------------------------------------------------------
  KatOtpEd.Name
                ('Единица измерения', , sci1378Esc)
                protect, QuickChoice,
                {Font = {BackColor = if (SpStep.cOtpEd = 0, ColorNeed, 0)}};
//------------------------------------------------------------------------------
  SpStep.Price
                ('Цена за единицу', , sci178Esc)
                : [brForPrice];
//------------------------------------------------------------------------------
  SimVolB
                ('Наименование валюты', , sci178Esc)
                skip, left;
//------------------------------------------------------------------------------
  SummaTov
                ('Стоимость', , sci178Esc)
                : [brForSumma], protect;
//------------------------------------------------------------------------------
  SpStep.Summa
                ('Стоимость с учетом скидок', , sci178Esc)
                : [brForSumma], protect;
//------------------------------------------------------------------------------
  SpStep.NDS
                ('Величина налогов по товарной позиции', , sci178Esc)
                : [brForSumma], protect;
//------------------------------------------------------------------------------
  ManTax
                ('', , sci178Esc)
                skip, left;
//------------------------------------------------------------------------------
  SpStep.Garant
                ('Срок гарантии в месяцах', , sci178Esc)
                : [6.2];
//------------------------------------------------------------------------------
  FactoryPrice      ('Заводская(контрактная) цена', , sci1378Esc): [brForPrice], noprotect;
  [SkidVal ''] SimVolB + '': skip, left;
  fSpSoprProcNac    ('Процент надбавки', , sci1378Esc): noprotect;
//------------------------------------------------------------------------------

Buttons
  cmValue7 , , , 'Редактирование товарно-транспортной информации по позиции', hcKouDocBTTI, sci178Esc;
  cmValue9 , , , 'Скидка к МЦ/услуге позиции документа-основания', , sci178Esc;
<<
`Относится к позиции`  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Номенк.номер`         .@@@@@@@@@@@@@@@@@@@`Товар/услуга`.@@@@@@@@@@@@ <.Товарно-транспортная информация.>
`Наименование`         .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Партия`               .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Количество`           .@@@@@@@@@@@@@@`Единица измерения`.@@@@@@@@@@@@
`Цена`                 .@@@@@@@@@@@@@@@@@@@@@.@@@@@@
`Стоимость`            .@@@@@@@@@@@@@@@@@@@@@   <. Скидка к позиции .>
`Сумма с учетом скидок`.@@@@@@@@@@@@@@@@@@@@@
`Налоги`               .@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@
`Срок гарантии`        .@@@@@@@@@@
`Заводская цена`       .@@@@@@@@@@@@@@@@@@@@@.@@@@@@  `%`.@@@@@@@@@@@@
>>
end;// Screen

//******************************************************************************

Screen scSpStepS 'Спецификация'; // для соп.услуг сумма
  Show at (, , , 10);
  Table SpStep;

Fields
//------------------------------------------------------------------------------
  KatMC2.Name   ('Товарная позиция, к которой относится услуга', , sci1378Esc): protect;
//------------------------------------------------------------------------------
  Nomenkl       ('Номенклатурный номер МЦ/услуги', hcKouDocFMc, sci1378Esc): protect,
                {Font = {BackColor = if (SpStep.cMCUSL = 0, ColorNeed, 0)}};
//------------------------------------------------------------------------------
  NamTovar      ('Наименование МЦ/услуги', hcKouDocFMc, sci1378Esc): protect,
                {Font = {BackColor = if (SpStep.cMCUSL = 0, ColorNeed, 0)}};
//------------------------------------------------------------------------------
  NamMC         ('Тип позиции документа', hcKouDocFPosTyp, sci1378Esc): protect;
//------------------------------------------------------------------------------
  SpStep.KolSkl ('Количество ', hcSkladFostkol, sci178Esc): [prSignsInKol], noprotect;
//------------------------------------------------------------------------------
  KatOtpEd.Name ('Единица измерения', , sci1378Esc):
                {Font = {BackColor = if (SpStep.cOtpEd = 0, ColorNeed, 0)}};
//------------------------------------------------------------------------------
  SpStep.Price  ('Цена за единицу', , sci178Esc): [brForPrice];
//------------------------------------------------------------------------------
  SimVolB       ('Наименование валюты', , sci178Esc): skip, left;
//------------------------------------------------------------------------------
  SummaTov      ('Стоимость', , sci178Esc): [brForSumma], skip;
//------------------------------------------------------------------------------
  SpStep.Summa  ('Стоимость с учетом скидок', hcKouDocFSum, sci178Esc): [brForSumma], skip;
//------------------------------------------------------------------------------
  SpStep.NDS    ('Величина налогов по товарной позиции', , sci178Esc): [brForSumma], skip;
//------------------------------------------------------------------------------
  ManTax ('', , sci178Esc): skip;
//------------------------------------------------------------------------------

Buttons
  cmValue9, , , 'Скидка к МЦ/услуге позиции документа-основания', hcKouDocBSkidkaPos, sci178Esc;
  cmValue7 , , , 'Редактирование товарно-транспортной информации по позиции', hcKouDocBTTI, sci178Esc;
<<
`Относится к позиции`  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Номенкл.номер`        .@@@@@@@@@@@@@@@@@@                             <.Товарно-транспортная информация.>
`Наименование`         .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Тип позиции документа`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Количество`           .@@@@@@@@@@@@@@@@`Ед.измерения`.@@@@@@@@@@@@@@@
`Цена`                 .@@@@@@@@@@@@@@@@.@@@@@@@@@
`Стоимость`            .@@@@@@@@@@@@@@@@    <.  Скидка к позиции  .>
`Стоимость со скидками`.@@@@@@@@@@@@@@@@
`Налоги`               .@@@@@@@@@@@@@@@@.@@@@@@@@@@@@
>>
end;// Screen

//******************************************************************************

Screen scSpStepP 'Спецификация'; // для соп. услуг %
  Show at (, , , 10);
  Table SpStep;

Fields
//------------------------------------------------------------------------------
  KatMC2.Name   ('Товарная позиция, к которой относится услуга', , sci1378Esc): protect;
//------------------------------------------------------------------------------
  Nomenkl       ('Номенклатурный номер МЦ/услуги', hcKouDocFMC, sci1378Esc): protect,
                {Font = {BackColor = if (SpStep.cMCUSL = 0, ColorNeed, 0)}};
//------------------------------------------------------------------------------
  NamTovar      ('Наименование МЦ/услуги', hcKouDocFMC, sci1378Esc): protect,
                {Font = {BackColor = if (SpStep.cMCUSL = 0, ColorNeed, 0)}};
//------------------------------------------------------------------------------
  NamMC         ('Тип позиции документа', hcKouDocFPosTyp, sci1378Esc): protect;
//------------------------------------------------------------------------------
  SpStep.KolSkl ('% к стоимости позиций', hcSkladFostkol, sci178Esc): [prSignsInKol], noprotect;
//------------------------------------------------------------------------------
  SpStep.Summa  ('Стоимость с учетом скидок', hcKouDocFSum, sci178Esc): [brForSumma], skip;
//------------------------------------------------------------------------------
  SimVolB       ('Наименование валюты', , sci178Esc): skip;
//------------------------------------------------------------------------------
  SpStep.NDS    ('Величина налогов по товарной позиции', , sci178Esc): [brForSumma], skip;
//------------------------------------------------------------------------------
  ManTax        ('', , sci178Esc): skip;
//------------------------------------------------------------------------------

Buttons
  cmValue7 , , , 'Редактирование товарно-транспортной информации по позиции', hcKouDocBTTI, sci178Esc;
<<
`Относится к позиции`  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Номенкл.номер`        .@@@@@@@@@@@@@@@@@@                             <.Товарно-транспортная информация.>
`Наименование`         .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Тип позиции документа`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`% к стоимости позиций`.@@@@@@@@@@@@@@@@@@`на`.@@@@@@@@@@@@@@@@@.@@@@@
`Налоги`               .@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@
>>
end;// Screen

TabbedSheet Bottom tsSpecifInfo
  Show at (, 11, , );

Screen scSpStepEx 'Спецификация';
  Table SpStep;

Fields
//------------------------------------------------------------------------------
  TTNResOtgr.Name
                ('Ресурс отгрузки', , sci1378Esc)
                protect, QuickChoice;
//------------------------------------------------------------------------------
  TTNMoveCell.Name
                ('Единица подвижного состава', , sci1378Esc)
                protect, QuickChoice;
//------------------------------------------------------------------------------
  SpStep.NVagon
                ('Номер единицы подвижного состава', , sci1378Esc);
//------------------------------------------------------------------------------
  SpStep.KolGrM
                ('Количество грузовых мест', , sci178Esc)
                : [prSignsInKol];
//------------------------------------------------------------------------------
  KatOtpEdGrM.Name
                ('Единица измерения грузовых мест', , sci1378Esc)
                protect, QuickChoice;
//------------------------------------------------------------------------------
  SpStep.Netto
                ('Вес нетто', , sci178Esc)
                : [prSignsInKol];
//------------------------------------------------------------------------------
  SpStep.NKvit
                ('Номер ж/д квитанции', , sci178Esc);
//------------------------------------------------------------------------------
  SpStep.mTara
                ('Вес тары', , sci178Esc)
                : [prSignsInKol];
//------------------------------------------------------------------------------
  SpStep.SumAvt
                ('Ж/д тариф', , sci178Esc)
                : [18.2, '\3p[|-]36`666`666`666.888'];
//------------------------------------------------------------------------------
  ValutAvt
                ('Символ валюты.', , sci1378Esc)
                protect;
//------------------------------------------------------------------------------
  TTN_massa_all
                ('Вес брутто', , sci178Esc)
                : [prSignsInKol];
//------------------------------------------------------------------------------
  TTNKatEd.Name
                ('Единица веса', , sci1378Esc)
                protect, QuickChoice;
//------------------------------------------------------------------------------
  TTNMetMassa.Name
                ('Способ определения веса', , sci1378Esc)
                protect, QuickChoice;
//------------------------------------------------------------------------------

<<
`Ресурс отгрузки`                 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Единица подвижного состава`      .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Номер единицы подвижного состава`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Количество груз.мест`.@@@@@@@`Единица измерения`.@@@@@@@@@@@@@@@@@@@@
`Нетто` .@@@@@@@@@@@@@@@    `Номер ж/д квитанции`.@@@@@@@@@@@@@@@@@@@@
`Тара`  .@@@@@@@@@@@@@@@    `Сумма ж/д тарифа`   .@@@@@@@@@@@@@.@@@@@@
`Брутто`.@@@@@@@@@@@@@@@    `Единица веса`       .@@@@@@@@@@@@@@@@@@@@
                        `Способ определения веса`.@@@@@@@@@@@@@@@@@@@@
>>
end;// Screen

Browse scNalEdit 'Налоги по позиции' (, , sci178Esc);
  Table SpDocNal;
Fields
  KatNalog.Name   #3'Налог'
                  : [10], Skip;

  SpDocnal.Nalog  #3'%'
                  : [5, 2];

  NalOrg.Name     #3'Контрагент'('Контрагент- получатель суммы данного налога', hcKouDocFSpNal, sci1378Esc)
                  : [25], protect;

  SpDocNal.SumVal #3'Сумма налога'('При необходимости уточните сумму налогов для позиции', hcKouDocFSpNal)
                  : [14], [brForSumma, '\2p[|-]36`666`666`666`666.88'];

  SimVolB         #3'Вал.'
                  : [4], Skip, NoAutoSize;

  SpDocNal.SumNal #3'Сумма налога'('Сумма налога в валюте налога', , )
                  : [14], [brForSumma, '\2p[|-]36`666`666`666`666.88'], protect;

  SimvNal         #3'Вал.'
                  : [4], skip, NoAutoSize;

end; // browse

Embedded scKauEdit 'Целевой учет' Interface;
//  Show at (, 21, , );
end;

#include longnamemcdo.pan

end; // TabbedSheet

//******************************************************************************

Procedure SStSetFieldCellVal;
{
  var b: boolean;  b := ( BaseDoc.Status<=2 ) AND ( BaseDoc.TypeDoc = 0 );

  SetFieldSelectable(#TTNMoveCell.Name, b);
  SetFieldSelectable(#SpStep.NVagon,    b);
}


//******************************************************************************

Procedure ChoiceScreen;
{
  cfsSetCurrentContainer('VSchetB');

  var dy: integer;

  case SpStep.PrMC of
  //-----------------
    1
  , 2:
      {
        SetTabbedSheetVisible(scSpStep  , true);
        SetTabbedSheetVisible(scSpStepEx, SpStep.PrMC = 1);
        SetTabbedSheetVisible(scSpStepP , false);
        SetTabbedSheetVisible(scSpStepS , false);

        SetFormat(scSpStep);

        dy := 20;
      }
  //-----------------
    3:
      {
        SetTabbedSheetVisible(scSpStepP , true);
        SetTabbedSheetVisible(scSpStep  , false);
        SetTabbedSheetVisible(scSpStepEx, false);
        SetTabbedSheetVisible(scSpStepS , false);

        SetFormat(scSpStepP);

        dy := 14;
      }
  //-----------------
    else
      {
        SetTabbedSheetVisible(scSpStepS , true);
        SetTabbedSheetVisible(scSpStep  , false);
        SetTabbedSheetVisible(scSpStepEx, false);
        SetTabbedSheetVisible(scSpStepP , false);

        SetFormat(scSpStepS);

        dy := 18;
      }
  //-----------------
  end;

  LocateWin(Origin_X + single((Size_X - 107) / 2), Origin_Y + single((Size_Y - dy) / 2), 107, dy, wSpStep);

  SetFieldVisible(#KatMC2.Name, (SpStep.PrMC <> 1));
  cfsSetProp('L_SCSPSTEP_Относится_к_позиции', 'Visible', (SpStep.PrMC <> 1));
}

//******************************************************************************

HandleEvent

#include stepttn.vpp //-- обработка полей весовых характеристик

cmPositionChanged:
  {
    if ( (CurWindow = wSpStep) and bCanChoice )
      ChoiceScreen;

    bCanChoice := true;

    SStSetFieldCellVal;

    SetTabbedSheetVisible(scLongName, boGetTune(if (SpStep.PrMC = 1, 'McUsl.VarNameMC_IsUse', 'McUsl.VarNameUsl_IsUse')));
  }

//------------------------------------------------------------------------------

cmPick:
{
  case CurField of
  //--------------
    #KatParty.Name,
    #fSpSoprProcNac,
    #FactoryPrice:
      if (RunInterface(GetPar__, SpStep.cParty, SpStep.cMCUSL) <> cmCancel)
        if boGetTune('Oper.MultiCurrReg')
          case BaseDoc.TipMoney of
          //----------------------
            1:
              if (KatParty.cValPar<>0)
                {
                  Message('При многовалютном учете и рублевом ДО валюта у партии должна отсутствовать!', Information);
                  set SpStep.cParty := 0;
                }
          //----------------------
            2
          , 3:
              if (KatParty.cValPar<>BaseDoc.cVal)
                {
                  Message('При многовалютном учете валюта партии должна соответствовать документу!', Information);
                  set SpStep.cParty := 0;
                }
          //----------------------
          end;
  //--------------
   #KatMC2.Name:
      {
        if (RunInterface(GetDOMC, BaseDoc.NRec, SpStep.cSpMC) <> cmCancel)
          {
#ifndef __MTR_TO_SPEC__
            Set SpStep.cUKS := SpStepMC.cUKS;
            if (IsValid(#SpecZatr2)) // с МЦ связана затрата
              {
                if (IsValid(#SpecZatr))
                  update current SpecZatr Set SpecZatr.cAddSumTune := SpecZatr2.cAddSumTune;
                else
                  {
                    ClearBuffer(#SpecZatr);
                    SpecZatr.coTable := coSpStep;
                    SpecZatr.cAddSumTune := SpecZatr2.cAddSumTune;
                    SpecZatr.cUKS := SpStep.cUKS;
                    insert current SpecZatr;
                  }
              }
            else
              if (IsValid(#SpecZatr))
                delete current Speczatr;
#else
            oMTRFun.CopySpecMTR(coSpStep, SpStepMC.NRec, coSpStep, SpStep.NRec);
#end

            UpdateTable;

            RereadRecord(#SpStep);
          }
      }
  //--------------
    #SpStep.KolSkl:
      {
        Pick_KolDopEd(1, 'Ввод количества', SpStep.KolSkl, 1, BaseDoc.VidDoc);
        ProcessCommand(cmCheckField);
      }
  //--------------
    #SpStep.nVagon:
      {
        var cEdRec: comp;     cEdRec := if (IsValid(#TTNMoveCell), TTNMoveCell.NRec, 0);
        if (RunInterface('GetVagon', 4, comp(0), comp(0), cEdRec, comp(0)) <> cmCancel)
          {
            GetSpStepVagon('VagonMarker');
            RescanPanel(#SpStep);
          }
      }
  //--------------
  end;
}

cmDelOnProtect:
  {
    case CurField of
    //--------------
      #KatOtpEd.Abbr
    , #KatOtpEd.Name:
        Abort;
    //--------------
      #TTNMoveCell.Name:
        {
          SpStep.nVagon := '';
          set SpStep.cNMoveCell := 0;
        }
    //--------------
      #SpStep.nVagon:
        {
          SpStep.nVagon := '';
          set SpStep.cNMoveCell := 0;
          Stop;
        }
    //--------------
      #KatMC2.Name:
        set SpStep.cSpMC := 0;
    //--------------
    end;

    RedrawPanel(#SpStep);
  }

cmSetCurField:
  {
    OldKolSklDEI := SpStep.KolSkl;
    OldKolDEI    := SpStep.Kol;
    OldKolOplDEI := SpStep.KolOpl;
  }

end;
end; //Panel

//******************************************************************************

HandleEvent

cmOpenSearch:
  case CurField of
  //--------------
    #SpStep.Nds: // ввод вручную налогов
      if (SpStep.ManualTax = 1)
        if (IsValid(#SpDocNal))
          RunWindow(wSpDocNal)
        else
          Message('Необходимо определить в настройке налоги для учета!', InFormation);
  //--------------
    #SpStep.Price:
      {
        var GetSum: double;
        GetSum := SpStep.Price;
        if (RunDialog('GetPriceTov', GetSum) <> cmCancel)
          {
            if (GetSum <> 0)
              set SpStep.Price := oDOfuns.DoRoundP(BaseDoc.cVal, tipDo, GetSum);

            UpdateTable;
          }

        Stop;
      }
  //--------------
  end;

//------------------------------------------------------------------------------

cmInit:
  {
    ChoiceScreen;
    bCanChoice := false;
    SStSetFieldCellVal;
  }

//******************************************************************************

cmChangeTabbedSheetFormat:
{
  if ( (GetFirst spdocnal <> tsOk) and (Target = scNalEdit) )
    {
      Message('Налоги по позиции отсутствуют!', Information);
      Abort;
    }

  if ( (not IsValid(#SpStep)) and (Target = scKauEdit) )
    {
      Message('Укажите для позиции наименование МЦ/услуги либо удалите запись!',
                        Warning + OkButton);

      Abort;
    }
}

//******************************************************************************

cmChangeTabbedSheetFormat:
  {
    bCanChoice := true;
  }

//******************************************************************************

cmDone:
  UpdateTable;

//------------------------------------------------------------------------------

cmValue18: // пересчет налогов по выбранной группе
  proc18;

//------------------------------------------------------------------------------

cmValue9:
  RunWindow(wSkidka);

//------------------------------------------------------------------------------

cmPickClass:
  RunWindow(wSkidka);

//------------------------------------------------------------------------------

cmShowAll:
  if ((CurTable = #SpStep) AND (SpStep.cMCUSL <> 0) AND (SpStep.PrMC = 1))
    RunInterface(GSaldDat,
                 BaseDoc.dDoc,
                 word(0),
                 SpStep.cMCUSL,
                 BaseDoc.cParty,        // склад отгрузки
                 comp(-1),              // МОЛ
                 SpStep.cParty,         // партия товара
                 SpStep.cOtpEd);
//------------------------------------------------------------------------------

cmValue7:      //-- интерфейс с товарно-транспортной информацией по позиции
  {
    if (not UpdateTable)
      Exit;
    SaveMyDSK(NOT IsProtected(#BaseDoc), '_CanEditTTNDoc_');
    RunInterface(SpTTNDoc, word(coSpStep), SpStep.NRec);
  }

//------------------------------------------------------------------------------

cmHotKeys:
  PutHotCommand(RunMenu('mnuVSchetBSpStep'));

//------------------------------------------------------------------------------

#include spstep.qc

//------------------------------------------------------------------------------

cmAttrib:
  SetFormat(scNalEdit);

//------------------------------------------------------------------------------

#ifdef __MTR_TO_SPEC__
cmIerarchy :
{
  var vcSp: comp;

  if (CurTable = #SpStep and IsValid(#SpStep))
    RunInterface('EditMtr2Spec', if(not EditDOPosEnabled(false, false) and if(not CanEditInClosePeriod(true), not CanEditInClosePeriod(false), true), 1, if(SpStep.cSpMC = 0, if(IsValid(#SmetaStroy), 2, 0), 1))
                               , 0, word(coSpStep), SpStep.nRec);

  vcSp := SpStep.nRec;

  PushPos(#SpStep);

  _LOOP SpStep where ((vcSp == SpStep.cSpMC))
    oMTRFun.CopySpecMTR(coSpStep, vcSp, coSpStep, SpStep.NRec);

  PopPos(#SpStep);
}
#end

end;
end; // Window

//******************************************************************************
