//╔═════════════════════════════════════════════════════════════════════╗
//║          Галактика (с) 1995, TOP SOFT Ltd., Новый АТЛАНТ            ║
//║  Версия    :  5.8                                                   ║
//║  Разработал:  Биза Т.Ю. (Tanni)                                     ║
//║  Назначение:  Отчет по дублирующимя позициям ДО                     ║
//║  Изменения :                                                        ║
//╚═════════════════════════════════════════════════════════════════════╝

procedure DublBaseDoc;
var
  oldMC                   : Comp;
  oldPrMC                 : Word;
  oldMCName, oldBarKod,
  oldPartyName, oldOtpEd,
  oldValut                : String;
  oldKol                  : Double;
  OutFlag                 : Boolean;
  mcount                  : LongInt; // количество повторений
{
  mcount := 0;
  if (not (IsValid(#SpStep)))
  {
    Message(''#3'Вначале заполните документ');
    exit;
  }

  StartNewVisual(vtNumericVisual, vfTimer + vfBreak + vfConfirm,
                 ''#3'Формирование справки по повторяющимся позициям в ДО',1);

  ReSetBounds(#SpStep);
  PushPos(#SpStep);

  oldMC := 0; oldPrMC := 0;

  oldMCName := ''; oldBarKod := ''; oldPartyName := ''; oldOtpEd := ''; oldValut := '';
  oldKol := 0;

  OutFlag := False;

  _loop SpStep where((StepDoc.Nrec == SpStep.cStepDoc))
               ordered by index SpStep04
  {
    if ((oldMC <> SpStep.cMCUsl) or (oldPrMC <> SpStep.PrMC))
    {
      // Есть повтор, причем последний
      if (mcount > 1)
      {                 
        frmDublBaseDoc.Write(oldMCName);
        OutFlag := (not frmDublBaseDoc.Error) or (NextVisual);
        if (not OutFlag)
          break;
        frmDublBaseDoc.Write(oldBarKod);
        frmDublBaseDoc.Write(oldPartyName);
        frmDublBaseDoc.Write(oldKol);
        frmDublBaseDoc.Write(oldOtpEd);
        frmDublBaseDoc.Write(oldValut);
        frmDublBaseDoc.Write(mcount);

        oldMC   := SpStep.cMCUsl;
        oldPrMC := SpStep.PrMC;

        if (SpStep.PrMC = 1)
        {
          oldMCName := KatMC.Name;
          oldBarKod := KatMC.BarKod;
        }
        else
        {
          oldMCName := KatUSL.Name;
          oldBarKod := '***Услуга***';
        }
        oldPartyName := KatParty.Name;
        oldOtpEd     := KatOtpEd.Name;
        oldValut     := SimVolB;
        oldKol       := SpStep.KolSkl;

        mcount := 1;
      }
      else  // if (mcount > 1)
      {
        oldMC   := SpStep.cMCUsl;
        oldPrMC := SpStep.PrMC;

        if (SpStep.PrMC = 1)
        {
          oldMCName := KatMC.Name;
          oldBarKod := KatMc.BarKod;
        }
        else
        {
          oldMCName := KatUSL.Name;
          oldBarKod := '***Услуга***';
        }
        oldPartyName := KatParty.Name;
        oldOtpEd     := KatOtpEd.Name;
        oldValut     := SimVolB;
        oldKol       := SpStep.KolSkl;

        mcount := 1;
      }
    }
    else
    {
      mcount := mcount + 1;
      oldKol := SpStep.KolSkl+ oldKol;  // Суммируем кол-во повторяющихся позиций
    }

  }  // _loop

  // Есть повтор, причем последний
  if (mcount > 1)
  {                 
    frmDublBaseDoc.Write(oldMCName);
    OutFlag := (not frmDublBaseDoc.Error) or (NextVisual);
    if OutFlag
      {
        frmDublBaseDoc.Write(oldBarKod);
        frmDublBaseDoc.Write(oldPartyName);
        frmDublBaseDoc.Write(oldKol);
        frmDublBaseDoc.Write(oldOtpEd);
        frmDublBaseDoc.Write(oldValut);
        frmDublBaseDoc.Write(mcount);
        mcount := 0;
      }
  }

  SetBounds(#SpStep);
  PopPos(#SpStep);
  StopVisual('',vfSilent);

  if (OutFlag)
  {
    frmDublBaseDoc.PutEvent(feBreak);
    frmDublBaseDoc.ShowFile('Справка по повторяющимся позициям ДО' + BaseDoc.NoDoc);
  }
  else
  {
    frmDublBaseDoc.AbortForm;
    Message(''#3'Повторяющихся позиций в ДО не обнаружено');
  }
}
