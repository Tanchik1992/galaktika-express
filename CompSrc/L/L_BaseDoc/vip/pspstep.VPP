//******************************************************************************
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Логистика - ДО на предоплату продаж
// Спецификация документа на предоплату ПРОДАЖ
//******************************************************************************

#include wdocnal.vpp


//******************************************************************************

#doc
Окно просмотра скидки к позиции спецификации документа
#end
Window  wSkidka 'Скидка к позиции спецификации документа' escClose;
  Show at (13, 19, 66, 23);

//******************************************************************************

Panel p1;
  Show at (, , , );
  Table SpStep;

Screen scwSkidka;

Fields
  SpStep.VlSkid ('Величина скидки', hcKouDocBSkidkaPos, sci13Esc): [10.2];
  if (SpStep.PrSkid = 1, '%', SimVolB): skip, {font = {Italic = TRUE}};
  SpStep.PrSkid ('Вариант учета скидки', hcKouDocBSkidkaPos, sci13Esc):
    [LIST 1 'Скидка к позиции как %', 'Скидка к позиции как сумма'], protect;
<<

                 Скидка.@@@@@@@@@@@.@@@@@@
            .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;// Screen
//---------------------------------------------------------------------------

HandleEvent

cmCheckField:
  case CurField of
  //--------------
    #SpStep.VlSkid
  , #SpStep.PrSkid:
      if (UpdateTable)
        { }
  //--------------
  end;

cmDelOnProtect:
  case CurField of
  //--------------
   #SpStep.VlSkid:
     {
       Set SpStep.PrSkid := 1;
       Set SpStep.VlSkid := 0;
       if (UpdateTable)
         { }
     }
  //--------------
  end;
end; // HandleEvent
end; //Panel

//******************************************************************************

HandleEvent

cmPick:
  case CurField of
  //--------------
    #SpStep.VlSkid:
      if (RunInterface('GetSkid', comp(0), curssumv) <> cmCancel)
        {
          Set SpStep.PrSkid := 1;
          Set SpStep.VlSkid := curssumv;
          if (UpdateTable) {};
        }
  end;

end; // HandleEvent
end; // Window


//******************************************************************************

#doc
Окно расширенной информации по позиции
#end
Window  PwSpStep 'Спецификация документа' escClose;
  Show at (, , 76, 25);

//******************************************************************************

Panel p1;
  Table SpStep;

Screen scSpStepMC 'Спецификация';
  Show at (, , , 14);
  Table SpStep;

Fields
  KatMC2.Name ('Товарная позиция, к которой относится услуга', , sci1378Esc): protect;
  Nomenkl ('Номенклатурный номер товара/услуги, выбор из каталога - <Ctrl><F3>', , sci1378Esc): protect,
          {Font = {BackColor = if (SpStep.cMCUSL = 0, ColorNeed, 0)}};
  NamMC ('Товар/услуга', , sci1378Esc): protect;
  NamTovar ('Наименование товара/услуги, выбор из каталога - <Ctrl><F3>', , sci1378Esc): protect,
          {Font = {BackColor = if (SpStep.cMCUSL = 0, ColorNeed, 0)}};
  UslNakl ('Для услуг - закрывается актом/переносится в накладную ', , sci1378Esc): protect;
  KatParty.Name ('Наименование партии для МЦ', , sci1378Esc): Protect, QuickChoice;
  SpStep.KolSkl ('Количество по документу для оплаты - нетто', , sci178Esc): [prSignsInKol], noprotect;
  KatOtpEd.Name ('Единица измерения', , sci1378Esc): protect,
          {Font = {BackColor = if (SpStep.cOtpEd = 0, ColorNeed, 0)}};
  SpStep.Price ('Цена за единицу', , sci178Esc): [brForPrice];
  SimVolB ('Наименование валюты'): skip, left;
  SummaTov ('Стоимость', , sci178Esc): [brForSumma], protect;
  SpStep.Summa ('Стоимость с учетом скидок', , sci178Esc): [brForSumma], protect;
  SpStep.NDS ('Величина налогов по товарной позиции', , sci178Esc): [brForSumma], protect;
  ManTax ('', , sci178Esc): skip, left;
  KlPrice.Name ('', , sci178Esc): protect, NoDel;

  SpDogovor.NoDoc ('Номер договора',, sci178Esc ): protect, NoDel;
  SpDogovor.dDoc  ('Дата заключения договора',, sci178Esc ): [, 'DD/MM/YYYY'], protect, NoDel;
  SpAppDogovor.NoDoc ('Номер соглашения',, sci178Esc ): protect, NoDel;
  SpAppDogovor.dDoc ('Дата заключения соглашения',, sci178Esc ): [, 'DD/MM/YYYY'], protect, NoDel;
  SpCalPlan.NoDoc  ('Номер пункта календарного плана',, sci178Esc ): protect, NoDel;
  SpCalPlan.dInput ('Дата ввода пункта календарного плана',, sci178Esc ): [, 'DD/MM/YYYY'], protect, NoDel;
  FactoryPrice      ('Заводская(контрактная) цена', , sci1378Esc): [brForPrice], noprotect;
  [SkidVal ''] SimVolB + '': skip, left;
  fSpSoprProcNac    ('Процент надбавки', , sci1378Esc): noprotect;

Buttons
  cmValue9, , , 'Скидка к позиции документа-основания', , sci178Esc;
<<
`Относится к позиции`  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Номенк.номер`         .@@@@@@@@@@@@@@@@@@@@@@@@@`Товар/услуга`.@@@@@@@@@@@
`Наименование`         .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@
`Партия`               .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Количество к оплате`  .@@@@@@@@@@@@@@@@    `Единица измерения`.@@@@@@@@@@@
`Цена`                 .@@@@@@@@@@@@@@@@.@@@@@@@@
`Стоимость`            .@@@@@@@@@@@@@@@@
`Сумма с учетом скидок`.@@@@@@@@@@@@@@@@           <.  Скидка к позиции  .>
`Налоги`               .@@@@@@@@@@@@@@@@.@@@@@@@@
`Прайс-лист`           .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    `Договор`          .@@@@@@@@@@@@@@@@@@@@@@@@@`от`.@@@@@@@@@@@
    `Соглашение`       .@@@@@@@@@@@@@@@@@@@@@@@@@`от`.@@@@@@@@@@@
    `Календарный план` .@@@@@@@@@@@@@@@@@@@@@@@@@`от`.@@@@@@@@@@@
`Заводская цена`       .@@@@@@@@@@@@@@@@.@@@@@@@@ `%`.@@@@@@@@@@@
>>
end;// Screen

TabbedSheet Bottom tsSpecifInfo
  Show at (, 15, , );

Browse scNalEdit 'Налоги по позиции' (, , sci178Esc);
  Table SpDocNal;
Fields
  KatNalog.Name   #3'Налог'
                  : [10], Skip;

  SpDocnal.Nalog  #3'%'
                  : [5, 2];

  NalOrg.Name     #3'Контрагент'('Контрагент- получатель суммы данного налога', hcKouDocFSpNal, sci1378Esc)
                  : [25], protect;

  SpDocNal.SumVal #3'Сумма налога'('При необходимости уточните сумму налогов для позиции', hcKouDocFSpNal)
                  : [14], [brForSumma, '\2p[|-]36`666`666`666`666.88'];

  SimVolB         #3'Вал.'
                  : [4], Skip, NoAutoSize;

  SpDocNal.SumNal #3'Сумма налога'('Сумма налога в валюте налога', , )
                  : [14], [brForSumma, '\2p[|-]36`666`666`666`666.88'], protect;

  SimvNal         #3'Вал.'
                  : [4], skip, NoAutoSize;

end; // browse

Embedded scKauEdit 'Целевой учет' Interface;
end;

#include longnamemcdo.pan

end; // TabbedSheet

//******************************************************************************

Procedure ChangeStateFields;
{
  cfsSetCurrentContainer('VSchetP');
  SetFieldVisible(#KatMC2.Name, (SpStep.PrMC <> 1));
  cfsSetProp('L_SCSPSTEPMC_Относится_к_позиции', 'Visible', ((SpStep.PrMC <> 1)));
}

//******************************************************************************

HandleEvent

cmDelOnProtect:
  case CurField of
  //--------------
    #KatMC2.Name:
      set SpStep.cSpMC := 0;
  //--------------
    #KatOtpEd.Name:
      Abort;
  //--------------
  end;

cmPositionChanged:
  {
    ChangeStateFields;
    SetTabbedSheetVisible(scLongName, boGetTune(if (SpStep.PrMC = 1, 'McUsl.VarNameMC_IsUse', 'McUsl.VarNameUsl_IsUse')));
  }

cmPick:
  case CurField of
    #KatParty.Name,
    #fSpSoprProcNac,
    #FactoryPrice:
      if ((SpStep.cParty <> 0) AND (IsValid(#DoRes)))
        Message('Перед изменением партии необходимо снять резерв по позиции!', Information)
      else
        {
          var NRecParty: comp;     NRecParty := SpStep.cParty;

          if (RunInterface(GetPar__, SpStep.cParty,
                        if (SpStep.PrMC = 1, SpStep.cMCUSL, comp(0)))<>cmCancel )
            {
              if boGetTune('Oper.MultiCurrReg')
                case BaseDoc.TipMoney of
                //----------------------
                  1:
                    if (KatParty.cValPar<>0)
                      {
                        Message('При многовалютном учете и рублевом ДО валюта у партии должна отсутствовать!!',
                                Information);
                        set SpStep.cParty := NRecParty;
                        Exit;
                      }
                //----------------------
                  2
                , 3:
                    if (KatParty.cValPar<>BaseDoc.cVal)
                      {
                        Message('При многовалютном учете валюта партии должна соответствовать документу!',
                                Information);

                        set SpStep.cParty := NRecParty;
                        Exit;
                      }
                //----------------------
                end;

              if ((NrecParty<>0)AND(SpStep.PrMc = 1)AND(NrecParty<>SpStep.cParty))
                {
                  var SrPrice: double;

                  InitMCInfo(BaseDoc.dDoc);

                  StepMCInfo(SpStep.cMCUsl, 0, 0, 0, NRecParty);

                  SrPrice := froundrub2(AveragePrice);

                  StepMCInfo(SpStep.cMCUsl, 0, 0, 0, SpStep.cParty);

                  if (SrPrice <> froundrub2(AveragePrice))
                    if ( Message('Учетная цена выбранной партии отличается от исходной!'#13+
                                 'Продолжить!', Confirmation + YesNo) <> cmYes )
                      {
                        DoneMCInfo;
                        set SpStep.cParty := NRecParty;
                        Exit;
                      }

                  DoneMCInfo;
                }
            }
        }

  //--------------
    #NamMC
  , #NamMC1:
      {
        SpStep.PrMC :=  if(SpStep.PrMC = 1, 2, 1);

        if ((BaseDoc.VidDoc = 201)AND(SpStep.PrMC = 2))  // для ДО на продажу
          set SpStep.PrUsNkl := wGetTune('Doc.UslDoSell');

        if ((BaseDoc.VidDoc = 1420) AND (SpStep.PrMC = 2))  // для ДО на продажу
          set SpStep.PrUsNkl := wGetTune('Doc.Wood.Schet.UslDoSell');

        set SpStep.cMCUsl := 0;
        set SpStep.cOtpEd := 0;
        set SpStep.cSpMC  := 0;

        ChangeStateFields;
        RescanPanel(#SpStep);
      }
  //--------------
    #UslNakl:
      case SpStep.PrUsNkl of
      //--------------------
        0:
          if (SpStep.PrMC = 2)
            set SpStep.PrUsNkl := 1;
          else
           Message('Изменение поля доступно только для услуг!', Information);
      //--------------------
        else
          set SpStep.PrUsNkl := 0;
      //--------------------
      end;
  //--------------
    #KatMC2.Name:
      if (RunInterface(GetDOMC, BaseDoc.nRec, SpStep.cSpMC) <> cmCancel)
        {
          Set SpStep.cUKS := SpStepMC.cUKS;
#ifndef __MTR_TO_SPEC__
          if (IsValid(#SpecZatr2)) // с МЦ связана затрата
            {
              if (IsValid(#SpecZatr))
                update current SpecZatr Set SpecZatr.cAddSumTune := SpecZatr2.cAddSumTune;
              else
                {
                  ClearBuffer(#SpecZatr);
                  SpecZatr.coTable := coSpStep;
                  SpecZatr.cAddSumTune := SpecZatr2.cAddSumTune;
                  SpecZatr.cUKS := SpStep.cUKS;
                  insert current SpecZatr;
                }
            }
          else
            if (IsValid(#SpecZatr))
              delete current Speczatr;
#else
          oMTRFun.CopySpecMTR(coSpStep, SpStepMC.NRec, coSpStep, SpStep.NRec);
#end

          UpdateTable;
          RereadRecord(#SpStep);
        }
  //--------------
    #SpStep.KolSkl:
      {
        Pick_KolDopEd(1, 'Ввод количества',
                      SpStep.KolSkl, longint(0), BaseDoc.VidDoc);
        ProcessCommand(cmCheckField);
      }
  //--------------
  end;

cmPositionChanged:
  OldRes := SpStep.Reserv;

cmSetCurField:
 {
   case Target of
   //------------
     #SpStep.Reserv:
       OldRes := SpStep.Reserv;
   //------------
   end;

   OldKolSklDEI := SpStep.KolSkl;
   OldKolDEI    := SpStep.Kol;
   OldKolOplDEI := SpStep.KolOpl;
 }

cmCheckField:
  set SpStep.Kol := SpStep.KolSkl;

end;
end; //Panel

//******************************************************************************

HandleEvent

cmInit:
  ChangeStateFields;

cmChangeTabbedSheetFormat:
{
  if ( (GetFirst spdocnal <> tsOk) and (Target = scNalEdit) )
    {
      Message('Налоги по позиции отсутствуют!', Information);
      Abort;
    }

  if ( (not IsValid(#SpStep)) and (Target = scKauEdit) )
    {
      Message('Укажите для позиции наименование МЦ/услуги либо удалите запись!',
                        Warning + OkButton);
      Abort;
    }
}

cmOpenSearch:
  case CurField of
  //--------------
    #KatParty.Name:
      {
        QuickChoiceName := 'qcKatPartyName';
        ProcessCommand(cmPick);
      }
  //--------------
    #SpStep.Nds: // ввод вручную налогов
      if (SpStep.ManualTax = 1)
        if (IsValid(#SpDocNal))
          RunWindow(wSpDocNal)
        else
          Message('Необходимо определить в настройке налоги для учета!', InFormation);
  //--------------
  end;

cmValue18: // пересчет налогов по выбранной группе
  proc18;

cmNal:
  SpravTov;

cmRestoreDoc:
  if (wGetTune('Pick.SelKatMc') <> 1)
    ProcessCommand(cmValue8)
  else
    Message('Выбор из каталога МЦ(Услуг) недоступен!', Information);

cmValue9     :
  if (BaseDoc.cNalog <> 0) // невозможность скидок вручную
    Message('Ручные скидки запрещены настройкой пользователя!', Information)
  else
    RunWindow(wSkidka);

cmPickClass  :
  if (BaseDoc.cNalog <> 0) // невозможность скидок вручную
    Message('Ручные скидки запрещены настройкой пользователя!', Information)
  else
    RunWindow(wSkidka);

cmOpenSearch:
  case CurField of
  //--------------
    #NamMC
  , #NamMC1:
      {
        SpStep.PrMC :=  if(SpStep.PrMC = 1, 2, 1);

        if ((BaseDoc.VidDoc = 201) AND (SpStep.PrMC = 2))  // для ДО на продажу
          set SpStep.PrUsNkl := wGetTune('Doc.UslDoSell');

        if ((BaseDoc.VidDoc = 1420) AND (SpStep.PrMC = 2))  // для ДО на продажу
          set SpStep.PrUsNkl := wGetTune('Doc.Wood.Schet.UslDoSell');

        set SpStep.cMCUsl := 0;
        set SpStep.cOtpEd := 0;
        set SpStep.cSpMC  := 0;

        ChangeStateFields;
        RescanPanel(#SpStep);
      }
  //--------------
  end;

cmHotKeys:
  PutHotCommand(RunMenu('mnuVSchetPSpStep'));

cmAttrib:
  SetFormat(scNalEdit);

//------------------------------------------------------------------------------

#ifdef __MTR_TO_SPEC__
cmIerarchy :
{
  var vcSp: comp;

  if (CurTable = #SpStep and IsValid(#SpStep))
    RunInterface('EditMtr2Spec', if(not EditDOPosEnabled(false, false) and if(not CanEditInClosePeriod(true), not CanEditInClosePeriod(false), true), 1, if(SpStep.cSpMC = 0, if(IsValid(#SmetaStroy), 2, 0), 1))
                               , 0, word(coSpStep), SpStep.nRec);

  vcSp := SpStep.nRec;

  PushPos(#SpStep);

  _LOOP SpStep where ((vcSp == SpStep.cSpMC))
    oMTRFun.CopySpecMTR(coSpStep, vcSp, coSpStep, SpStep.NRec);

  PopPos(#SpStep);
}
#end

end;
end; // Window

//******************************************************************************