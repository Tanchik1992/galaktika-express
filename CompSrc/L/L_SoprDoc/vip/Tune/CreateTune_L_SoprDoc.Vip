//------------------------------------------------------------------------------
//                                                      (c) Корпорация ГАЛАКТИКА
//------------------------------------------------------------------------------
// Галактика 8.1 - Настройки
// Создание настроек компонент L_*
//------------------------------------------------------------------------------

#include CreateTune.vih
#include TuneSpec.vih

//------------------------------------------------------------------------------
Handler with replace L_SoprDoc_DateModifyTune on ExtensionPoint
  epDateModifyTuneEx (TS : ObjStartCreateTuneEx)
Action
{
  TS.SetLastDateModTuneComp('#__COMPONENT__', 19,08,2009);
  Result := true;
}


//------------------------------------------------------------------------------
Handler with replace L_SoprDoc_CreateTune on extensionPoint
  epCreateTuneComponent (TR: ObjCreateTuneEx) [53]
Action
{
  Result := true;
  TR.SetComponent('#__COMPONENT__');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Doc.SD');
///\/\/\/\/\/\/\/\/\/\/\/

  TR.AddTuneS('Oper.Field1', 'Название дополнительного поля в накладных', ftString, '', '20', 'Period_Field1');

  TR.AddTuneU('Doc.ModSopr', 'Разрешать модификацию сопроводительных документов', ftBoolean, '1', '', 'UserTune_n_46');

  TR.AddTuneU('Doc.IzmCenaKol',     'Изменение суммы в сопроводительных документах', ftList, '0', '', 'UserTune_n_116_8192_16384');
    TR.AddList(0, 'заблокировать');
    TR.AddList(1, 'изменять количество');
    TR.AddList(2, 'изменять цену');

  TR.AddTuneU('Doc.StatusDoForReklNakl', 'Запрещать формирование рекламационных накладных по закрытым ДО', ftBoolean, '0', '', 'NastrContrStatusZakrVDOPriFormNakl');

  TR.AddTuneU('Doc.CtrUslAktDo', 'Контролировать количество услуги при формировании акта по ДО', ftBoolean, '1', '', 'n_116_4096');

  TR.AddTuneU('Doc.RasNeotgUsl', 'Контролировать количество услуги по ДО при редактировании накладных/актов', ftList, '0', '', 'NastrLogControlKolUsl');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneU('Doc.MakeKol',     'Контролировать количество при формировании накладной', ftBoolean, '0', '', 'Doc_MakeKol');

  TR.AddTuneU('Doc.RasNeotgMC',  'Контролировать количество МЦ по ДО при редактировании накладной', ftList, '0', '', 'NastrLogControlKolUsl');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneU('Doc.ReklNakl',    'Запрещать модификацию при наличии рекламационных накладных', ftBoolean, '0', '', 'DocReklNakl');

  TR.AddTuneU('Doc.NaklDef',     'При создании накладной устанавливать курсор на поле', ftList, '0', '', 'UserTuneNaklTekField');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'номер накладной');
    TR.AddList(2, 'номер ДО');
    TR.AddList(3, 'дата выписки');

  TR.AddTuneU('Doc.SoprDataKurs', 'Дата курса валюты в сопроводительных документах', ftList, '0', '', 'UserTune_n_43');
    TR.AddList(0, 'по запросу');
    TR.AddList(1, 'равна дате оформления');

  TR.AddTuneU('Doc.MethodRoundForVPrice', 'Цены в валюте при формировании накладной по ДО', ftList, '0', '', 'NastrDocRoundPriceNakl_DO');
    TR.AddList(0, 'округлять ');
    TR.AddList(1, 'не округлять');

  TR.AddTuneU('Doc.MethodRoundForPrice',  'Цены в НДЕ при формировании накладной по ДО', ftList, '0', '', 'NastrDocRoundPriceNakl_DO');
    TR.AddList(0, 'округлять');
    TR.AddList(1, 'не округлять');

  TR.AddTuneU('Doc.RegulationsRoundInStoim', 'Правила округления при формировании накладной по ДО (ВАЛ-НДЕ)', ftList, '0', '', 'NastrPravOkrFormNaklDO');
    TR.AddList(0, 'не учитывать');
    TR.AddList(1, 'учитывать ');

  TR.AddTuneU('Doc.RegulationsRoundInStoim2', 'Правила округления при формировании накладной по ДО (в НДЕ, в валюте)', ftList, '0', '', 'NastrPravilaOkruglFormirNaklDO');
    TR.AddList(0, 'не учитывать');
    TR.AddList(1, 'учитывать');

  TR.AddTuneU('Doc.iNalogsFromSpStep',   'Налоги сопроводительных документов рассчитывать по ДО', ftBoolean, '1', '', 'NastrDocNalogSoprDO');

  TR.AddTuneU('Doc.DateForRecalcNalogs', 'Налоги сопроводительных документов рассчитывать на дату', ftList, '0', '', 'NastrDocNalogSoprDoc');
    TR.AddList(0, 'дату цен');
    TR.AddList(1, 'дату выписки');

  TR.AddTuneU('Doc.DialogExtParam',     'Диалог дополн.параметров формирования ДО из накладных/актов', ftList, '0', '', 'NastrDialDopParamFormDO');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'для строительства');
    TR.AddList(2, 'для всех документов');

  TR.AddTuneU('Doc.AutoCalcUsl',        'Автопересчет расчетных услуг при редактировании сопроводительных документов', ftList, '0', '', 'NastrAvtopereschRaschUsl');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneU('Doc.FactoryPrice',       'Заводская(контрактная) цена, скидка/надбавка в документах', ftBoolean, '0', '', 'NastrZavTsenaVDokumentah');

  TR.AddTuneU('Oper.CalcKol',           'Подсчет общего количества штучной продукции', ftBoolean, '0', '', 'NastrPodObKolShtProd');

  TR.AddTuneU('Doc.TuneNDS',            'Регулируемая ставка НДС в отчетах', ftBoolean, '0', '', 'NastrRegStavkNDSVOtch');

  TR.AddTuneS('Oper.UchcenaSpDoSopr',   'Учитывать цену при анализе адекватности спецификаций', ftBoolean, '0', '', 'Period_t_71');
    TR.MakeInvisible; // судя по хелпу, начиная с 5.7 настройка неактуальна

  TR.AddTuneU('Oper.CountPriceTekOst',  'Автоматический расчет средних цен при выборе МЦ из текущих остатков', ftBoolean, '0', '', 'NastrLogAutoRaschSrednCen ');

  TR.AddTuneU('Oper.UchProcKursDayOpl', 'Учитывать процент к курсу на день платежа в накладных и актах', ftBoolean, '1', '', 'NoContext');

  TR.AddTuneU('Oper.SoprStatusChangedAlgBefore', 'Перед изменением статуса накладной/акта выполнить алгоритм', ftComp, '0', '', 'NastrAddAlg');
    TR.AddIntr('PickAlgor');

  TR.AddTuneU('Oper.SoprStatusChangedAlg', 'После изменения статуса накладной/акта выполнить алгоритм', ftComp, '0', '', 'NastrAddAlg');
    TR.AddIntr('PickAlgor');

  TR.AddTuneU('Oper.ModifyInClosePeriod', 'Запрещать модификацию сопроводительных документов в закрытом периоде', ftList, '0', '', 'NastrModDannZakrOtchPer');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'по запросу');
    TR.AddList(2, 'да');

  TR.AddTuneU('Doc.SD.ReCalcNalogByCopy', 'Автоматический пересчет налогов при копировании документов <Ctrl><F2/F3>', ftBoolean, '0', '', 'NastrLogAvtoPereschNal');

  TR.AddTuneU('Doc.SD.KatSoprName',       'Формирование примечания', ftString, 'Примечание + Дата + Номер', '', 'NastrLogFormPrim');
    TR.AddIntr('GetKatSoprName');

  TR.AddTuneU('Doc.AvtoCEC',              'Переносить внешний классификатор организации', ftList, '0', '', 'NastrLogMoveVneshKlass');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

 TR.AddTuneU('Doc.SD.CanLinkDogovor',     'Разрешать привязку договора/соглашения/ПКП при запрете редактирования документа', ftBoolean, '0', '', 'NastrLogRazrPriv');

 TR.AddTuneU('Doc.SD.WorkNormUb',         'Расчет оплаченного количества по нормам убыли', ftBoolean, '0', '', 'NastrOperDocSoprOplachKolNorm');
   TR.MakeInvisible;

  TR.AddTuneU('Oper.SD.Nakl.RecalcSumNalog','При редактировании налогов автоматически пересчитывать суммы по курсу', ftBoolean, '1', '', 'NastrLogRecountSumRedNal');
  
  TR.AddTuneU('Oper.ModifyValut',         'Разрешать перевыбор валюты при наличии спецификации', ftList, '0', '', 'NastrLogSelValNalSpec');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');
 
  TR.AddTuneS('Oper.Buy.Nakl.RecalcSumByPlat', 'Пересчет сумм в НДЕ для накладных/актов по курсам на дату платежа', ftBoolean, '0', '', 'NastrLogPrihNaklRecalcSumPlat');
//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
  TR.SetParent('Oper.Buy.Nakl');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
//********************************************************************************
  TR.AddPartU('Oper.Buy.Nakl.Auto',   'Значения по умолчанию', 'NastrLogDefFormRasch');
  TR.AddPartU('Oper.Buy.Nakl.Alg',    'Запуск алгоритмов', 'NastrOperDocSnabNaklAlg');
  TR.AddPartU('Oper.Buy.Nakl.LocMnu', 'Дополнительные функции локального меню', 'NastrDopFunkLocMenu');
  TR.AddPartU('Oper.Buy.Nakl.Korrekt','Корректирующая накладная', 'NastrLogKorrNakl');
//********************************************************************************

  TR.AddTuneS('Oper.SoprUslRecNakl',    'Учет цен сопутствующих услуг в рекламационных накладных', ftBoolean, '0', '', 'Period_t_51');

  TR.AddTuneU('Oper.Buy.Nakl.FormPlat', 'Предупреждать при незаполнении поля "Форма расчета"', ftBoolean, '0', '', 'n_12_32768');

  TR.AddTuneU('Doc.Buy.RasprSopUsl',    'В приходных накладных по ДО пропорционально распределять сопутств.услуги', ftBoolean, '0', '', 'n_12_1024');

  TR.AddTuneU('Oper.Buy.Nakl.UniqNoDoc','Контролировать уникальность номеров в пределах календарного года', ftList, '0', '', 'NastrOperDocNaklUnicNum');
    TR.AddList (0, 'нет');
    TR.AddList (1, 'да');
    TR.AddList (2, 'по запросу');

  TR.AddTuneU('Doc.Buy.NumSopr=DO',     'Номер накладной и акта формировать по номеру ДО', ftBoolean, '0', '', 'Usertune_n_12_4_5');

  TR.AddTuneU('Doc.Buy.dSopr=DO',       'Дату накладной формировать по дате ДО', ftBoolean, '0', '', 'NastrDatuNaklFormPoDateDO');

  TR.AddTuneU('Doc.Buy.dAkt=DO',        'Дату акта формировать по дате ДО', ftBoolean, '0', '', 'NastrDatuNaklFormPoDateDO');

  TR.AddTuneU('Doc.Buy.MakeOrder',      'Формирование ордеров по накладным только в статусе "исполняемый"', ftList, '0', '', 'NastrDocFormOrdIspNakl');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneU('Doc.Buy.RoundPrice',     'Округление цены в накладной', ftList, '0', '', 'NastrDocRoundPriceNakl');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneU('Doc.Buy.FrmAbonAkt',     'Пакетное формирование актов по ДО (абонентское обслуживание)', ftBoolean, '0', '', 'NastrPakFormAktDO');

  TR.AddTuneU('Doc.Buy.EditNakl',       'Редактирование накладной при наличии складских ордеров', ftList, '0', '', 'NastrDocEditNaklSklOrd');
    TR.AddList(0, 'разрешать');
    TR.AddList(1, 'запрещать');

  TR.AddTuneU('Doc.Buy.EditNaklHavingDocNDS', 'Редактирование накладной/акта при наличии документа для учета НДС', ftList, '1', '','NastrOperDocNaklEditSF');
    TR.AddList(0, 'запрещать');
    TR.AddList(1, 'разрешать');

  TR.AddTuneU('McUsl.AvtoParty',          'Автоматическое формирование партий при оприходовании', ftBoolean, '0', '', 'UserTune_n_116_32768');

  TR.AddTuneU('Pick.BuyF3',               '<F3> в спецификации приходной накладной', ftList, '0', '', 'NastrVSpecPrihNaklPoCtrlF3Vyz');
    TR.AddList(0, 'каталог МЦ');
    TR.AddList(1, 'прайс-лист');
    TR.AddList(3, 'вышестоящий документ');

  TR.AddTuneU('Pick.BuyCtrlF3',           '<Ctrl><F3> в спецификации приходной накладной', ftList, '1', '', 'NastrVSpecPrihNaklPoCtrlF3Vyz');
    TR.AddList(0, 'каталог МЦ');
    TR.AddList(1, 'прайс-лист');
    TR.AddList(3, 'вышестоящий документ');

  TR.AddTuneU('Oper.Buy.Nakl.NeedRescan', 'Автоматическая перерисовка интерфейса', ftBoolean, '0', '', 'NoContext');
    TR.MakeInvisible;
  TR.AddTuneU('Oper.Buy.Nakl.TimeRescan', 'интервал между перерисовками(в секундах)', ftWord, '600', '', 'NoContext');
    TR.MakeInvisible;

  TR.AddTuneU('Oper.Buy.Nakl.CopyRaspredSKL', 'Копирование распределения по складским разрезам при копировании документов', ftBoolean, '0', '', 'NastrOperDocSnabNaklCopyRaspred');

  TR.AddTuneU('Oper.Buy.Nakl.AutocalcRelatedAkt', 'Пересчет услуг отнесенных на другого контрагента', ftBoolean, '0', '', 'NastrLogPereschUslug');

  TR.AddTuneU('Oper.Buy.Nakl.ReCalcPriceByFactory', 'Расчет цены в накладной по заводской цене и входящему проценту', ftList, '0', '', 'NastrLogRaschCenNakl');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneU('Oper.Buy.Nakl.IsDelOrder', 'Разрешать удаление складских ордеров в накладных', ftList, '0', '', 'NastrLogDelSklOrd');
    TR.AddList(0, 'да');
    TR.AddList(1, 'нет');
    TR.AddList(2, 'при отсутствии документа для учета НДС');

  TR.AddTuneU('Doc.Sell.Nakl.FacturDate',  'При отфактуровке отпуска МЦ устанавливать дату создания документов равной дате', ftList, '0', '', 'NastrLogOtpMCDateSozdDoc');
    TR.AddList(0, 'приходной накладной');
    TR.AddList(1, 'расходной накладной');
    TR.AddList(2, 'текущей дате');

  TR.AddTuneU('Oper.Buy.Nakl.DogFromNakl', 'Переносить договор из накладной при создании акта на услуги, отнесенные на другого контрагента', ftBoolean, '1', '', 'NastrLogMoveDogFromNakl');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Buy.AktUsl');
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
//********************************************************************************

  TR.AddTuneU('Pick.AktUslBF3',           '<F3> в спецификации актов на прием услуг', ftList, '0', '', 'NastrLogActUslF3');
    TR.AddList(0, 'каталог');
    TR.AddList(1, 'прайс-лист');
    TR.AddList(3, 'вышестоящий документ');

  TR.AddTuneU('Pick.AktUslBCTRLF3',       '<Ctrl><F3> в спецификации актов на прием услуг', ftList, '1', '', 'NastrLogActUslF3');
    TR.AddList(0, 'каталог');
    TR.AddList(1, 'прайс-лист');
    TR.AddList(3, 'вышестоящий документ');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
   TR.SetParent('Oper.Buy.Nakl.Auto');
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************
   TR.AddTuneU('Oper.Buy.Nakl.cPayment', 'Форма расчета',                        ftcomp, '0', '', 'NastrLogDefFormRasch');
     TR.AddIntr('GetPayment');

   TR.AddTuneU('Doc.Buy.SoprStatus',     'Статус накладной и акта по умолчанию', ftList, '0', '', 'UserTune_SoprStat');
     TR.AddList(0, 'исполняемый');
     TR.AddList(1, 'оформляемый');

   TR.AddTuneU('Oper.Buy.Nakl.Auto.TipSopUsl', 'Тип сопутствующей услуги по умолчанию', ftList, '3', '', 'NastrLogTypeSopUsl');
     TR.AddList(3, 'Процент');
     TR.AddList(4, 'Сумма');
     TR.AddList(5, 'Вес (пропорционально)');
     TR.AddList(6, 'Объем (пропорционально)');
     TR.AddList(7, 'Количество (пропорционально)');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Buy.Nakl.Alg');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Oper.Buy.Nakl.BeforeOrder',    'Перед оприходованием выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('BeforeOrderBuy');

  TR.AddTuneU('Oper.Buy.Nakl.AfterOrder',     'После оприходования выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('AfterOrderBuy');

  TR.AddTuneU('Oper.Buy.Nakl.BeforeDelOrder', 'Перед удалением ордера выполнить алгоритм', ftComp, '0', '', 'Period_NastrSbAlgor');
    TR.AddIntr('BeforeDelOrderBuy');

  TR.AddTuneU('Oper.Buy.Nakl.AfterDelOrder',  'После удаления ордера выполнить алгоритм', ftComp, '0', '', 'Period_NastrSbAlgor');
    TR.AddIntr('AfterDelOrderBuy');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Buy.Nakl.LocMnu');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneS('Oper.Buy.Nakl.DopFunc01', 'Функция 1', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('FuncNaklBuy01');

  TR.AddTuneS('Oper.Buy.Nakl.DopFunc02', 'Функция 2', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('FuncNaklBuy02');

  TR.AddTuneU('Oper.Buy.Nakl.DopFunc03', 'Функция 3', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('FuncNaklBuy03');

  TR.AddTuneU('Oper.Buy.Nakl.DopFunc04', 'Функция 4', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('FuncNaklBuy04');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Buy.Nakl.Korrekt');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Doc.Buy.AutoProvKN',     'Автоформирование ТХО для корректирующей накладной', ftBoolean, '1', '', 'NastrDocAutoTXOKorrNakl');

  TR.AddTuneU('Doc.Buy.KorrSchetovKN',  'Изменение корреспонденции счетов для корректирующей накладной', ftBoolean, '1', '', 'NastrOperDocSnabNaklCorrNakl1');

  TR.AddTuneU('Doc.Buy.AUTOMakePartyKN','Автозаполнение поля "Устанавливать партию для МЦ при оприходовании" в корректирующей накладной', ftBoolean, '1', '', 'NastrOperDocSnabNaklCorrNakl2');

  TR.AddTuneU('Doc.Buy.AddMcUsl',       'Выбор МЦ/Услуг в корректирующей накладной', ftBoolean, '0', '', 'NastrDocPickKorrNakl');

  TR.AddTuneU('Oper.Buy.Nakl.NumStorNakl', 'Номер сторнирующей хозоперации по накладной наследовать из', ftList, '0', '', 'NastrLogNumStornNakl');
    TR.AddList(0, 'корректирующей накладной');
    TR.AddList(1, 'приходной накладной');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('LinkZakProd');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneS('Dog.GrVipDog', 'Группа VIP-договоров', ftComp, '0', '', 'NastrDogGrVIP');
    TR.AddIntr('GETGROUPSCH');

  TR.AddTuneS('Doc.Buy.MakeRaspMC',         'Выполнять распределение из', ftList, '0', '', 'NastrVipRasprIz');
    TR.AddList(0, 'ДО');
    TR.AddList(1, 'накладной');

  TR.AddTuneS('Doc.Buy.CalcAllOrderINRasp', 'Подсчет количества в ордерах', ftList, '0', '', 'NastrPodschKolOrd');
    TR.AddList(0, 'связанных с планами');
    TR.AddList(1, 'всех за период');

  TR.AddTuneU('Doc.Buy.ReRaspMC',           'Распределять остаток МЦ', ftList, '0', '', 'NastrDocZakupRaspredOstMC');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'на следующий месяц');
    TR.AddList(2, 'по запросу');

//********************************************************************************
//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Buy.NaklPrMS');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************
  TR.AddPartU('Oper.Buy.NaklPrMS.Sort',   'Сортность молока', 'NastrLogNaklPriemMolSyr');
//********************************************************************************

  TR.AddTuneU('Oper.Buy.NaklPrMS.GrOrg',       'Группа контрагентов', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetVidOrg');

  TR.AddTuneU('Oper.Buy.NaklPrMS.Kolsymbol',   'Количество знаков после запятой для зачетного веса', ftWord, '0', '', 'NastrLogNaklPriemMolSyr');

  TR.AddTuneU('Oper.Buy.NaklPrMS.GetMOL',      'МОЛ по умолчанию', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetMol');

  TR.AddTuneU('Oper.Buy.NaklPrMS.MCMilk',      'МЦ "Молоко"', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetMC');

  TR.AddTuneU('Oper.Buy.NaklPrMS.DischargePoint', 'Пункт разгрузки по умолчанию', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('Get_Item');

  TR.AddTuneU('Oper.Buy.NaklPrMS.GetSklad',    'Склад по умолчанию', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetSklad');

  TR.AddTuneU('Oper.Buy.NaklPrMS.QualityPhys', 'Тест качества для сырья от физического лица', ftString, '', '80', 'NastrLogNaklPriemMolSyr');

  TR.AddTuneU('Oper.Buy.NaklPrMS.QualityHoz',  'Тест качества для сырья от хозяйств', ftString, '', '80', 'NastrLogNaklPriemMolSyr');

  TR.AddTuneU('Oper.Buy.NaklPrMS.DopTime',     'Услуга "Доплата за дополнительное время"', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetUsl');

  TR.AddTuneU('Oper.Buy.NaklPrMS.UslDelivery', 'Услуга "Доставка молока"', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetUsl');

  TR.AddTuneU('Oper.Buy.NaklPrMS.UslStorage',  'Услуга "Заготовка молока у населения"', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetUsl');

  TR.AddTuneU('Oper.Buy.NaklPrMS.UslOtkl',     'Услуга "Отклонение содержания белка от базисной нормы"', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetUsl');

  TR.AddTuneU('Oper.Buy.NaklPrMS.UslDiscount', 'Услуга "Скидка за неохлажденность"', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetUsl');

  TR.AddTuneU('Oper.Buy.NaklPrMS.UdCentrV',    'Услуга "Удержание за простой центровывоза"', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetUsl');

  TR.AddTuneU('Oper.Buy.NaklPrMS.FormPhys',    'Форма расчета с физическими лицами', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetPayment');

  TR.AddTuneU('Oper.Buy.NaklPrMS.FormHoz',     'Форма расчета с хозяйствами', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetPayment');
//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Buy.NaklPrMS.Sort');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Oper.Buy.NaklPrMS.Sort.Extra',   'Сорт молока экстра юр. лица', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetSortMC');

  TR.AddTuneU('Oper.Buy.NaklPrMS.Sort.Higher',  'Сорт молока высший юр. лица', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetSortMC');

  TR.AddTuneU('Oper.Buy.NaklPrMS.Sort.First',   'Сорт молока первый юр. лица', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetSortMC');

  TR.AddTuneU('Oper.Buy.NaklPrMS.Sort.Second',  'Сорт молока второй юр. лица', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetSortMC');

  TR.AddTuneU('Oper.Buy.NaklPrMS.Sort.ExtraF',  'Сорт молока экстра физ. лица', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetSortMC');

  TR.AddTuneU('Oper.Buy.NaklPrMS.Sort.HigherF', 'Сорт молока высший физ. лица', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetSortMC');

  TR.AddTuneU('Oper.Buy.NaklPrMS.Sort.FirstF',  'Сорт молока первый физ. лица', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetSortMC');

  TR.AddTuneU('Oper.Buy.NaklPrMS.Sort.SecondF', 'Сорт молока второй физ. лица', ftComp, '0', '', 'NastrLogNaklPriemMolSyr');
    TR.AddIntr('GetSortMC');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Sell.Nakl');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************
  TR.AddPartU('Oper.Sell.Nakl.Auto',   'Значения по умолчанию', 'NastrLogDefFormRasch');
  TR.AddPartU('Oper.Sell.Nakl.Alg',    'Запуск алгоритмов', 'NastrOperDocSnabNaklAlg');
  TR.AddPartU('Oper.Sell.Nakl.LocMnu', 'Дополнительные функции локального меню', 'NastrDopFunkLocMenu');
  TR.AddPartU('Oper.Sell.MakeOrdNak',  'Формирование ордеров по накладным', 'NastrLogFormOrd');
//********************************************************************************

  TR.AddTuneU('Oper.Sell.Nakl.FormPlat','Предупреждать при незаполнении поля "Форма расчета"', ftBoolean, '0', '', 'n_12_32768');

  TR.AddTuneU('Doc.Sell.NumSopr=DO',    'Номер накладной формировать по номеру ДО', ftBoolean, '0', '', 'Usertune_n_12_4_5');

  TR.AddTuneU('Doc.Sell.dSopr=DO',      'Дату накладной формировать по дате ДО', ftBoolean, '0', '', 'NastrDatuNaklFormPoDateDO');

  TR.AddTuneU('Doc.Sell.dAkt=DO',       'Дату акта формировать по дате ДО', ftBoolean, '0', '', 'NastrDatuNaklFormPoDateDO');

  TR.AddTuneU('Doc.Sell.NumAkt=DO',     'Номер акта формировать по номеру ДО', ftBoolean, '0', '', 'Usertune_n_12_512');

  TR.AddTuneU('Oper.Sell.Nakl.DO=NUMSOPR', 'Изменять номер ДО по номеру накладной', ftList, '0', '', 'NastrOperIzmNumDONakl');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');
    TR.AddList(2, 'по запросу');

  TR.AddTuneU('Oper.Sell.Nakl.UniqNoDoc', 'Контролировать уникальность номеров в пределах календарного года', ftList, '0', '', 'NastrOperDocNaklUnicNum');
    TR.AddList (0, 'нет');
    TR.AddList (1, 'да');
    TR.AddList (2, 'по запросу');

  TR.AddTuneU('Oper.Sell.Nakl.CalcGrM',  'Автоматический расчет количества грузовых мест', ftBoolean, '0', '', 'NastrOperRaschGruzMest');

  TR.AddTuneU('Doc.Sell.EditNakl',       'Редактирование накладной при наличии складских ордеров', ftList, '0', '', 'NastrDocEditNaklSklOrd');
    TR.AddList(0, 'разрешать');
    TR.AddList(1, 'запрещать');

  TR.AddTuneU('Doc.Sell.EditNaklHavingDocNDS', 'Редактирование накладной/акта при наличии документа для учета НДС', ftList, '1', '', 'NastrOperDocNaklEditSF');
    TR.AddList(0, 'запрещать');
    TR.AddList(1, 'разрешать');

  TR.AddTuneU('Doc.Sell.RoundPrice',       'Округление цены в накладной', ftList, '0', '', 'NastrDocRoundPriceNakl');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneU('Doc.Sell.FrmAbonAkt',       'Пакетное формирование актов по ДО(абонентское обслуживание)', ftBoolean, '0', '', 'NastrPakFormAktDO');

  TR.AddTuneU('Doc.InsFromReserv',         'Учитывать разрез резервирования при формировании накладной по ДО', ftBoolean, '0', '', 'NastrDocRazrezRezerv');

  TR.AddTuneU('Doc.MethodSkidkaInPrice',   'Цена с учетом скидок при формировании накладной по ДО', ftList, '0', '', 'NastrDocPriceWithSkid');
    TR.AddList(0, 'да');
    TR.AddList(1, 'нет');

  TR.AddTuneU('Pick.F3',                   '<F3> в спецификации накладной на отпуск', ftList, '1', '', 'UserTune_n_42');
    TR.AddList(1, 'прайс-лист');
    TR.AddList(0, 'каталог');
    TR.AddList(2, 'текущие остатки');
    TR.AddList(3, 'вышестоящий документ');
    TR.AddList(4, 'текущие остатки в разрезе партий');

  TR.AddTuneU('Pick.CTRLF3',               '<Ctrl><F3> в спецификации накладной на отпуск', ftList, '0', '', 'UserTune_n_42');
    TR.AddList(1, 'прайс-лист');
    TR.AddList(0, 'каталог');
    TR.AddList(2, 'текущие остатки');
    TR.AddList(3, 'вышестоящий документ');
    TR.AddList(4, 'текущие остатки в разрезе партий');

  TR.AddTuneU('Doc.Sell.AutoRasp',         'Автоматически распределять МЦ по разрезу перед формированием ордера', ftList, '0', '', 'NastrLogAutoRasprMC');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');
    TR.AddList(2, 'по запросу');

  TR.AddTuneU('Doc.Sell.OrgPlat',          'Значение по умолчанию для контрагента заказчик/плательщик', ftList, '0', '', 'NastrLogDefKontrZakPlat');
    TR.AddList(0, 'грузополучатель');
    TR.AddList(1, 'грузоотправитель');

  TR.AddTuneU('Doc.Sell.OrgFromDO', 'Контрагент при формировании накладной/акта по документу-основанию', ftList, '0', '', 'NastrLogKontragNaklDO');
    TR.AddList(0, 'из договора/соглашения/ПКП');
    TR.AddList(1, 'из документа-основания');

  TR.AddTuneU('Oper.Sell.Nakl.IsDelOrder', 'Разрешать удаление складских ордеров в накладных', ftList, '0', '', 'NastrLogDelSklOrd');
    TR.AddList(0, 'да');
    TR.AddList(1, 'нет');
    TR.AddList(2, 'при отсутствии документа для учета НДС');

  TR.AddTuneU('Oper.Sell.Nakl.NeedRescan', 'Автоматическая перерисовка интерфейса', ftBoolean, '0', '', 'NastrOperDocSbytNakl');
    TR.MakeInvisible;

  TR.AddTuneU('Oper.Sell.Nakl.TimeRescan', 'Интервал между перерисовками (в секундах)', ftWord, '600', '', 'NastrOperDocSbytNakl');
    TR.MakeInvisible;

  TR.AddTuneU('Oper.Sell.Nakl.IsNalBase', 'Алгоритм определения налоговой базы', ftList, '0', '', 'NastrLogAlgOpredNalBaz');
    TR.AddList(0, 'стандартный');
    TR.AddList(1, 'разница отпускной и учетной цен');

  TR.AddTuneS('Oper.Sell.Nakl.KodGrMcNal','Код группы МЦ для алгоритма с разницей отпускной и учетной цен', ftString, '', '', 'NastrLogAlgOpredNalBaz');
    TR.AddIntr('GetKodGrMc');

TR.AddTuneS('Oper.CarryPartyLF',      'Переносить партию из ДО в накладную при методике "ФИФО по складам"', ftBoolean, '0', '', 'NastrLogCopyPartMetFIFO');
  var TR2: TuneFunc;
  if wGetTune('Oper.L_F') = 3 //"ФИФО по складам"
    TR2.TuneEditOn('Oper.CarryPartyLF', 0, 0)
  else
    TR2.TuneEditOff('Oper.CarryPartyLF', 0, 0);
//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Sell.AktUsl');
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
//********************************************************************************

  TR.AddTuneU('Pick.AktUslF3',           '<F3> в спецификации актов на оказание услуг', ftList, '1', '', 'NastrLogActUslF3');
    TR.AddList(0, 'каталог');
    TR.AddList(1, 'прайс-лист');
    TR.AddList(3, 'вышестоящий документ');

  TR.AddTuneU('Pick.AktUslCTRLF3',       '<Ctrl><F3> в спецификации актов на оказание услуг', ftList, '0', '', 'NastrLogActUslF3');
    TR.AddList(0, 'каталог');
    TR.AddList(1, 'прайс-лист');
    TR.AddList(3, 'вышестоящий документ'); 

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Sell.MakeOrdNak');
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
//********************************************************************************

  TR.AddTuneU('Doc.Sell.MakeOrder',     'Разрешать только в статусе "исполняемый"', ftList, '0', '', 'NastrLogFormOrd');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneU('Doc.Sell.MakeOrderParty','Разрешать только при наличии партии  МЦ', ftList, '0', '', 'NastrLogFormOrd');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

  TR.AddTuneU('Doc.Sell.MakeOrderUK',   'Разрешать только при наличии удостоверения качества к партии МЦ', ftList, '0', '', 'NastrLogFormOrd');
    TR.AddList(0, 'нет');
    TR.AddList(1, 'да');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
   TR.SetParent('Oper.Sell.Nakl.Auto');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************
   TR.AddTuneU('Oper.Sell.Nakl.cPayment', 'Форма расчета',                        ftcomp, '0', '', 'NastrLogDefFormRasch');
     TR.AddIntr('GetPayment');

   TR.AddTuneU('Doc.Sell.SoprStatus',     'Статус накладной и акта по умолчанию', ftList, '0', '', 'UserTune_SoprStat');
     TR.AddList(0, 'исполняемый');
     TR.AddList(1, 'оформляемый');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Sell.Nakl.Alg');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Oper.Sell.Nakl.BeforeOrder',    'Перед списанием выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('BeforeOrderSell');

  TR.AddTuneU('Oper.Sell.Nakl.AfterOrder',     'После списания выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('AfterOrderSell');

  TR.AddTuneU('Oper.Sell.Nakl.BeforeDelOrder', 'Перед удалением ордера выполнить алгоритм', ftComp, '0', '', 'Period_NastrSbAlgor');
    TR.AddIntr('BeforeDelOrderSell');

  TR.AddTuneU('Oper.Sell.Nakl.AfterDelOrder',  'После удаления ордера выполнить алгоритм', ftComp, '0', '', 'Period_NastrSbAlgor');
    TR.AddIntr('AfterDelOrderSell');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Sell.Nakl.LocMnu');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Oper.Sell.Nakl.DopFunc01', 'Функция 1', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('FuncNaklSell01');

  TR.AddTuneU('Oper.Sell.Nakl.DopFunc02', 'Функция 2', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('FuncNaklSell02');

  TR.AddTuneU('Oper.Sell.Nakl.DopFunc03', 'Функция 3', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('FuncNaklSell03');

  TR.AddTuneU('Oper.Sell.Nakl.DopFunc04', 'Функция 4', ftComp, '0', '', 'NastrFunkN');
    TR.AddIntr('FuncNaklSell04');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Buy.NaklVozv');
///\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************
  TR.AddPartU('Oper.Buy.NaklVozv.Alg',    'Запуск алгоритмов', 'NastrOperDocSnabNaklAlg');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Buy.NaklVozv.Alg');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Oper.Buy.NaklVozv.BeforeOrder',    'Перед списанием выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('BeforeOrderBuy');

  TR.AddTuneU('Oper.Buy.NaklVozv.AfterOrder',     'После списание выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('AfterOrderBuy');

  TR.AddTuneU('Oper.Buy.NaklVozv.BeforeDelOrder', 'Перед удалением ордера выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('BeforeOrderBuy');

  TR.AddTuneU('Oper.Buy.NaklVozv.AfterDelOrder',  'После удаления ордера выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('AfterOrderBuy');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Sell.NaklVozv');
///\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************
  TR.AddPartU('Oper.Sell.NaklVozv.Alg',    'Запуск алгоритмов', 'NastrOperDocSnabNaklAlg');

//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
  TR.SetParent('Oper.Sell.NaklVozv.Alg');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************

  TR.AddTuneU('Oper.Sell.NaklVozv.BeforeOrder',    'Перед оприходованием выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('BeforeOrderSell');

  TR.AddTuneU('Oper.Sell.NaklVozv.AfterOrder',     'После оприходования выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('AfterOrderSell');

  TR.AddTuneU('Oper.Sell.NaklVozv.BeforeDelOrder', 'Перед удалением ордера выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('BeforeOrderSell');

  TR.AddTuneU('Oper.Sell.NaklVozv.AfterDelOrder',  'После удаления ордера выполнить алгоритм', ftComp, '0', '', 'Period_NastrSNabgAlg');
    TR.AddIntr('AfterOrderSell');
//********************************************************************************
//\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
   TR.SetParent('Oper.Buy.Nakl');
///\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
//********************************************************************************
  TR.AddTuneU('Oper.Buy.Nakl.dPrice',    'При оприходовании валютной накладной указывать дату цен', ftBoolean, '0', '', 'NastrLogValNaklDatePrice');
}
//------------------------------------------------------------------------------
