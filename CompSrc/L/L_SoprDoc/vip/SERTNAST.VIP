/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,99 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Оперативный контур                                        ║
 ║ Версия        : 5.70                                                      ║
 ║ Назначение    : Настройка реестра удостоверений качества                  ║
 ║ Ответственный : Кратович Сергей Леонидович (SK)                           ║
 ║ Параметры     : NReport - тип отчета (номер)                              ║
 ║                 pNRec   - NRec выбранной записи                           ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#doc
Настройка печати реестра удостоверений качества
#end
Interface SertNastr 'Выбор настройки' (,hcKuzbassIRepNastrList,) DoAccept, EscClose, Cyan;
 Show at (10,2,80,35);
Create View
Var

  sMarkerName
                : string;
//------------------------------------------------------------------------------
  pNRec
, pNastr
, CurGroup
                : comp;
//------------------------------------------------------------------------------
  Date1
, Date2
, Date_from
, Date_to
                : date;
//------------------------------------------------------------------------------
  cMarker
, cCount
, cRep
, TmpDeskTable
                : longint;
//------------------------------------------------------------------------------
  pFormat
, pStatus
, CurCode
, NRec
, wTable
, ResWord0
, ResName1
, ResWord1
, ResWord2
, ResWord3
, Sort
, ResComp1
, ExCode
                : word;
//------------------------------------------------------------------------------
 GroupListNum : word;
 NReport   : Word;
 pTemp     : Comp;
 NumPick   : Word;
(
 fKontr,
 fMC
 )
As Select
  if (UserDeskRep.ResComp[1]<>0,KatOrg.Name,
      if (UserDeskRep.ResWord[21]<>0,'множественный выбор','')
     ),
  if (UserDeskRep.ResComp[2]<>0,KatMC.Name,
      if (UserDeskRep.ResWord[22]<>0,'множественный выбор','')
     )
  From
  Pick,
  PickRep,
  UserDeskRep,
  KatOrg,
  KatPodr,
  KatMC,
  RepGrLst,
  TmpKatalog,
  KatOrgDescr
Where
((
  UserName               == UserDeskRep.OwnName   and
  word(NReport)          == UserDeskRep.nRep      and
  UserDeskRep.ResComp[1] == KatOrg.NRec           and
  UserDeskRep.ResComp[2] == KatMC.NRec            and
  UserDeskRep.ResComp[9] == RepGrLst.NRec         and
  RepGrLst.NRec          == RepGrOne.cRepGrLst    and
  RepGrOne.cRec          == RepGroup.NRec
));

Parameters
 NReport,
 pNRec;

#include pmarker.vpp

Procedure SetFilterStates;
{
   if ( (UserDeskRep.ResWord[10] And 1) = 1 )
      SetFieldState( #fKontr, sfVisible );
   else
      ClearFieldState( #fKontr, sfVisible );

   if ( (UserDeskRep.ResWord[10] And 2) = 2 )  //'фильтр по МЦ
      SetFieldState( #fMC, sfVisible );
   else
      ClearFieldState( #fMC, sfVisible );

} // procedure SetFilterStates
//=========================================================================
//'Окно редактирования настройки
//=========================================================================
Window WNastrEdit 'Параметры отчета' (,hcKuzbassIRepNastr) EscClose;
  Show at (2,,80,16);
Panel pNastrEdit;
  Table UserDeskRep;
Screen ScrNastr1 (,,sci178Esc);
  Show at (,1,,3);
  Fields
   UserDeskRep.RepName ('Наименование настройки',,):[55], NoProtect,
     {Font = {BackColor = if (UserDeskRep.RepName = '',ColorNeed,0)}};
<<

`Наименование :`  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
End;

Screen ScrNastr2 (,,sci1378Esc);
  Show at (,4,,6);
  Fields
   UserDeskRep.ResDate[1]('Дата (начало периода)',,) : [,'DD/MM/YYYY'],NoProtect,
     {Font = {BackColor = if (UserDeskRep.ResDate[1]>UserDeskRep.ResDate[2],ColorError,0)}};
   UserDeskRep.ResDate[2]('Дата (окончание периода)',,) : [,'DD/MM/YYYY'],NoProtect,
     {Font = {BackColor = if (UserDeskRep.ResDate[1]>UserDeskRep.ResDate[2],ColorError,0)}};
<<

 Интервал :   `от`.@@@@@@@@@@@`до`.@@@@@@@@@@@
>>
End;

Screen ScrNastr3 (,,sci1378Esc);
  Show at (,7,,9);
  Fields
   UserDeskRep.ResWord[10]('Установите фильтры',,sci178Esc) : NoProtect;
   fKontr('Установите фильтр по организациям, проводившим пробы',,) : Protect;
   fMC('Установите фильтр по матценностям',,) : Protect;
<<
 [.] Фильтр по организациям  `.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 [.] Фильтр по матценностям  `.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
End;

Screen ScrNastr4 (,,sci178Esc);
  Show at (,10,,);
  Fields
    UserDeskRep.ResWord[30]('Сортировка документов',,) : NoProtect;
    UserDeskRep.ResWord[13]('Что включать в отчет',,) : NoProtect;
    RepGrLst.Name('Группировка удостоверений качества',,sci1378Esc) : Protect;
<<
`Сортировка документов`  `Включать в отчет`
  (.)  по дате         `   [.] дополнительные параметры`
  (.)  по номеру       `   [.] показатели качества     `
                           [.] вагоны                  `
`Группировка :`
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
End;

HandleEvent  //'panel
cmSetDefault:
  {
    UserDeskRep.RepName     := 'Без имени';
    UserDeskRep.ResWord[12] :=1;

    UserDeskRep.dRep        := Cur_Date;

    if boGetTune('User.UseFilter')
      {
        UserDeskRep.ResDate[1] := dGetTune('User.dFilter1');
        UserDeskRep.ResDate[2] := dGetTune('User.dFilter2');
      }
    else
      {
        if (dGetTune('TekMonth')=date(0,0,0))
          {
            UserDeskRep.ResDate[1] := date(1,month(cur_date),year(cur_date));
            UserDeskRep.ResDate[2] := date(Last_Day(cur_date),month(cur_date),year(cur_date));
          }
        else
          {
            UserDeskRep.ResDate[1] := date(1,month(dGetTune('TekMonth')),year(dGetTune('TekMonth')));
            UserDeskRep.ResDate[2] := date(Last_Day(dGetTune('TekMonth')),month(dGetTune('TekMonth')),year(dGetTune('TekMonth')));
          }
      }
  }

cmInsertRecord :
  Insert current UserDeskRep;

cmDeleteRecord :
  if (Message('Удалить текущую запись?',
                  YesNo) <> cmYes)
    abort
  else
    Delete current UserDeskRep;

cmUpdateRecord :
  Update current UserDeskRep;


cmCheckRecord :
  if ( UserDeskRep.ResDate[1]>UserDeskRep.ResDate[2])
   {
     message('Необходимо корректно указать даты!', Warning);
     Abort;
   }
  else
   if ( UserDeskRep.ResWord[11]=3 )
    if ( Add_Day(UserDeskRep.ResDate[1],UserDeskRep.ResWord[12]) > UserDeskRep.ResDate[2])
    {
      message('Период детализации слишком большой!', Warning);
      Abort;
    }

cmPick:
 {
  Case (CurField) of
   #fKontr:
    {
     PickRep2Marker( 'KatOrg', NReport*10+1, UserDeskRep.ResComp[1] );
     if ( RunInterface('GetSomeKontrPrim', false) <> cmCancel )
     //if ( RunInterface('GetKatOr',UserDeskRep.ResComp[1],comp(0)) <> cmCancel )
      {
       DelPickRep( NReport*10+1 );
       Marker2PickRep( 'KatOrg', NReport*10+1, UserDeskRep.ResComp[1], NumPick )
       if ( NumPick > 1 )
        Set UserDeskRep.ResWord[21] := NReport*10+1;
       else
        Set UserDeskRep.ResWord[21] := 0;
       RescanPanel(#UserDeskRep);
      }
    }
   #fMC:
    {
      DelPick( Word(7) );
      PickRep2Pick( NReport*10+2, Word(7), UserDeskRep.ResComp[2] );
      if ( RunInterface('GetSomeMC',Comp(-12347)) <> cmCancel )
       {
        DelPickRep( NReport*10+2 );
        Pick2PickRep( Word(7), NReport*10+2, UserDeskRep.ResComp[2], NumPick )
        if ( NumPick > 1 )
         Set UserDeskRep.ResWord[22] := NReport*10+2;
        else
         Set UserDeskRep.ResWord[22] := 0;
        RescanPanel(#UserDeskRep);
       }
    }
   #RepGrLst.Name :
    {
     set UserDeskRep.ResComp[9] := UserDeskRep.ResComp[9];
     if ( not UpdateTable ) Exit;
     SaveMyDsk( UserDeskRep.NRec, 'UserDeskRep_nrec' );
     if ( RunInterface( GetRepGruppa, GroupListNum, UserDeskRep.ResComp[9], 'advtune1' ) <> cmCancel )
       {
         set UserDeskRep.ResComp[9] := UserDeskRep.ResComp[9];
       }
    }
  End;// case
 }

//'удалить выбор для фильтра
cmDelOnProtect :
 {
  Case CurField of
   #fKontr :
    {
     if ( fKontr <> '' )
      if ( Message('Удалить выбор?', YesNo) = cmYes )
       {
        //'DelPick(6);
        DelPickRep( NReport*10+1 );
        Set UserDeskRep.ResWord[21] := 0;
        Set UserDeskRep.ResComp[1]  := 0;
        RescanPanel(#UserDeskRep);
       }
     Stop;
    }
   #fMC :
    {
     if ( fMC <> '' )
      if ( Message('Удалить выбор?', YesNo) = cmYes )
       {
        DelPickRep( NReport*10+2 );
        Set UserDeskRep.ResWord[22] := 0;
        Set UserDeskRep.ResComp[2]  := 0;
        RescanPanel(#UserDeskRep);
       }
     Stop;
    }
   #RepGrLst.Name :
    {
      Set UserDeskRep.ResComp[9] :=0;
    }
  End;  //'case
 }

cmCheckField :
{
  Case CurField of
  #UserDeskRep.RepName:
    {
       if ( UserDeskRep.RepName  = '' )
       {
         message(''#13#3'Не указано наименование настройки',Warning+CancelButton);
         SelectField(#UserDeskRep.RepName) ;
         abort;
       }
    }
  #UserDeskRep.ResDate[1],#UserDeskRep.ResDate[2]:
    {
      if ( UserDeskRep.ResDate[1]>UserDeskRep.ResDate[2])
      {
        message('Необходимо корректно указать даты!', Warning);
        Abort;
      }
    }
  #UserDeskRep.ResWord[10] :
    {
      SetFilterStates;
    }
  End;  //'case curfield
 }

end;
end; // panel


HandleEvent //'window
cmInit:
  SetFilterStates;

cmDone :
  if (not UpdateTable)
    abort;
  else
    if (not isvalid(#UserDeskRep))
      PutCommand(cmClose);
End;  //'HandleEvent
End;  //'window


//=======================================================================
//'Список настроек
//=======================================================================
Panel pNastrSales;
  Table UserDeskRep;
Browse SelFilter('Enter - сформировать отчет, Ctrl+Enter - просмотреть последний сформированный' ,hcCReportNastrList, sci1Esc);
  Show  at (,,,30);
  Table UserDeskRep;
  Fields
   UserDeskRep.RepName #3'Наименование настройки', '' ('',,sci1478Esc):[45], Protect;
   UserDeskRep.dRep #3'Дата', ''  ('',,sci1478Esc):[10,'DD/MM/YYYY'], Protect,centered;
   if(UserDeskRep.ResWord[40]=0,'','√'):   [1], Protect, Skip;
end; // browse

screen scEE
  show at (,31,,32);
  Buttons
  cmValue10, Default,, 'Формирование отчета',, sci1Esc;
  cmValue13,,, 'Просмотр ранее сформированного отчета',, sci1Esc;
  cmValue12,,, 'Настройка отчета',, sci1Esc;
  cmCancel,,, 'Отказ от формирования отчета',, sci1Esc;
<<
<.Сформировать.> <.  Просмотр   .> <.  Настройка   .> <.  Отмена   .>
>>
end;

HandleEvent  // for panel
cmSetDefault:
  {
    SelectPanel(#UserDeskRep);
    SelectField(#UserDeskRep.RepName);
    PutCommand(cmEdit);
  }

cmvalue13:
  putcommand(cmAttrib);

cmvalue10:
  putcommand(cmdefault);

cmValue12:
  putcommand(cmEdit);

End; // HandleEvent for panel
end; // Panel

//=========================================================================
//'Обработчик интерфейса
//=========================================================================
HandleEvent  //'interface

cmEdit: // Редактирование настройки
 {
  cfsSetProp('WNastrEdit', cfpPalette, wpGrayWindow);
  RunWindow(WNastrEdit);
  RescanPanel(#UserDeskRep);
 }

cmInit :
 {
    pNRec := 0;
    GroupListNum := 401;
    SetFormat(scrNastr1);
    SetFormat(scrNastr2);
    SetFormat(scrNastr3);
    SetFormat(scrNastr4);
    SetWindowTitle(wnMainWindow,'Выбор настройки');
    SetWindowTitle(WNastrEdit,'Настройка реестра удостоверений качества');
    SelectPanel(#UserDeskRep);
    SelectField(#UserDeskRep.RepName);
 }

cmDefault:  //Enter
  {
    if ( Not UpdateTable ) Exit;
    PushPos(#UserDeskRep);
    Update UserDeskRep Set ResWord[40] := 0;
    PopPos(#UserDeskRep);
    Set UserDeskRep.ResWord[40] := 1;
    if ( Not UpdateTable ) Exit;
    RescanPanel(#UserDeskRep);
    pNRec := UserDeskRep.NRec;
  }

cmAttrib :  //Сtrl+Enter
 {
   Var i : Word;
   pNRec := Comp(0);
   if ( Not UpdateTable ) Exit;
   PushPos(#UserDeskRep);
   For ( i:=GetFirst UserDeskRep; i=tsOk; i:=GetNext UserDeskRep )
     if ( UserDeskRep.ResWord[40] = 1 )
      {
       pNRec := UserDeskRep.NRec;
       Break;
      }
   PopPos(#UserDeskRep);
   if ( pNRec = Comp(0) )
    {
     Message('Нет сформированного отчета!');
    }
   else
    {
     CloseInterface( cmOk );
    }
 }

cmClose:
  {
   pNRec := 0;
  }
cmCancel:
 {
   pNRec := 0;
 }

end; // for HandleEvent for Interface
end. // Interface