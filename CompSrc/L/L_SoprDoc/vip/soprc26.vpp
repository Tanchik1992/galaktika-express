//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 7.12 - _
// _
//********************************************************************************


Function PrintReestr: boolean;
var Itogo, ItogoKol: double;
{
  PrintReestr := FALSE;
  if (BeginPdate > EndPdate)
        {
          Message('Начальная дата больше конечной.', Information);
          Exit;
        }
  if cFilterR = 0
        {
          Message('Выберите организацию либо матценность.', Information);
          Exit;
        }
  IF VidR = 1 //Печать для Мц
  {
     PushBounds(tbReestrMC);

     If GetFirst SpSopr = tsOk
     {
        StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm,
                     'Формирование реестра', 1);
        RMc.Write(BeginPdate, 0);
        RMc.Write(EndPdate, 0);
        RMc.Write(FilterR, 0);
        Itogo := 0;ItogoKol := 0;

       _LOOP SpSopr
        IF GetFirst KatSopr where ((SpSopr.cSopr == KatSopr.Nrec)) = tsOk
          If NextVisual
          {
             RMc.Write(KatSopr.dSopr, 0);
             RMc.Write(Katsopr.Descr, 0);
             RMc.Write(KatSopr.nSopr, 0);
             RMc.Write(KatOrg.Name, 0);
             RMc.Write(SpSopr.KolFact, 2);
             RMc.Write(SumPrice, 2);
             RMc.Write(Valut, 0);
             RMc.Write(BDNomDes, 0);
             RMc.Write(RashNakl.NSopr, 0);
             RMc.Write(KatNotes.Name, 0);
             RMc.Write(KatSopr.Name, 0);
             Itogo := Itogo+SumPrice;
             ItogoKol := ItogoKol+SpSopr.KolFact;
          }
          else
          {
             RKontr.PutEvent(feBreak);
             StopVisual('', 0);
             Exit
          }

        RMc.PutEvent(feBreak);
        RMc.Write(ItogoKol, 2);
        RMc.Write(Itogo, 2);
        StopVisual('', 0);
        RMc.ShowFile;
        PrintReestr := TRUE;
     }
     else Message ('Не найдено актов');

     PopBounds(tbReestrMC);
  }
  else //IF VidR = 1 //Печать для контрагента
  {
     PushBounds(tbReestrKontr);

     If GetFirst KatSopr = tsOk
     {
        StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm,
                     'Формирование реестра', 1);
        RKontr.Write(BeginPdate, 0);
        RKontr.Write(EndPdate, 0);
        RKontr.Write(KatOrg.Name, 0);
        Itogo := 0;

       _LOOP KatSopr
        if NextVisual
        {
           RKontr.Write(KatSopr.dSopr, 0);
           RKontr.Write(Katsopr.Descr, 0);
           RKontr.Write(KatSopr.nSopr, 0);
           RKontr.Write(Sum, 2);
           RKontr.Write(Valut, 0);
           RKontr.Write(BDNomDes, 0);
           RKontr.Write(RashNakl.NSopr, 0);
           RKontr.Write(KatNotes.Name, 0);
           RKontr.Write(KatSopr.Name, 0);
           Itogo := Itogo+Sum;
        }
        else
        {
           RKontr.PutEvent(feBreak);
           StopVisual('', 0);
           Exit
        }

        RKontr.PutEvent(feBreak);
        RKontr.Write(Itogo, 2);
        StopVisual('', 0);
        RKontr.ShowFile;
        PrintReestr := TRUE;
     }
     else Message ('Не найдено актов');

     PopBounds(tbReestrKontr);
  }
}//PrintReestr

Window ReestrWin 'Выбор реестров' (, hcSellLocMActPriemPrintReestr, ) escclose, gray;
  Show at (35, 5, 65, 15);
Panel pnSelReestr;
// Table SpSopr;
  screen scrSelReestr;
  Fields
  VidR ('Выбирается вид реестра', , sci13EnEsc): noProtect;
  FilterR('Выбор организации или матценности', , sci13EnEsc): Protect;
  BeginPDate('Выбирается начальная дата', , sci13Esc): noProtect;
  EndPDate('Выбирается конечная дата', , sci13Esc): noProtect;
  buttons
  cmOk , Default, , 'Формируется реестр', , sci1Esc;
  cmCancel , , , 'Выход', , sci1Esc;
<<
    ┌─── `Вид реестра`      ┐
    │ (.) - по организации` │
    │ (.) - по мат.ценности`│
    └───────────────────────┘
.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

`Начальная дата`  .@@@@@@@@@@@
`Конечная дата`   .@@@@@@@@@@@
 <.~П~родолжить.>    <. Отмена .>
     >>
 end;
HandleEvent

cmPick:
  Case CurField of
    #FilterR,
    #VidR:
      IF VidR = 0
        {
          IF RunInterface(GetKatOr, cFilterR, comp(0), FALSE, comp(0), comp(0))<>cmCancel
            if GetFirst KatOrg where ((cFilterR == KatOrg.NRec)) = tsOk
               set FilterR := KatOrg.Name;
        }
      else
        {
           cFilterR := -12345;//без запроса кол-ва МЦ
           IF RunInterface(GetSomeMC, cFilterR)<>cmCancel
             if GetFirst Pick where ((word(7) == Pick.wList)) ordered by Pick.PickNum = tsOk
               IF GetFirst katmc where ((Pick.cRec == katmc.NRec)) = tsOk
                 {
                   set FilterR  := katmc.Name;
                   set cFilterR := Pick.cRec;
                 }
        }
  end;

CmCheckField:
  case CurField of
    #VidR:
      {
        set FilterR := '';
        cFilterR := 0
      }
  end;
end;//HandleEvent
end;//panel

HandleEvent

cmOk:
  if PrintReestr
    {
       SaveMyDsk(BeginPdate, 'BeginPdate');
       SaveMyDsk(EndPdate, 'EndPDate');
       sVidr := string(Vidr);
       SaveMyDsk(sVidr, 'VidR');
       scFilterR := string(cFilterR);
       SaveMyDsk(scFilterR, 'cFilterR');
       SaveMyDsk(FilterR, 'FilterR');
    }

cmInit:
  {
    PushPos(#SpSopr);
    PushPos(#KatSopr);
    ReadMyDsk(sVidR, 'VidR', FALSE);
    Vidr := Integer(sVidr);
    ReadMyDsk(scFilterR, 'cFilterR', FALSE);
    cFilterR := comp(scFilterR);
    ReadMyDsk(BeginPdate, 'Beginpdate', FALSE);
    ReadMyDsk(ENDPdate, 'EndPdate', FALSE);
    ReadMyDsk(FilterR, 'FilterR', FALSE);
    if (BeginPDate = Date(0, 0, 0)) AND (EndPDate = Date(0, 0, 0))
      {
        BeginPDate := Sub_Day(Cur_Date, Day(Cur_Date) - 1);
        EndPDate   := Sub_Day(Add_Months(BeginPDate, 1), 1);
      }
  }

cmDone:
  {
    PushBounds(tbMainBound);
    PopPos(#KatSopr);
    PopPos(#SpSopr);
    Rereadrecord (#Katsopr);
  }
end;//HandleEvent
end;//window
