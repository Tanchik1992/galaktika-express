//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 7.12 - логистика
// Настройка алгоритма при изменении статуса накладной/акта
//
//********************************************************************************

#define OBJINT_ALGORITM
#define OBJINT_SETGETVID
#define OBJINT_ACCOUNT

#include objintpl.vin
#include oCommonFunAlg.vih

//******************************************************************************

#doc
Назначение:
  алгоритм при изменении статуса накладной/акта

Параметры:
  cFormPl - ссылка на расчетный алгоритм планирования
#end

//******************************************************************************

VipInterface AlgoritmSetup_5003 Implements oAlgoritmSetup

#ifdef ATL51
Licensed (FREE)    Parameters (cFormPl : comp)
#end
;

//********************************************************************************

Table Struct TempVidDoc
(
  nRec       : comp
, wNpp       : word
, Name       : string
)
With Index
(
  TempVidDoc01 = NRec (Unique, Surrogate)
);

//********************************************************************************

Interface AlgoritmSetup_5003 'Настройка алгоритма' (, hcNoContext, sci1Esc) DoAccept, EscClose, Gray;

  Show At (,, 46, 10);

Create View

Var
  cFormPl
, cTmpNote
               : comp;

  fNoteSrc
, fNoteDst
               : string;

  fSrcIer
, fDstIer
               : word;

From
  FormPl
, KatNotes
, TempVidDoc

Where
((
    cFormPl  == FormPl.NRec
and cTmpNote == KatNotes.nRec
))
;

Parameters
  cFormPl;

#include AlgSet_St_Impl.vpp  //реализация интерфейса настройки - заглушка

//********************************************************************************

Screen scNoteHeader
  Show At (, 1,, 1);

<<
       Запустить алгоритм при изменении статуса
>>

end;

//********************************************************************************

Panel pnVidDoc
  Table TempVidDoc;

Browse brVidDoc
  Show At (, 2,, 6);

Fields

  TempVidDoc.Name  #3'Виды документов' : Protect;

end;

HandleEvent

cmPositionChanged :
{
  fSrcIer := FormPl.ResWord[TempVidDoc.wNpp];
  fDstIer := FormPl.ResWord[TempVidDoc.wNpp + 20];

  set cTmpNote := FormPl.ResComp[TempVidDoc.wNpp];
  set fNoteSrc := KatNotes.Name;

  set cTmpNote := FormPl.ResComp[TempVidDoc.wNpp + 20];
  set fNoteDst := KatNotes.Name;

  RescanPanel(#FormPl);
}

end;

end;

//********************************************************************************

Panel pnFPL
  Table FormPl;

Screen scNoteSetup
  Show At (, 7,, 9);

Fields

  fNoteSrc  ('Текущий статус документа') : PickButton, Protect;

  fSrcIer   ('') : NoProtect;

  fNoteDst  ('Новый статус документа') : PickButton, Protect;

  fDstIer   ('') : NoProtect;

<<
  с  .@@@@@@@@@@@@@@@   [.] включая вложенные`

  на .@@@@@@@@@@@@@@@   [.] включая вложенные`
>>

end;

HandleEvent

cmPick :
{
  case CurField of

    #fNoteSrc :
      {
        if ( RunInterface( 'GetSomKatNotes'
                         , word(100)
                         , word(0)
                         , word(0)
                         , boolean(false)
                         , cTmpNote
                         ) <> cmCancel )
          {
            set FormPl.ResComp[TempVidDoc.wNpp] := cTmpNote;
            set fNoteSrc := KatNotes.Name;
          }
      }

    #fNoteDst :
      {
        if ( RunInterface( 'GetSomKatNotes'
                         , word(100)
                         , word(0)
                         , word(0)
                         , boolean(false)
                         , cTmpNote
                         ) <> cmCancel )
          {
            set FormPl.ResComp[TempVidDoc.wNpp + 20] := cTmpNote;
            set fNoteDst := KatNotes.Name;
          }
      }

  end;

  RescanPanel(#FormPl);
}

cmCheckField :
{
  case CurField of

    #fSrcIer :
      {
        FormPl.ResWord[TempVidDoc.wNpp] := fSrcIer;
      }

    #fDstIer :
      {
        FormPl.ResWord[TempVidDoc.wNpp + 20] := fDstIer;
      }

  end;
}

end;

end;

//********************************************************************************

Procedure InitVidDocTable;
{
  insert TempVidDoc set TempVidDoc.Name    := 'приходная накладная'
                      , TempVidDoc.wNpp    := 1;

  insert TempVidDoc set TempVidDoc.Name    := 'накладная на отпуск'
                      , TempVidDoc.wNpp    := 2;

  insert TempVidDoc set TempVidDoc.Name    := 'акт на прием услуг'
                      , TempVidDoc.wNpp    := 3;

  insert TempVidDoc set TempVidDoc.Name    := 'акт на оказание услуг'
                      , TempVidDoc.wNpp    := 4;

  insert TempVidDoc set TempVidDoc.Name    := 'накладная на возврат по рекламации'
                      , TempVidDoc.wNpp    := 5;
}

HandleEvent

cmInit :
{
  if ( not IsValid(#FormPl) )
    {
      message('Пользовательский алгоритм не найден', Error);
      Abort;
      Exit;
    }

  InitVidDocTable;

  if ( GetFirst TempVidDoc <> tsOk ) {}
}

cmDefault :
{
  update current FormPl;
}

End;

End.