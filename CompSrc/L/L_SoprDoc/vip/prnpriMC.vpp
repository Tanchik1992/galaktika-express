!╔═══════════════════════════════════════════════════════════════════════════╗
!║ Назначение    : информация по МЦ в приходной накладной                    ║
!╚═══════════════════════════════════════════════════════════════════════════╝

!!! этот файл устарел и больше поддерживаться не будет - оставлен только для поддержки
!!! клиентских отчетов, разработанных на базе этой формы
!!! в дальнейшем печать отчетов в приходных накладных будет поддерживаться интерфейсом PRINTSOPR

  if (SpSopr.PrMC <> 1) 
    Continue;
  SumR := SumR + (SpSopr.Price  * SpSopr.kolopl);
  SumV := SumV + (SpSopr.VPrice * spSopr.kolopl);
  FPrihNkl.Write(SpSopr.NRec);
  FPrihNkl.Write(SpSopr.Npp);
  FPrihNkl.Write(KatMC.BarKod);
  case KatSopr.VidSopr of
   521,522,523:
     {
       FPrihNkl.Write(KatMc.Massa);
       FPrihNkl.Write(KatMc.MTara);
     }
   else
     {
       FPrihNkl.Write(SpSopr.Netto);
       FPrihNkl.Write(SpSopr.MTara);
     }
  end;
  FPrihNkl.Write(KatMC.Volume);
  FPrihNkl.Write(KatMC.SizeX);
  FPrihNkl.Write(KatMC.SizeY);
  FPrihNkl.Write(KatMC.SizeZ);
  if (GetFirst KlResHr where ((KatMc.cResHr == KlResHr.NRec)) = tsOk)
    FPrihNkl.Write(KlResHr.Name);
  else
    FPrihNkl.SkipFormat(1);
  if ( (KatMc.cGroupMC <> 0) and
       (GetFirst GroupMC where ((KatMC.cGroupMC == GroupMC.NRec)) = tsOk) )
    {
    FPrihNkl.Write(GroupMC.Kod);
    FPrihNkl.Write(GroupMC.Name);
    }
  else
    FPrihNkl.Skipformat(2)
  FPrihNkl.Write(KatMC.Name);
  FPrihNkl.Write(KatOtpEd.Name);
  FPrihNkl.Write(KatEd.Name);

  FPrihNkl.Write(fEdIzm.GetKoefOtpEd(SpSopr.cOtpEd));
  FPrihNkl.Write(SpSopr.Kol, Kol_Pr);
  FPrihNkl.Write(SpSopr.KolOpl, Kol_Pr);
  FPrihNkl.Write(SpSopr.KolFact, Kol_Pr);
  FPrihNkl.Write(SpSopr.oilplot);

  FPrihNkl.Write(SpSopr.Kol, Kol_Pr);
  FPrihNkl.Write(SpSopr.kolopl, Kol_Pr);
  FPrihNkl.Write(SpSopr.kolopl * fEdIzm.GetKoefOtpEd(SpSopr.cOtpEd), Kol_Pr); //КолУч
  FPrihNkl.Write((SpSopr.rPrice), Cena_PrR);
  FPrihNkl.Write((SpSopr.rVPrice), Cena_PrV);
  FPrihNkl.Write(KlVal.Simvolv);
  FPrihNkl.Write(KlVal.ISO);
  FPrihNkl.Write(SpSopr.Price * SpSopr.kolopl, Cena_PrR);
  FPrihNkl.Write(SpSopr.VPrice * SpSopr.kolopl, Cena_PrV);
  FPrihNkl.Write(KlVal.SimvolV);
  Pricenl  := SpSopr.Price;
  VPricenl := SpSopr.VPrice;
  rPricenl  := SpSopr.Price;
  rVPricenl := SpSopr.VPrice;
  if (not CanNalog)
    FPrihNkl.SkipFormat(14);
  else
    {
      ResetBounds(#SpDocNal);
      stavkaNDS:=0; summaNDS:=0;
      pricenl := 0; vpricenl := 0;
      rpricenl := 0; rvpricenl := 0;
      iNalog := 0; iNalR := 0; iNalV := 0;
      _LOOP SpDocNal where ((SpSopr.NRec     == SpDocNal.cSpDoc and
                             KatSopr.VidSopr == SpDocNal.TipDoc))
                            ordered by index SpDocNal02 
        {
          if (SpDocNal.cOrg <> KatSopr.cOrgBase)
            Continue;
          if (SpDocNal.cNalog = coGetTune('Nalog.cNalogNDS'))
               {
                  stavkaNDS:=SpDocNal.Nalog;
                  summaNDS:=summaNDS+SpDocNal.Summa;
               }
          pricenl  := pricenl + SpDocNal.Summa;
          vpricenl := vpricenl + SpDocNal.SumVal;
          rpricenl  := rpricenl + SpDocNal.Summa;
          rvpricenl := rvpricenl + SpDocNal.SumVal;
          iNpp := if (SpdocNal.Npp <= 7,SpDocNal.Npp,7);
          if (iNpp > 0)
            if (iNalog = iNpp)
              {
              iNalR := iNalR + SpDocNal.Summa;
              iNalV := iNalV + SpDocNal.SumVal;
              }
            else
              {
              FPrihNkl.Write(iNalR, Cena_PrR);
              FPrihNkl.Write(iNalV, Cena_PrV);
              iNalR := SpDocNal.Summa;
              iNalV := SpDocNal.SumVal;
              FPrihNkl.SkipFormat((iNpp-(iNalog+1))*2);
              iNalog := iNpp;
              }
        }
      if (iNalog < 7)
        {
          FPrihNkl.Write(iNalR, Cena_PrR);
          FPrihNkl.Write(iNalV, Cena_PrV);
          FPrihNkl.SkipFormat((7-(iNalog+1))*2);
        }
      SetBounds(#SpdocNal);
      if (SpSopr.kolopl = 0)
        {
          pricenl  := SpSopr.Price;
          vpricenl := SpSopr.VPrice;
          rpricenl  := SpSopr.rPrice;
          rvpricenl := SpSopr.rVPrice;
        }
      else
        if (KatSopr.VhodNal = 1)
          {
            pricenl  := SpSopr.Price  - pricenl  / SpSopr.kolopl;
            vpricenl := SpSopr.VPrice - vpricenl / SpSopr.kolopl;
            rpricenl  := SpSopr.rPrice  - rpricenl  / SpSopr.kolopl;
            rvpricenl := SpSopr.rVPrice - rvpricenl / SpSopr.kolopl;
          }
        else
          {
            pricenl  := SpSopr.Price  + pricenl  / SpSopr.kolopl;
            vpricenl := SpSopr.VPrice + vpricenl / SpSopr.kolopl;
            rpricenl  := SpSopr.rPrice  + rpricenl  / SpSopr.kolopl;
            rvpricenl := SpSopr.rVPrice + rvpricenl / SpSopr.kolopl;
          }
    }
  if (KatSopr.VhodNal = 1)
    {
      FPrihNkl.Write(stavkaNDS, Cena_Pr); //ставка НДС
      FPrihNkl.Write(summaNDS, Cena_Pr);//сумма НДС
      FPrihNkl.Write((rpricenl), Cena_PrR); //цена без налогов
      FPrihNkl.Write((SpSopr.rPrice), Cena_PrR);//цена с налогами
      FPrihNkl.Write((rvpricenl), Cena_PrV);
      FPrihNkl.Write((SpSopr.rVPrice), Cena_PrV);
      FPrihNkl.Write(pricenl * SpSopr.kolopl, Cena_PrR);
      FPrihNkl.Write(SpSopr.Price * SpSopr.kolopl, Cena_PrR);
      FPrihNkl.Write(vpricenl * SpSopr.kolopl, Cena_PrV);
      FPrihNkl.Write(SpSopr.VPrice * SpSopr.kolopl, Cena_PrV);
    }
  else
    {
      FPrihNkl.Write(stavkaNDS, Cena_Pr); //ставка НДС
      FPrihNkl.Write(summaNDS, Cena_Pr);//сумма НДС
      FPrihNkl.Write((SpSopr.rPrice), Cena_PrR);
      FPrihNkl.Write((rpricenl), Cena_PrR);
      FPrihNkl.Write((SpSopr.rVPrice), Cena_PrV);
      FPrihNkl.Write((rvpricenl), Cena_PrV);
      FPrihNkl.Write(SpSopr.Price * SpSopr.kolopl, Cena_PrR);
      FPrihNkl.Write(pricenl * SpSopr.kolopl, Cena_PrR);
      FPrihNkl.Write(SpSopr.VPrice * SpSopr.kolopl, Cena_PrV);
      FPrihNkl.Write(vpricenl * SpSopr.kolopl, Cena_PrV);
    }
  sumnl  := sumnl  + (pricenl  * SpSopr.kolopl);
  vsumnl := vsumnl + (vpricenl * SpSopr.kolopl);
  FPrihNkl.Write(KatParty.Name);
  FPrihNkl.Write(KatParty.CenaZav);

  pNRec := coKatParty;
  if (GetFirst AttrVal where ((pNRec         == AttrVal.wTable and
                               SpSopr.cParty == AttrVal.cRec)) = tsOk)
    FPrihNkl.Write(AttrVal.vDouble,2);
  else
    FPrihNkl.SkipFormat(1);

  erfl := true;
  FPrihNkl.Write(SpSopr.ProcNac,2);
!------- Вывод внешних атрибутов по МЦ -----------------
  KolAttr := 5;
  pNRec   := coKatMC;
  _LOOP AttrVal where ((pNRec      == AttrVal.wTable and
                        KatMC.Nrec == AttrVal.cRec)) 
    {
      AttrTyp := 0;
      if (GetFirst FastFirstRow attrnam 
                        where (( AttrVal.cAttrNam == attrnam.nrec)) = tsOk)
        AttrTyp := AttrNam.AttrType;
      Case AttrTyp of
        0 : FPrihnkl.Write(AttrVal.vString);
        1 : FPrihnkl.Write(AttrVal.vDouble,2);
        2 : FPrihnkl.Write(AttrVal.vDate);
        3 : FPrihnkl.Write(AttrVal.vTime);
       else FPrihnkl.Write(AttrVal.vString);
      End;
      KolAttr := KolAttr - 1;
      if KolAttr = 0
        break;
    }
  FPrihnkl.SkipFormat(KolAttr);
!---------- Конец вывода внешних атрибутов по МЦ ---------------
