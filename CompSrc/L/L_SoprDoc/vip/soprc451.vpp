//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 7.12 - _
// _
//********************************************************************************


Procedure MakeNewMTabReestrforKN;
{
  Delete All MTabReestrforKN;

  if GetFirst KatSopr where (( c1 == KatSopr.nRec )) = tsOk{};

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm, 'Формирую временную таблицу.', 1);

  _LOOP SpSopr
    _LOOP SpSopr2
    {
      if (SpSopr2.PrMC = 1) AND (SpSopr.cMcUsl = SpSopr2.cMcUsl)
      {
        ClearBuffer(#MTabReestrforKN);
        MTabReestrforKN.KatSoprnRec    := KatSopr2.nRec;
        MTabReestrforKN.KatSoprVidSopr := KatSopr2.VidSopr;
        MTabReestrforKN.SpSoprnRec     := SpSopr2.nRec;
        MTabReestrforKN.KatSoprnSopr   := KatSopr2.nSopr;
        MTabReestrforKN.KatSoprdSopr   := KatSopr2.dSopr;
        MTabReestrforKN.KatSoprdOpr    := KatSopr2.dOpr;
        MTabReestrforKN.KatSoprcVal    := KatSopr2.cVal;
        MTabReestrforKN.KatSoprVhodNal := KatSopr2.VhodNal;
        MTabReestrforKN.KatSoprSkid    := KatOrg.Skid;
        MTabReestrforKN.KatMCName      := KatMc2.Name;
        MTabReestrforKN.KatPodrName    := KatPodr.Name;
        MTabReestrforKN.cKatPodr       := KatPodr.nRec;
        MTabReestrforKN.KatMolName     := KatMol.Name;
        MTabReestrforKN.cKatMol        := KatMol.nRec;
        MTabReestrforKN.KatPartyName   := Katparty.Name;
        MTabReestrforKN.KatOrgName     := KatOrg.Name;
 //       MTabReestrforKN.oldPrice       := If(KatSopr2.cVal = 0, SpSopr2.rprice, SpSopr2.rvprice);
 //       MTabReestrforKN.NewPrice       := If(KatSopr2.cVal = 0, SpSopr.rprice, SpSopr.rvprice);
        MTabReestrforKN.oldPrice       := SpSopr2.rprice;
        MTabReestrforKN.NewPrice       := SpSopr.rprice;
        MTabReestrforKN.KolOpl         := SpSopr2.KolOpl;
        MTabReestrforKN.PodrFrom       := PodrFrom2.Name;
        MTabReestrforKN.MolFrom        := MolFrom2.Name;
        if insert current MTabReestrforKN <> tsOK{};

        if NOT NextVisual Break;
      }
    }

    StopVisual('', 0);

    if GetLast MTabReestrforKN <> tsOK{};
}


//******************************************************************************
Procedure SetFltBNSopr;
var
  str: string[20];
{
! BNSopr := MTabReestrforKN.KatSoprnSopr;
  str := MTabReestrforKN.KatSoprnSopr;

  if (RunDialog(DlgSetFltBNSopr, str) <> cmCancel)
  {
    BNSopr := str;
    PushBounds(tbnSoprBound);
  }
  else
    if (Message('Снять установленный фильтр?', YesNo) = cmYes)
      PopBounds(tbnSoprBound);

  RereadRecord;
}


//******************************************************************************
Procedure SetSoprFlt;
var aBegDate, aEndDate: Date;
    WhatDate: word;
{
  ReadMyDsk(aBEGdate, 'aBEGdate_MakePos201fromKN', FALSE);
  ReadMyDsk(aENDdate, 'aENDdate_MakePos201fromKN', FALSE);

!  if (RunDialog(GetInterval, abegdate, aenddate) <> cmCancel)
  if (RunDialog(GetInterval1, WhatDate, abegdate, aenddate) <> cmCancel)
  {
    if (abegdate > aenddate)
    {
      Message('Начальная дата фильтра больше конечной. Фильтр не изменен...', Information);
      Exit;
    }

    begdate := abegdate;
    enddate := aenddate;

    if WhatDate = 0
      PushBounds(tbdMainBound)
    else
      PushBounds(tbdMainBound2);
  }
  else
    if (Message('Снять установленный фильтр?', YesNo) = cmYes)
    {
      if WhatDate = 0
        PopBounds(tbdMainBound)
      else
        PopBounds(tbdMainBound2);
    }

  SaveMyDsk(aBEGdate, 'aBEGdate_MakePos201fromKN');
  SaveMyDsk(aENDdate, 'aENDdate_MakePos201fromKN');

  RereadRecord;
}


//******************************************************************************
Function CheckRazrez(TW: word;Skl1: string;Skl2: string;MOL1: string;MOL2: string): boolean;
{
  CheckRazrez := TRUE;

  // для (-КН) проверка разреза не нужна
  if (TW = 0)
    Exit;

  //Склад-МОЛ брать из текущего документа
  if (CurTable <> #MTabReestrforKN AND p1 = 0)
    Exit;

  if (Skl1 = Skl2) AND (MOL1 = MOL2)
    Exit;

  CheckRazrez := FALSE;
}


//******************************************************************************
Procedure KatSopr201Default(TW: word);
{
!  ClearBuffer(#KatSopr);
  KatSopr.nRec    := 0;
  KatSopr.VidSopr := 201;
  KatSopr.wADoc   := if (TW = 0, adSoprDocSNSell, adSoprDocKNSell);
  KatSopr.cADoc   := MTabReestrforKN.KatSoprnRec;

//  KatSopr.NSopr    := if(TW = 0, KatSopr.NSopr+'(-КН)', KatSopr.NSopr+'(КН)');
  KatSopr.NSopr     := if(TW = 0, KatSopr.NSopr+'(-КН)', KatSopr.NSopr+'(КН'+if(NN_KN>1, string(NN_KN), '')+')');

  KatSopr.cPodrFrom := if(TW = 0, KatSopr.cPodrFrom, MTabReestrforKN.cKatPodr);
  KatSopr.cMolFrom  := if(TW = 0, KatSopr.cMolFrom , MTabReestrforKN.cKatMOL );

//  KatSopr.cStepDoc := 0; для Югорска сохранить ссылку на ДО
  KatSopr.reserved := 0;

  if NOT BoGetTune('Oper.CopyTXO')
    KatSopr.cHozOper := 0; //101.13575, 101.17360

  case wGetTune('Doc.Sell.Nakl.FacturDate') of
    0: { // дата приходной накладной
      PushPos(#KatSopr2);

      if GetFirst KatSopr2 where((c1 == KatSopr2.nRec)) = tsOk
        KatSopr.dSopr := KatSopr2.dSopr;
      PopPos(#KatSopr2);
    }

    1: { // дата накладной на отпуск
      KatSopr.dSopr := MTabReestrforKN.KatSoprdSopr;
    }

    2: { // текущая дата
      KatSopr.dSopr := Cur_Date;
    }
  end;

  KatSopr.dOpr     := 0;
  KatSopr.cKatSopr := 0;
  KatSopr.YearSopr := Year(Cur_Date);
  KatSopr.cSchFact := 0;

  if (not boGetTune('Doc.ChangeDescr'))
  {
    KatSopr.Descr := sGetTune('User.Descr');
    KatSopr.DesGr := sGetTune('User.DesGr');
  }

  Insert current KatSopr;
  Curse := GetCursPrice;
}


//******************************************************************************
Procedure SpSopr201Default(TW: word);
{
!  ClearBuffer(#SpSopr);

  var vcSpec : comp;
#ifndef __MTR_TO_SPEC__
  var vcZatr : comp;
  vcZatr := 0;
  if (IsValid(#SpecZatr))
    vcZatr := SpecZatr.cAddSumTune;
#end

  vcSpec          := SpSopr.nRec;
  SpSopr.nRec     := 0;
  SpSopr.cSopr    := KatSopr.NRec;
  SpSopr.dSopr    := KatSopr.dSopr;
  SpSopr.dOprTTN  := 0;
  SpSopr.cSpOrder := 0;
  SpSopr.cSpStep  := 0;
  SpSopr.cSpSopr  := 0;
  SpSopr.cSpSchf  := 0;//пир 103.1227
  SpSopr.Npp      := oSpNext.GetSpNppNext(KatSopr.NRec, coSpSopr);

  SpSopr.wADocSp  := KatSopr.wADoc;
  SpSopr.cADocSp  := vcSpec;

  if TW = 0
  {
    SpSopr.KolOpl  := -SpSopr.KolOpl;
    SpSopr.Kol     := -SpSopr.Kol;
    SpSopr.KolFact := -SpSopr.KolFact;
  }
  else
  {
    SpSopr.rprice  := MTabReestrforKN.NewPrice * (1 + MTabReestrforKN.KatSoprSkid / 100);
    SpSopr.rvprice := SpSopr.rprice / Curse;
    SpSopr.price   := SpSopr.rprice;
    SpSopr.vprice  := SpSopr.rvprice;
  }

  Insert current SpSopr;

#ifndef __MTR_TO_SPEC__
  if (vcZatr <> 0)
    Insert SpecZatr Set SpecZatr.coTable := coSpSopr, SpecZatr.cSpec := SpSopr.nRec, SpecZatr.cAddSumTune := vcZatr;
#else
  oMTRFun.CopySpecMTR(coSpSopr, vcSpec, coSpSopr, SpSopr.nRec);
#end

  RunInterface('CopySpDocSmeta', word(coSpSopr), vcSpec, word(coSpSopr), SpSopr.nRec);

  //-- Копирование налогов по позиции
  _LOOP SpDocNal where (( MTabReestrforKN.SpSoprnRec      ==  SpDocNal.cSpDoc AND
                          MTabReestrforKN.KatSoprVidSopr  ==  SpDocNal.TipDoc ))
  {
    PushPos(#SpDocNal);
    SpDocNal.NRec   := 0;
    SpDocNal.cSpDoc := SpSopr.NRec;
    SpDocNal.cDoc   := KatSopr.NRec;
    SpDocNal.TipDoc := KatSopr.VidSopr;
    Insert current SpDocNal;
    PopPos(#SpDocNal);
  }

!  CheckSummaNalog;
  Update Current SpSopr;
}


//******************************************************************************
Procedure MTabReestrforKNcmAlt1;
{
  if CurTable <> #MTabReestrforKN
    Exit;

  PushPos(#MTabReestrforKN);

  if GetFirst MTabReestrforKN where(( 1 == MTabReestrforKN.Pick)) ordered by index TMP08indexmem<>tsOk
  {
    Message('Необходимо пометить по <Ins> позиции для формирования по ним сопроводительных документов.');
    PopPos(#MTabReestrforKN);
    Exit;
  }

  var _KatSopr2nSopr  : string; _KatSopr2nSopr := MTabReestrforKN.KatSoprnSopr;
  var _KatPodrName    : string; _KatPodrName   := MTabReestrforKN.KatPodrName;
  var _KatMolName     : string; _KatMolName    := MTabReestrforKN.KatMolName;
  var TmpKatSoprnRec  : comp;   TmpKatSoprnRec := 0;
  var i               : word;   i := 0;

  ShowRep := FALSE;
  NN_KN   := 0;

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm, 'Создание сопроводительных документов.', 1);

  if GetFirst KatSopr where((MTabReestrforKN.KatSoprnRec == KatSopr.nRec)) = tsOk
  {
    KatSopr201Default(i);

    TmpKatSoprnRec := KatSopr.nRec;
    NN_KN := 1;

    WriteERRRMessage;

    For ( i := 0; i < 2; i := i + 1 )  //два прохода сначала делаю -КН потом КН документы
    {
      _LOOP MTabReestrforKN where(( 1 == MTabReestrforKN.Pick)) ordered by index TMP08indexmem
      {
        if (NOT NextVisual)
          Break;

        if (_KatSopr2nSopr = MTabReestrforKN.KatSoprnSopr) AND
           CheckRazrez(i, _KatPodrName, MTabReestrforKN.KatPodrName, _KatMolName, MTabReestrforKN.KatMolName)
        {
          if GetFirst SpSopr where((MTabReestrforKN.SpSoprnRec == SpSopr.nRec)) = tsOk
            SpSopr201Default(i);
        }
        else
        {
          if (_KatSopr2nSopr <> MTabReestrforKN.KatSoprnSopr)
            NN_KN := 1
          else
              NN_KN := NN_KN+1;

         //пересчитываю толькочто созданные документы
          if GetFirst KatSopr where((TmpKatSoprnRec == KatSopr.nRec)) = tsOk
        {
         RecalcSumm;
!         RunInterface( iChkSum, KatSopr.NRec, 0, FALSE, If(KatSopr.cVal = 0, 10, 20), TRUE);

            if (NOT NextVisual)
              Break;
          }

          _KatSopr2nSopr := MTabReestrforKN.KatSoprnSopr;
          _KatPodrName   := MTabReestrforKN.KatPodrName;
          _KatMolName    := MTabReestrforKN.KatMolName;

          if GetFirst KatSopr where((MTabReestrforKN.KatSoprnRec == KatSopr.nRec)) = tsOk
          {
            KatSopr201Default(i);

            TmpKatSoprnRec := KatSopr.nRec;

            WriteERRRMessage;

            if GetFirst SpSopr where((MTabReestrforKN.SpSoprnRec == SpSopr.nRec)) = tsOk
              SpSopr201Default(i);
          }
        }
      }

      //пересчитываю толькочто созданные документы
      if GetFirst KatSopr where((TmpKatSoprnRec == KatSopr.nRec)) = tsOk
      {
!        RecalcSumm;
        RunInterface( iChkSum, KatSopr.NRec, 0, FALSE, If(KatSopr.cVal = 0, 10, 20), TRUE);

        if (NOT NextVisual)
           Break;

        // формировние ордеров по сторнирующей накладной
        var isOrdGen: boolean;
        isOrdGen := if (KatSopr.wADoc = adSoprDocSNSell, (wTune AND 1) = 1,
                      if (KatSopr.wADoc = adSoprDocKNSell, (wTune AND 2) = 2, FALSE));

        if (isOrdGen)
        {
          var pSoprDoc: SoprDocObj;
          GetVipRef(pSoprDoc, 'SoprDoc');

          pSoprDoc.MakeRashOrderByKatSopr(KatSopr.NRec, FALSE, KatSopr.dSopr);
        }
      }

      _KatSopr2nSopr := '';
    }
  }

  StopVisual('', 0);
  PopPos(#MTabReestrforKN);

  if (ShowRep)
  {
    errr.PutEvent(feBreak);
    errr.ShowFile('Реестр созданных сопроводительных документов(Накладные на отпуск).');

    MakeNewMTabReestrforKN;
    RereadRecord;
  }
  else
  {
    errr.AbortForm;
    Message('Операция завершена. Новые документы не созданы.');
  }

   PutCommand(cmUnSelectAll);
}


//******************************************************************************
Procedure MTabReestrforKNcmMarkUnMark;
{
  if (MTabReestrforKN.Pick <> 0)
    MTabReestrforKN.Pick := 0
  else
    MTabReestrforKN.Pick := 1;

  Update Current MTabReestrforKN;

#ifdef ATL51
 RedrawCurrentAndGo (GetCurrentFormat, TRUE);
#else
 if (GetNext MTabReestrforKN = tsOk)
    CallToNeighbours(cmPosDown, #MTabReestrforKN);

 RescanPanel(#MTabReestrforKN);
#end
}


//******************************************************************************
Procedure MTabReestrforKNcmSelectAll;
{
  PushPos(#MTabReestrforKN);

  _LOOP MTabReestrforKN
    if (MTabReestrforKN.Pick <> 1)
    {
      MTabReestrforKN.Pick := 1;
      Update Current MTabReestrforKN;
    }

  PopPos(#MTabReestrforKN);

  RescanPanel(#MTabReestrforKN);
}


//******************************************************************************
Procedure  MTabReestrforKNcmUnSelectAll;
{
  PushPos(#MTabReestrforKN);

  _LOOP MTabReestrforKN
  {
    if (MTabReestrforKN.Pick <> 0)
    {
      MTabReestrforKN.Pick := 0;
      Update Current MTabReestrforKN;
    }
  }

  PopPos(#MTabReestrforKN);
  RescanPanel(#MTabReestrforKN);
}


//******************************************************************************
Procedure ProccmAlt4;
var
  _cSpSopr: comp;
{
  case CurTable of
   #MTabReestrforKN: _cSpSopr := MTabReestrforKN.SpSoprnRec;
   #MTabReestrforKN2: _cSpSopr := MTabReestrforKN2.SpSopr2nRec;
   #MTabReestrforKN3: _cSpSopr := MTabReestrforKN3.SpSopr3nRec;
  end;

  if GetFirst SpSopr where(( _cSpSopr == SpSopr.nRec)) = tsOk
  {
    SaveMyDsk(SpSopr.cMCUSL, '_MakePos201fromKN_SpSopr_cMCUSL_');

    RunInterface('KartStorage', 0);

    SaveMyDsk(comp(0), '_MakePos201fromKN_SpSopr_cMCUSL_');
  }
  else
    RunInterface('KartStorage', 0);
}
