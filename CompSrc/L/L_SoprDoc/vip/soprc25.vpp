//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 7.12 - _
// _
//********************************************************************************

// ╔═════════════════════════════════════════════════════════════════════════╗
// ║ Определяет доступное количество МЦ для акта приемки по текущей позиции  ║
// ║ расходной накладной                                                     ║
// ╟─────────────────────────────────────────────────────────────────────────╢
// ║  tRec       - NRec спецификации расх. накладной, если она не текущая    ║
// ║  tSpSoprRec - текущий NRec спецификации а акте приемки                  ║
// ║  aZero      - округление до нуля отрицательного значения                ║
// ║  tKoef      - коэффициэнт отпускных единиц                              ║
// ╚═════════════════════════════════════════════════════════════════════════╝

Function MaxKolVZ (tRec, tSpSoprRec: comp; aZero: boolean; var Koefp: double): double;
var
  tkolNakl, tKolVZ: double;
begin
  MaxKolVZ := 0;

  if tRec <> 0
    {
      PushPos(#SpSopr);
      ResetBounds(#SpSopr);
      if GetFirst SpSopr where ((tRec == SpSopr.Nrec)) <> tsOk
        {
          SetBounds(#SpSopr);
          PopPos(#SpSopr);
          Exit;
        }
    }

  koefp := fEdIzm.GetKoefOtpEd(SpSopr.cOtpEd);

  tKolNakl := SpSopr.KolFact;
  tKolVZ := double(0);

  if tRec <> comp(0)
    {
      SetBounds(#SpSopr);
      PopPos(#SpSopr);
    }

  if not IsValid(#SpOrder) //есть ли позиция в расходном ордере
    tKolNakl := double(0);
  else
    _LOOP SpSoprVZ
      //есть ли ордера по возвратным накладным и не текущая позиция в акте
      if (KatSoprVZ.dOpr <> Date(0, 0, 0))
      AND (tSpSoprRec <> SpSoprVZ.NRec)
        tKolVZ := tKolVZ + SpSoprVZ.KolFact * fEdIzm.GetKoefOtpEd(SpSoprVZ.cOtpEd) / koefp;

  MaxKolVZ := if ((tKolNakl-tKolVZ < 0) AND aZero, 0, tKolNakl-tKolVZ);

end;
