//******************************************************************************
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Логистика
// Для Штерн-Цемента
//******************************************************************************


#doc
  Диалоговое окно с вариатном выхода (со спианием или без)
#end

Window wMessegNotSpis '' EscClose, Gray; //Окно сообщения при выходе без списания
  Show at (10, 2, 65, 6);

Screen scMessegNotSpis ('', , sci1Esc);
  Show at (, , , );

Buttons
  cmSpis_, , , 'Списать', , sci1Esc;
  cmNotSpis_, , , 'Выйти без списания', , sci1Esc;
  cmCencel_, , , 'Отмена', , sci1Esc;

<<
          Внимание: накладные не списаны!

 <. Списать .> <. Выйти без списания .> <. Отмена .>

>>
end; // Screen

HandleEvent

cmInit:
  SHT_CE_ExitMet := 0;

cmSpis_:
  {

    SHT_CE_ExitMet := 2;
    CloseWindow(wMessegNotSpis);
  }

cmNotSpis_:
  {
    SHT_CE_ExitMet := 1;
    CloseWindow(wMessegNotSpis);
  }

cmCencel_:
  {
    SHT_CE_ExitMet := 0;
    CloseWindow(wMessegNotSpis);
  }
end; // HandleEvent
end; // Window

//******************************************************************************

#doc
  Взвешивание груженого АВТО
#end

Window SHT_CE_KatSopr_Full 'Взвешивание груженого АВТО' EscClose;

Screen scrSHT_CE_Full_Header
  Show at (, , , 13)
  Table KatSopr;

Fields
  KatSopr.DesGr     ('Код группы пользователей', hcSoprDocFDesGr, sci13Esc): Skip;
  KatSopr.Descr     ('Дескриптор(идентификатор) пользователя.', hcSoprDocFDesGr, sci13Esc): Skip;
  Katsopr.NSopr     ('Номер накладной. Вводится путем набора', , sci1Esc): Skip;
  KatSopr.dSopr     ('Дата выписки накладной. Вводится путем набора', , sci1Esc): [, 'DD/MM/YYYY'] , Skip;

  BDnomdes          : Skip;

  (KatSopr.FilialNo AND 3)
                    ('Вид накладной навальная или тарная')
                    : [LIST 'не задан', 'тарная', 'навальная'] , Skip;

  KatSopr.Name      ('Наименование накладной. Вводится путем набора.', , sci1Esc): Skip;

  KatNotes.Name     ('Статус документа', , sci13EnEsc): Protect;

  KatOrg.Name       : Skip;
  KatOrgF.Name      : Skip;
  KatOrgT.Name      ('Грузополучатель', , sci13EnEsc): Protect;

  KatSopr.sDover    ('Доверенное лицо', hcSoprDocFDover, sci13Esc);
  KatSopr.nDover    ('Номер доверенности, <Ctrl><F3> - выбор из доверенностей контрагентов', hcSoprDocFTTNnDov, sci13Esc);
  KatSopr.dDover    ('Дата доверенности', hcSoprDocFTTNnDov, sci1Esc);

  Trp               : Skip;

  FIO               ('Лицо, ответственное за проведение операции', hcSoprDocFPerson, sci13Esc): Protect;
  FieldInfo         : Skip;
  UserField         ('', hcSoprDocUserField, sci1Esc);

Buttons
  cmValue2, , , 'Вызов окна с транспортной информацией ', , sci1Esc;
  cmMakeOrder, , , 'Списание по накладной матценностей на складе', hcSoprDocBMakeOrd, sci1Esc;
  cmValue3, , , 'Списание по накладной матценностей на складе', hcSoprDocBMakeOrd, sci1Esc;
<<
  Группа  Дескр. Номер накладной  Выписана    ДО №             Тип
 .@@@@@@ .@@@@@@  .@@@@@@@@@@@@@ .@@@@@@@@@@@ .@@@@@@@@@@@@@@@ .@@@@@@@@@@
 Примечание       .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Статус.@@@@@@@@@@
 Контрагент       .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Грузоотправитель .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Грузополучатель  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Доверенное лицо  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 Доверенность №   .@@@@@@@@@@@@@@@@@@@@@@ Дата доверенности .@@@@@@@@@@@@@

 <.~Т~оварно-транспортная информация.>         Транспорт предприятия .@@@@

 <.       Списание ~н~а складе      .>         <.   ~О~тмена списания   .>

 Операцию провел  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 .@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end; // Screen scrSHT_CE_Full_Header

//******************************************************************************

Browse SHT_CE_full_brSpecif
  Show at (, 14, , )
  Table SpSopr;

Fields
  PrMCUsl        '*'             ('', , sci1Esc ): [1]   , Skip;
  NameMCUsl      'Наименование ' ('', , sci1Esc): [20]   , Protect;
  KodMCUsl       'Код'           ('', , sci1Esc): [12]   , Protect;
  OtpEd          'ЕдИзм'         ('', , sci1Esc): [5]    , Skip;
  SpSopr.KolFact 'Количество'    ('', , sci1Esc ): [10, 3] , NoProtect;
  SpSopr.Netto   'Вес нетто '    ('', , sci1Esc ): [10.3] , NoProtect;
  SpSopr.mTara   'Вес тары  '    ('', , sci1Esc ): [10.3] , NoProtect;
  TTN_massa_all  'Вес брутто'    ('', , sci13Esc): [10.3] , NoProtect;
  SpSopr.Price   'Цена НДЕ'      ('', , sci1Esc ): [12, 2] , Protect;
  SpSopr.VPrice  'В валюте'      ('', , sci1Esc ): [12, 2] , Skip;
  KlVal.Simvolv  'Валюта'        ('', , sci13Esc): [3]    , Skip;
  SumPrice       'Стоимость'     ('', , sci1Esc ): [12, 2] , Skip;
end; // Browse

//******************************************************************************

HandleEvent // Window SHT_CE_KatSopr_Full
cmInit:
  {
    sht_ce_tip := 1;

    SHT_CE_NRec := KatSopr.NRec;
    if (not BoundActive(tbSHT_CE))
      AddBounds(tbSHT_CE);

    if boGetTune('Ves.Corr')
      {
        SetFieldOption(#SpSopr.Netto   , ofSelectable);
        SetFieldOption(#TTN_massa_all  , ofSelectable);
      }

    PutCommand(cmValue1);
  }

cmValue1:
  {
    SelectPanel(#KatSopr);
    SelectPanel(#SpSopr);
    SelectPanel(#KatSopr);
    SelectField(#KatSopr.sDover);
  }

cmDone:
  {
    if (CurTable = #SpSopr)
      {
        UpdateTable;
        SelectPanel(#KatSopr);
      }

    if (KatSopr.dOpr = Date(0, 0, 0))
      RunWindowModal(wMessegNotSpis);
    else
      SHT_CE_ExitMet := 1;

    if (SHT_CE_ExitMet = 0)
      {
        Abort;
        Exit;
      }

    if (SHT_CE_ExitMet = 2)
      {
        SelectButton(scrSHT_CE_Full_Header, cmMakeOrder);

        UpdateTable;

        #ifdef _CheckKon_VIH_
        if NullVipRef(oCheckKon)
          GetVipRef(oCheckKon, 'KatOrg');

        if (oCheckKon.CheckDolgKon(if(KatSopr.cOrg<>0, KatSopr.cOrg, KatSopr.cOrgBase),
                            KatSopr.dsopr,
                         if (KatSopr.cVal = 0, KatSopr.Summa, KatSopr.SumVal), KatSopr.cVal))
        #else
        if (CheckDolgKon(if(KatSopr.cOrg<>0, KatSopr.cOrg, KatSopr.cOrgBase),
                            KatSopr.dsopr,
                         if (KatSopr.cVal = 0, KatSopr.Summa, KatSopr.SumVal), KatSopr.cVal))
        #end
          {
            MakeRashOrd(TRUE, 0);
          }
      }

    if (BoundActive(tbSHT_CE))
      SubBounds(tbSHT_CE);
  }

cmValue2:
  { //-- интерфейс с товарно-транспортной информацией
    if (CurTable = #SpSopr)
      {
        UpdateTable;
        SelectPanel(#KatSopr);
      }

    if (not UpdateTable)
      Exit;

    RunInterface(TTNDoc, word(coKatSopr), KatSopr.NRec);
  }

cmAccording:
  PutCommand (cmValue17);

cmValue15:
  SHT_CE_Init;

cmValue16:
  SHT_CE_Zero;

cmValue17:
  if (SHT_CE_vid = 2) // только для навальных
    SHT_CE_ImportWeigth(2);
  else
    Message('Для тарных накладных не предусмотрено использование автоматических весов', CancelButton);

cmPrintDoc:
  {
    if ((wGetTune('Ves.RereatPrn') = 1) AND
        ((KatSopr.FilialNo AND 32) <> 0) )
      {
        Message ('Накладную печатать повторно запрещено...', CancelButton);
        Abort;
        Exit;
      }

    if (CurTable = #SpSopr)
      {
        UpdateTable;
        SelectPanel(#KatSopr);
      }

    UpdateTable;

    RereadRecord(#TTNDoc);

    #ifdef _CheckKon_VIH_
    if NullVipRef(oCheckKon)
      GetVipRef(oCheckKon, 'KatOrg');

    if (not oCheckKon.CheckDolgKon(if(KatSopr.cOrg<>0, KatSopr.cOrg, KatSopr.cOrgBase),
                                        KatSopr.dsopr,
                                     if (KatSopr.cVal = 0, KatSopr.Summa, KatSopr.SumVal), KatSopr.cVal))
    #else
    if (not CheckDolgKon(if(KatSopr.cOrg<>0, KatSopr.cOrg, KatSopr.cOrgBase),
                              KatSopr.dsopr,
                           if (KatSopr.cVal = 0, KatSopr.Summa, KatSopr.SumVal), KatSopr.cVal))
    #end
        Exit;

    //------------Автоматическое занесение услуги в накладную---------------------

    if (boGetTune('Ves.AvtoUSL')
       AND (coGetTune('Ves.GrOrg') <> 0)
       AND (coGetTune('Ves.NameUsl') <> 0))
    if (GetFirst KatUsl_SHT_CE where ((coGetTune('Ves.NameUsl') == KatUsl_SHT_CE.NRec)) <> tsOk)
      Message('Услуга, указанная в настройках рабочего места весовщика, не найдена.', Information);
    else
      {
        var NeetUsl_: boolean;
        NeetUsl_ := FALSE;

        if ((NeetUsl_ = FALSE)
             AND (wGetTune('Ves.PrzUsl') = 0)
             AND (TTNDoc.cOrgAvt <> 0)) //заполнено поле автопредприятия
          if (SHT_CE_IntoInKatOrgDescr (TTNDoc.cOrgAvt, coGetTune('Ves.GrOrg')))
             NeetUsl_ := TRUE;

        if ((NeetUsl_ = FALSE)
             AND (wGetTune('Ves.PrzUsl') = 1)
             AND (KatSopr.cOrgBase <> 0)) //заполнено поле контрагента
          if (SHT_CE_IntoInKatOrgDescr (KatSopr.cOrgBase, coGetTune('Ves.GrOrg')))
             NeetUsl_ := TRUE;

        if ((NeetUsl_ = FALSE)
             AND (wGetTune('Ves.PrzUsl') = 2)
             AND (KatSopr.cGruzTO <> 0)) //заполнено поле грузополучателя
          if (SHT_CE_IntoInKatOrgDescr (KatSopr.cGruzTO, coGetTune('Ves.GrOrg')))
             NeetUsl_ := TRUE;


        if (NeetUsl_) //заносим услугу в накладную
          {
            //если такие услуги уже есть в спецификации, то удалим их

            _LOOP SpSopr where ((KatSopr.NRec == SpSopr.cSopr      AND
                                 word(2)      == SpSopr.PrMC       AND
                                 coGetTune('Ves.NameUsl') == SpSopr.cMCUSL ))
               DoDeleteCurrentSpSopr;

            //добавляем услугу
            SpSoprDefault;


            SpSopr.cOtpEd := fEdIzm.GetAktOtpEdNRec(coGetTune('Ves.NameUsl'), 2);

            SpSopr.Price   := 0;
            SpSopr.VPrice  := 0;

            //берем цену из прайса если он указан в настройках
            if (coGetTune('Ves.CenaPrice') <> 0)
              {
                if (GetFirst KlPrice where ((coGetTune('Ves.CenaPrice') == KlPrice.NRec)) = tsOk)
                  {}

                if (GetFirst Prices where ((coGetTune('Ves.CenaPrice') == Prices.cKlPrice  AND
                                         coGetTune('Ves.NameUsl') == Prices.cThing (NoIndex)
                                         )) = tsOk)
                    case KlPrice.TipMoney of
                      0: {
                            SpSopr.Price := FSRoundRub(Prices.Price);
                            CheckPrice(#SpSopr.Price)
                          }
                      1: {
                            SpSopr.VPrice := FSRoundVal(Prices.SumVal);
                            SpSopr.Price := FSRoundRub(Prices.Price);
                          }
                      2: {
                            SpSopr.VPrice := FSRoundVal(Prices.SumVal);
                            CheckPrice(#SpSopr.VPrice);
                          }
                    end;
               }

            SpSopr.cMCUSL  := coGetTune('Ves.NameUsl');
            SpSopr.cVal    := KatSopr.cValut;
            SpSopr.PrMC    := word(2);
            SpSopr.cSopr   := KatSopr.NRec;
            SpSopr.Kol     := 1;
            SpSopr.VidSopr := KatSopr.VidSopr;
            SpSopr.KolFact := 1;
            SpSopr.dSopr   := KatSopr.dSopr;
            SpSopr.dOprttn := KatSopr.dOpr;
            SpSopr.cParty  := 0;
            SpSopr.KolOpl  := 1;
            SpSopr.ProcUb  := 0;

            SpSopr.Npp := oSpNext.GetSpNppNext(KatSopr.NRec, coSpSopr);

            if (Insert current SpSopr <> tsOk) {};

            if (KatUsl.TYPEUSL = 1) //если это расчетная услуга
              {
                if (KatSopr.cVal = 0)
                  RunInterface('GETPAR2', 1, SpSopr.NRec, KatUsl.NRec,
                                      SpSopr.Price, SpSopr.KolFact, word(coSpSopr));
                else
                  RunInterface('GETPAR2', 1, SpSopr.NRec, KatUsl.NRec,
                                      SpSopr.VPrice, SpSopr.KolFact, word(coSpSopr));

                SpSopr.KolOpl := SpSopr.KolFact;
                if (SpSopr.Kol = 0.0)
                  SpSopr.KolOpl := SpSopr.KolFact;

                if (KatSopr.cVal = 0)
                  CheckPrice(#SpSopr.Price)
                else
                  CheckPrice(#SpSopr.VPrice);

                UpDate current SpSopr;
              }

            RecalcNalogs(KatUsl.cGrNal, SpSopr.cGrNal);
            UpDate current SpSopr;
            RescanPanel(#SpSopr);
            RereadRecord(#SpSopr);
            RecalcSumm(TRUE);
          }

      }

    SHT_CE_CheckTTNDoc;
    PrintDocument;

    RescanPanel(#SpSopr);
    RereadRecord(#SpSopr);

    // накладная уже напечатана
    set KatSopr.FilialNo := KatSopr.FilialNo OR 32;
  }

//******************************************************************************

cmHotKeys:
  if (CurTable = #SpSopr)
    {
      SHT_CE_Menu_My_On;
      PutHotCommand(RunMenu('mnuSHT_CE_2_SpSopr'));
      SHT_CE_Menu_My_Off;
    }
  else
    PutHotCommand(RunMenu('mnuSHT_CE_SopDocRashSpSopr'));

cmPlPor32:
  RunMenu('Sell_Rep');

cmPlPor33:
  SHT_CE_NRec := KatSopr.NRec;

cmMakeOrder:
  if (CanEditDocument)
    {
      if (CurTable = #SpSopr)
        {
          UpdateTable;
          SelectPanel(#KatSopr);
        }

      UpdateTable;
      #ifdef _CheckKon_VIH_
      if NullVipRef(oCheckKon)
        GetVipRef(oCheckKon, 'KatOrg');

      if (not oCheckKon.CheckDolgKon(if(KatSopr.cOrg<>0, KatSopr.cOrg, KatSopr.cOrgBase),
                                        KatSopr.dsopr,
                                     if (KatSopr.cVal = 0, KatSopr.Summa, KatSopr.SumVal), KatSopr.cVal))
      #else
      if (not CheckDolgKon(if(KatSopr.cOrg<>0, KatSopr.cOrg, KatSopr.cOrgBase),
                              KatSopr.dsopr,
                           if (KatSopr.cVal = 0, KatSopr.Summa, KatSopr.SumVal), KatSopr.cVal))
      #end
         Exit;

      MakeRashOrd(TRUE, 0);
    }

cmValue3: // удаление ордеров
  {
    if (GetFirst SklOrder
          where ((KatSopr.NRec == SklOrder.cSopr)) <> tsOk)
      Exit;

    var tdord: Date;  tdord := SklOrder.dOrd;

    if (not CanDelOrdEx(true, false))
      set KatSopr.dOpr := tdord;
    else
      if (not DeleteOrders(TRUE))
        set KatSopr.dOpr := tdord;
  }

cmAttrib: // SVG
  if (KatUsl.TYPEUSL = 1)
    {
      if (KatSopr.cVal = 0)
        RunInterface('GETPAR2', 1, SpSopr.NRec, KatUsl.NRec,
                                SpSopr.Price, SpSopr.KolFact, word(coSpSopr));
      else
        RunInterface('GETPAR2', 1, SpSopr.NRec, KatUsl.NRec,
                                SpSopr.VPrice, SpSopr.KolFact, word(coSpSopr));

      SpSopr.KolOpl := SpSopr.KolFact;
      if (SpSopr.Kol = 0.0)
        SpSopr.KolOpl := SpSopr.KolFact;

      if (KatSopr.cVal = 0)
        CheckPrice(#SpSopr.Price)
      else
        CheckPrice(#SpSopr.VPrice);

      UpDate current SpSopr;
      RescanPanel(#SpSopr);
    }

cmValue18: // МЦ из прайс-листа
  {
    UpdateTable;
    ProcessCommand(cmSetDefault);
    set SpSopr.PrMC := 1;
    GetMCUSLPrl;
    RereadRecord(#SpSopr);
  }

cmValue19: // МЦ из ДО
  {
    UpdateTable;
    ProcessCommand(cmSetDefault);
    set SpSopr.PrMC := 1;
    GetMCUslSopr;
    RereadRecord(#SpSopr);
  }

cmValue20: // Услуга из прайс-листа
  {
    UpdateTable;
    ProcessCommand(cmSetDefault);
    set SpSopr.PrMC := 2;
    GetMCUSLPrl;
    RereadRecord(#SpSopr);
  }

cmValue14: // Услуга из каталога
  {
    UpdateTable;
    ProcessCommand(cmSetDefault);
    set SpSopr.PrMC := 2;
    GetMCUSLKat;
    RereadRecord(#SpSopr);
  }

end; // HandleEvent Window SHT_CE_KatSopr_Full
end; // Window SHT_CE_KatSopr_Full

//******************************************************************************
