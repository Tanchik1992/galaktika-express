var DocIcons0: array[1..3] of string;
var DocIcons1: array[1..3] of string;
var DocIcons2: array[1..3] of string;
var DocIcons3: array[1..3] of string;
var DocIcons4: array[1..3] of string;
var DocIcons5: array[1..3] of string;

procedure InitDocIconsArray;
{
  DocIcons0[1] := #AddComp('L_DOGOVOR')'BmpOformLeave';
  DocIcons0[2] := #AddComp('L_DOGOVOR')'BmpOformFolderClosed';
  DocIcons0[3] := #AddComp('L_DOGOVOR')'BmpOformFolderOpened';

  DocIcons1[1] := #AddComp('L_DOGOVOR')'BmpIspolLeave';
  DocIcons1[2] := #AddComp('L_DOGOVOR')'BmpIspolFolderClosed';
  DocIcons1[3] := #AddComp('L_DOGOVOR')'BmpIspolFolderOpened';

  DocIcons2[1] := #AddComp('L_DOGOVOR')'BmpPriosLeave';
  DocIcons2[2] := #AddComp('L_DOGOVOR')'BmpPriosFolderClosed';
  DocIcons2[3] := #AddComp('L_DOGOVOR')'BmpPriosFolderOpened';

  DocIcons3[1] := #AddComp('L_DOGOVOR')'BmpRastLeave';
  DocIcons3[2] := #AddComp('L_DOGOVOR')'BmpRastFolderClosed';
  DocIcons3[3] := #AddComp('L_DOGOVOR')'BmpRastFolderOpened';

  DocIcons4[1] := #AddComp('L_DOGOVOR')'BmpZakrLeave';
  DocIcons4[2] := #AddComp('L_DOGOVOR')'BmpZakrFolderClosed';
  DocIcons4[3] := #AddComp('L_DOGOVOR')'BmpZakrFolderOpened';

  DocIcons5[1] := #AddComp('L_DOGOVOR')'BmpAnnulLeave';
  DocIcons5[2] := #AddComp('L_DOGOVOR')'BmpAnnulFolderClosed';
  DocIcons5[3] := #AddComp('L_DOGOVOR')'BmpAnnulFolderOpened';
}

function GetDocTreeIcon(DocTiDk: word; DocStatus: word; DocTreeType: byte): string;
var i: byte;
{
  GetDocTreeIcon := '';
  case DocTreeType of
    ntfText : i := 1;
    ntfClose: i := 2;
    ntfOpen : i := 3;
  end;
  case DocTiDk of
    400..401,403..439 : // договора, соглашения, планы
      case DocStatus of
        0: GetDocTreeIcon := DocIcons0[i];//'оформляемый'
        1: GetDocTreeIcon := DocIcons1[i];//'исполняемый'
        2: GetDocTreeIcon := DocIcons2[i];//'приостановленный'
        3: GetDocTreeIcon := DocIcons3[i];//'расторгнутый'
        4: GetDocTreeIcon := DocIcons4[i];//'закрытый'
      end;
    402 : // акты сверки
      case DocStatus of
        0: GetDocTreeIcon := DocIcons0[i];//'оформляемый'
        1: GetDocTreeIcon := DocIcons5[i];//'аннулированный'
        2: GetDocTreeIcon := DocIcons4[i];//'проведенный'
      end;
    440..443 : // наряд-заказы, распоряжения на отгрузку
      case DocStatus of
        0: GetDocTreeIcon := DocIcons0[i];//'оформляемый'
        1: GetDocTreeIcon := DocIcons1[i];//'исполняемый'
        3: GetDocTreeIcon := DocIcons3[i];//'отмененный'
        4: GetDocTreeIcon := DocIcons4[i];//'закрытый'
        5: GetDocTreeIcon := DocIcons5[i];//'на аннулирование'
      end;
    445 : // схемы связей между документами
      case DocStatus of
        0: GetDocTreeIcon := DocIcons0[i];//'оформляемый'
        1: GetDocTreeIcon := DocIcons1[i];//'исполняемый'
        2: GetDocTreeIcon := DocIcons3[i];//'отмененный'
        3: GetDocTreeIcon := DocIcons4[i];//'закрытый'
      end;
  end;
}

#ifdef SHOW_NOTES_ICONS
var oExtAtrForIcons : iExtAttr;

function GetDocTreeIconEx(DocTiDk: word; DocStatus: word; DocTreeType: byte; pKatNote : comp): string;
{
  GetDocTreeIconEx := '';

  if ( (DocTiDk = word(400)) OR (DocTiDk = word(401)) OR (DocTiDk = word(403)))
    if boGetTune('Dog.ShowUserIcons')
      {
        var Str : string;

        case DocTreeType of
          ntfText : Str := 'Иконка. Лист';
          ntfClose: Str := 'Иконка. Папка закрыта';
          ntfOpen : Str := 'Иконка. Папка открыта';
        end;

        GetDocTreeIconEx := oExtAtrForIcons.sGetAttr(coKatNotes, pKatNote, Str);
      }

  if GetDocTreeIconEx = ''
    GetDocTreeIconEx := GetDocTreeIcon(DocTiDk, DocStatus, DocTreeType);
}
#end
