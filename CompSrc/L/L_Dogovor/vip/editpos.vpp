//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 5.8x - логистика
// Проверка возможности редактирования договора/ПКП
//
//********************************************************************************

//--------- Проверка возможности редактирования -----------------------------

Function NotEditPos(_DesGr: string[4]; _Descr: string[20]; msg: boolean): boolean; // TRUE - запрещать
{
  if (
      ( wGetTune('Dogovor.Visible') = 0 )
       AND
      (
      ( ( CurVisible = dcGrpRead ) OR ( CurVisible = dcOwnModifAllRead ) )
       AND
      ( _Descr <> CurDescr )
       OR
      ( ( CurVisible = dcGrpModif ) OR ( CurVisible = dcGrpModifAllRead ) )
       AND
      ( _DesGr <> CurDesGr )
      )
     )
    {
      if msg
        Message('Настройка ограничивает Ваши права по использованию данной функции!', Information);

      NotEditPos := TRUE;
    }
  else
    NotEditPos := FALSE;
}

Function NotEditDogPos(msg: boolean): boolean; // TRUE - запрещать
{
  NotEditDogPos := NotEditPos(Dogovor.DesGr, Dogovor.Descr, msg);
}

Function NotEditPlanPos(msg: boolean): boolean; // TRUE - запрещать
{
  NotEditPlanPos := NotEditPos(CalPlan.DesGr, CalPlan.Descr, msg);
}

//--------- Проверка возможности редактирования по статусу -----------------

Function NotEditPosStatus(wTiDk, wStatus: word; pNote: comp; msg: boolean): boolean; // TRUE - запрещать
var code: boolean;
{
  if ( oStatUser.Stat_Nastr(wTiDk) )
    code := NOT oStatUser.Descr_Stat_D(FALSE, wTiDk, CurDescr, pNote)
  else
    code := wStatus <> 0;

  if ( code AND msg )
    {
      Message('Вам запрещено редактировать '
            + if(wTiDk = 400, 'договор', if(wTiDk = 401, 'соглашение', 'пункт календарного плана'))
            + ' в статусе "' + KatNotes.Name + '" !', Information + OkButton);
    }

  NotEditPosStatus := code;
}

Function NotEditDogPosStatus(msg: boolean): boolean; // TRUE - запрещать
{
  NotEditDogPosStatus := NotEditPosStatus(Dogovor.TiDk, Dogovor.Status, Dogovor.cNote, msg);
}

Function NotEditPlanPosStatus(msg: boolean): boolean; // TRUE - запрещать
{
  NotEditPlanPosStatus := NotEditPosStatus(word(403), CalPlan.Status, CalPlan.cNote, msg);
}

//--------- Проверка возможности редактирования -----------------------------

Function EditDogPosEnabled(msg1, msg2: boolean): boolean; // FALSE - запрещено редактирование документа
{
  EditDogPosEnabled := true;

  if NotEditDogPos(msg1)
    EditDogPosEnabled := false
  else
    if NotEditDogPosStatus(msg2)
      EditDogPosEnabled := false;
}

Function EditPlanPosEnabled(msg: boolean): boolean; // FALSE - запрещено редактирование документа
{
  EditPlanPosEnabled := true;
  
  if NotEditPlanPos(msg) 
    EditPlanPosEnabled := false
  else
    if NotEditPlanPosStatus(msg)
      EditPlanPosEnabled := false;

}
