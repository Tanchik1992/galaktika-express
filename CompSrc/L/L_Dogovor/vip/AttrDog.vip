//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 7.12 - Логистика
// Интерфейс просмотра реквизитов контрагента договора
//********************************************************************************

#include katorg.vih
#include aStatUser.vih // права доступа
#include fpCO.vih
#include CalPlan.vih

#doc
Интерфейс просмотра реквизитов контрагента договора
#end
Interface AttrDog 'Просмотр реквизитов контрагента' ('', hcDogRekvizitKontr, sci13Esc) EscClose;

  Show at (, , 79, 23);

Create view loDogViewOrg
var
//**********************
  pNumber
    : word;
//**********************
  pDogovor
, pOrg
, pOrg1
, pOrg2
, pBank
    : comp;
//**********************
  oCheckKon
    : CheckKonObj;

  oStatUser
    : VipStatUser;
//**********************

As select *

From
  AttrDog
, AttrDog  AttrDog1
, Dogovor
, Dogovor  Dogovor1
, CalPlan
, KatNotes
, KatOrg
, KatOrg   KatOrg1
, KatOrg   KatOrg2
, Persons
, Catalogs
, Appointments
, KatBank
, KatCity
, KatCity  KatCity1
, KatCity  KatCity2
, KatState
, KatState KatState1
, KatState KatState2
, FPCO
, FPCO     KatPodrOtv
, Org
, crmPersons
, VClass
, SpDocs
, IerDog
#ifdef GAL8_1
, DovFio
, DovFio DovMyFio
#end
#ifdef __NIOKR__
, KatPodr KuratPodr
#end
Where
((
    pDogovor             == Dogovor.nRec
AND Dogovor.nRec         == AttrDog.cDogovor

AND pOrg                 == KatOrg.nRec
AND KatOrg.cState        == KatState.nRec
AND KatOrg.cCity         == KatCity.nRec

AND pOrg1                == KatOrg1.nRec
AND KatOrg1.cState       == KatState1.nRec
AND KatOrg1.cCity        == KatCity1.nRec

AND pOrg2                == KatOrg2.nRec
AND KatOrg2.cState       == KatState2.nRec
AND KatOrg2.cCity        == KatCity2.nRec

AND AttrDog.cPodr        == KatPodrOtv.nRec

#ifdef GAL8_1
AND AttrDog.cDovFio      == DovFio.nRec
AND AttrDog.cDovMyFio    == DovMyFio.nRec
#end //GAL8_1

AND pBank                == KatBank.nRec
AND Dogovor.cNote        == KatNotes.nRec

// Данные по контактным лицам из модуля Клиент
AND pOrg                 == Org.cKatOrg
AND crmPersons.cJobTitle == VClass.Atl_NRec

#ifdef __NIOKR__
AND  Dogovor.cCurPodr    == KuratPodr.nRec
#end
))
;

Parameters
  pNumber  // номер контрагента 0 - своя организаци 1 - нет
, pDogovor // Dogovor.nRec
;

var oChkLink: CheckLinksObj;

Procedure SetTuneBounds(ChkInt: boolean);
{
}

#include GetCurTunes.vpp
#include EditPos.vpp  // Проверка возможности редактирования

Screen scAttrDogOrg ('Реквизиты контрагента');
  Show at (, , , 3);
  Table AttrDog;

Fields
//****************************************************************************
  KatOrg.Name   ('Наименование предприятия')
                : PickButton, Protect, QuickChoice;
//****************************************************************************
  KatOrg.TipOrg ('Тип предприятия: АО, НПО, ЗАО, СП, ИП и т.д.')
                : PickButton, Protect;
//****************************************************************************
  sGetTune('KatOrg.FldView.UNN')
                : Skip;
//****************************************************************************
  KatOrg.UNN    ('Учетный/идентификационный номер налогоплательщика: УНН/ИНН')
                : PickButton, Protect, QuickChoice;
//****************************************************************************
  sGetTune('KatOrg.FldView.OKPO')
                : Skip;
//****************************************************************************
  KatOrg.OKPO   ('Код ОКПО предприятия')
                : PickButton, Protect;
//****************************************************************************
  sGetTune('KatOrg.FldView.OKONH')
                : Skip;
//****************************************************************************
  KatOrg.OKONH  ('Код ОКОНХ предприятия')
                : PickButton, Protect;
//****************************************************************************
  KatState.Name ('Государство', , sci1EnEsc)
                : Skip, { Font = { BackColor = ColorSkip } };
//****************************************************************************
  KatCity.Name  ('Город', , sci1EnEsc)
                : Skip, { Font = { BackColor = ColorSkip } };
//****************************************************************************
  KatOrg.Addr   ('Адрес предприятия')
                : PickButton, Protect;
//****************************************************************************
<<
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@
 .@@@@.@@@@@@@@@@@@@@@@@@.@@@@@.@@@@@@@@@@@@@@@@@.@@@@@@.@@@@@@@@@@@@@@@@@@@@@
`Страна`.@@@@@@@@@@@`Город`.@@@@@@@@@@@@@`Адрес`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end; // Screen scAttrDogOrg

Screen scAttrDogPlat ('Исполнитель/получатель');
  Show at (, 4, , 7);
  Table AttrDog;

Fields
//****************************************************************************
  KatOrg2.Name   ('Наименование предприятия')
                 : PickButton, Protect, QuickChoice;
//****************************************************************************
  KatOrg2.TipOrg ('Тип предприятия: АО, НПО, ЗАО, СП, ИП и т.д.')
                 : PickButton, Protect;
//****************************************************************************
  sGetTune('KatOrg.FldView.UNN')
                 : Skip;
//****************************************************************************
  KatOrg2.UNN    ('Учетный/идентификационный номер налогоплательщика: УНН/ИНН')
                 : PickButton, Protect, QuickChoice;
//****************************************************************************
  sGetTune('KatOrg.FldView.OKPO')
                 : Skip;
//****************************************************************************
  KatOrg2.OKPO   ('Код ОКПО предприятия')
                 : PickButton, Protect;
//****************************************************************************
  sGetTune('KatOrg.FldView.OKONH')
                 : Skip;
//****************************************************************************
  KatOrg2.OKONH  ('Код ОКОНХ предприятия')
                 : PickButton, Protect;
//****************************************************************************
  KatState2.Name ('Государство', , sci1EnEsc)
                 : Skip, { Font = { BackColor = ColorSkip } };
//****************************************************************************
  KatCity2.Name  ('Город', , sci1EnEsc)
                 : Skip, { Font = { BackColor = ColorSkip } };
//****************************************************************************
  KatOrg2.Addr   ('Адрес предприятия')
                 : PickButton, Protect;
//****************************************************************************
<<
 Исполнитель/получатель
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@
 .@@@@.@@@@@@@@@@@@@@@@@@.@@@@@.@@@@@@@@@@@@@@@@@.@@@@@@.@@@@@@@@@@@@@@@@@@@@@
`Страна`.@@@@@@@@@@@`Город`.@@@@@@@@@@@@@`Адрес`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end; // Screen scAttrDogPlat

Screen scAttrDogBank ('Плательщик (получатель платежей) за контрагента');
  Show at (, 8, , 16);
  Table AttrDog;

Fields
//****************************************************************************
  KatOrg1.Name   ('Наименование предприятия')
                 : PickButton, Protect, QuickChoice;
//****************************************************************************
  KatOrg1.TipOrg ('Тип предприятия: АО, НПО, ЗАО, СП, ИП и т.д.')
                 : PickButton, Protect;
//****************************************************************************
  sGetTune('KatOrg.FldView.UNN')
                 : Skip;
//****************************************************************************
  KatOrg1.UNN    ('Учетный/идентификационный номер налогоплательщика: УНН/ИНН')
                 : PickButton, Protect, QuickChoice;
//****************************************************************************
  sGetTune('KatOrg.FldView.OKPO')
                 : Skip;
//****************************************************************************
  KatOrg1.OKPO   ('Код ОКПО предприятия')
                 : PickButton, Protect;
//****************************************************************************
  sGetTune('KatOrg.FldView.OKONH')
                 : Skip;
//****************************************************************************
  KatOrg1.OKONH  ('Код ОКОНХ предприятия')
                 : PickButton, Protect;
//****************************************************************************
  KatState1.Name ('Государство', , sci1EnEsc)
                 : Skip, { Font = {BackColor = ColorSkip}};
//****************************************************************************
  KatCity1.Name  ('Город', , sci1EnEsc)
                 : Skip, { Font = {BackColor = ColorSkip}};
//****************************************************************************
  KatOrg1.Addr   ('Адрес предприятия')
                 : PickButton, Protect;
//****************************************************************************
  KatBank.Name   ('Наименование банка')
                 : PickButton, Protect, QuickChoice;
//****************************************************************************
  KatBank.Addr   ('Адрес банка')
                 : PickButton, Protect;
//****************************************************************************
  KatBank.MFO1   ('БИК/код МФО банка')
                 : PickButton, Protect, QuickChoice;
//****************************************************************************
  KatBank.Schet1 ('Расчетный счет банка')
                 : PickButton, Protect;
//****************************************************************************
  KatBank.MFO2   ('БИК/код МФО банка')
                 : PickButton, Protect;
//****************************************************************************
  KatBank.Schet2 ('Расчетный счет банка')
                 : PickButton, Protect;
//****************************************************************************
<<
 Плательщик (получатель платежей) за контрагента
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@
 .@@@@.@@@@@@@@@@@@@@@@@@.@@@@@.@@@@@@@@@@@@@@@@@.@@@@@@.@@@@@@@@@@@@@@@@@@@@@
`Страна`.@@@@@@@@@@@`Город`.@@@@@@@@@@@@@`Адрес`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Банк`       .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Адрес банка`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                         БИК/код МФО банка            Счет
           Основной:    .@@@@@@@@@@@@@@@@@    .@@@@@@@@@@@@@@@@@@@
           Для РКЦ:     .@@@@@@@@@@@@@@@@@    .@@@@@@@@@@@@@@@@@@@
>>
end; // Screen scAttrDogBank

Screen scAttrDogPeople ('Реквизиты физических лиц', , sci13Esc)
  Show at (, 17, ,);
  Table AttrDog;

Fields
//****************************************************************************
  AttrDog.Sign_My_Post ('Должность подписавшего')
                       : PickButton, NoProtect;
//****************************************************************************
  AttrDog.Sign_My_Fio  ('Фамилия, имя, отчество подписавшего')
                       : PickButton, NoProtect;
//****************************************************************************
  AttrDog.Sign_My_Osn  ('Основание (доверенность)', , sci1Esc)
                       : NoProtect;
//****************************************************************************
  AttrDog.Otv_My_Post  ('Должность ответственного')
                       : PickButton, NoProtect;
//****************************************************************************
  AttrDog.Otv_My_Fio   ('Фамилия, имя, отчество ответственного')
                       : PickButton, NoProtect;
//****************************************************************************
  KatPodrOtv.Name      ('Центр ответственности')
                       : PickButton;
//****************************************************************************
  AttrDog.Cont_My_fio  ('Контактное лицо')
                       : PickButton, NoProtect;
//****************************************************************************
  AttrDog.Cont_My_addr ('Адрес контактного лица')
                       : PickButton, NoProtect;
//****************************************************************************
  #ifdef __NIOKR__
  KuratPodr.Name       ('Курирующее подразделение')
                       : PickButton, Protect;
  #end
//******************************************************************************

  #ifdef GAL8_1
  DovMyFIO.Name        ('Доверенное лицо')
                       : PickButton, Protect;
  #end //GAL8_1
//****************************************************************************
<<
`Подписал`       .@@@@@@@@@@@@@@@@@@@@@@@    `ФИО`.@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Основание(доверенность)`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Ответственный`  .@@@@@@@@@@@@@@@@@@@@@@@    `ФИО`.@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Центр ответственности`  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Контактное лицо`.@@@@@@@@@@@@@@@@@@@@@@@`Контакт`.@@@@@@@@@@@@@@@@@@@@@@@@@@@
 #ifdef __NIOKR__
`Курирующее подразделение`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 #end
 #ifdef GAL8_1
`Доверенное лицо`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 #end //GAL8_1
>>
end; // Screen scAttrDogPeople;

Screen scAttrDogPeople1 ('Реквизиты физических лиц', , sci1Esc)
  Show at (, 17, ,);
  Table AttrDog;

Fields
//****************************************************************************
  AttrDog.Sign_Post ('Должность подписавшего')               : NoProtect;
//****************************************************************************
  AttrDog.Sign_Fio  ('Фамилия, имя, отчество подписавшего')  : NoProtect;
//****************************************************************************
  AttrDog.Sign_Osn  ('Основание (доверенность)')             : NoProtect;
//****************************************************************************
  AttrDog.Otv_Post  ('Должность ответственного')             : NoProtect;
//****************************************************************************
  AttrDog.Otv_fio   ('Фамилия, имя, отчество ответственного'): NoProtect;
//****************************************************************************
  AttrDog.Cont_fio  ('Контактное лицо')                      : NoProtect;
//****************************************************************************
  AttrDog.Cont_addr ('Адрес контактного лица')               : NoProtect;
//****************************************************************************
  #ifdef GAL8_1
  DovFIO.Name       ('Доверенное лицо', , sci13Esc): PickButton, Protect;
  #end //GAL8_1
//****************************************************************************
<<
`Подписал`       .@@@@@@@@@@@@@@@@@@@@@@@    `ФИО`.@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Основание(доверенность)`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Ответственный`  .@@@@@@@@@@@@@@@@@@@@@@@    `ФИО`.@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Контактное лицо`.@@@@@@@@@@@@@@@@@@@@@@@`Контакт`.@@@@@@@@@@@@@@@@@@@@@@@@@@@
 #ifdef GAL8_1
`Доверенное лицо`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 #end //GAL8_1
>>
end; // Screen scAttrDogPeople1;

//****************************************************************************
Procedure MyProtectAttrDog;
var boNeedProtect: boolean;
{

  if EditDogPosEnabled(FALSE, FALSE)
    boNeedProtect := pNumber <> 1
  else
    boNeedProtect := pNumber = 1;

  SetFieldProtected(#AttrDog.Sign_Post, boNeedProtect);
  SetFieldProtected(#AttrDog.Sign_Fio , boNeedProtect);
  SetFieldProtected(#AttrDog.Sign_Osn , boNeedProtect);
  SetFieldProtected(#AttrDog.Otv_Post , boNeedProtect);
  SetFieldProtected(#AttrDog.Otv_Fio  , boNeedProtect);
  SetFieldProtected(#AttrDog.Cont_Fio , boNeedProtect);
  SetFieldProtected(#AttrDog.Cont_Addr, boNeedProtect);
  #ifdef GAL8_1
  SetFieldProtected(#DovFIO.Name      , boNeedProtect);
  #end
}

var wParams1, wParams2: word;
var sParams1, sParams2: string;

#doc
Окно параметров модификации
#end
Window winParams 'Параметры модификации' EscClose, DoAccept;
  Show at (, , 51, 13);

Screen scParams(, , sci1EnEsc);
  Bevel b1 { 0, 2, 0, 3, bsLowered, bsHorizontal };
Fields
  sParams1: Skip, { Font = { Bold = TRUE } };
  sParams2: Skip, { Font = { Bold = TRUE } };
  wParams1 ('Задайте документы модификации', , sci13EnEsc): NoProtect;
  wParams2: NoProtect;
Buttons
  cmOK, Default, , 'Ввод - формирование соглашений', , sci1Esc;
  cmCancel , , , 'Отмена', , sci1Esc;
<<
 Предыдущее значение:.@@@@@@@@@@@@@@@@@@@@@@@@@@
 Новое значение:     .@@@@@@@@@@@@@@@@@@@@@@@@@@

  `Модификация`
   [.] спецификация документов`
   [.] подчиненные соглашения`
   [.] пункты календарного плана`

   [.] только при совпадении предыдущего значения`
   [.] не модифицировать документы в статусе "закрытый"`

  <. Продолжить .> <. Отмена     .>
>>
end; // Screen

Panel p1

HandleEvent

  cmCheckField:
    SetCommandEnabled(cmOk, wParams1 <> 0);

end;

end;

HandleEvent

  cmInit:
    {
      wParams1 := 0;
      wParams2 := 0;

      DisableCommand(cmOk);
    }

  cmOk:
    {
      PutCommand(cmDefault);
    }

end;

end; // Window

Function GetFPCOName(pFpCO: comp): string;
{
  if ( GetFirst FPCO where (( pFpCO == FPCO.nRec )) = tsOK )
    GetFPCOName := FPCO.Name
  else
    GetFPCOName := '-= НЕ ЗАДАНО =-';
}

Procedure SetCOInSpDocs(wTiDk: word; pDoc, pOldPodr: comp);
{
  // изменить в спецификации договора/соглашения
  if ( (wParams1 and 1) <> 0 )
    if ( (wParams2 and 1) = 0 )
      update SpDocs where (( wTiDk == SpDocs.TiDk AND pDoc == SpDocs.cDoc ))
        set SpDocs.cOtvPodr := AttrDog.cPodr
    else
    // только при совпадении предыдущего значения
      _LOOP SpDocs where (( wTiDk == SpDocs.TiDk AND pDoc == SpDocs.cDoc ))
        if ( SpDocs.cOtvPodr = pOldPodr )
          update current SpDocs set SpDocs.cOtvPodr := AttrDog.cPodr;
}

Procedure SetCOInCalPlan(pDoc, pOldPodr: comp);
{
  // изменить в ПКП
  if ( (wParams1 and 4) <> 0 )
    _LOOP CalPlan where (( pDoc == CalPlan.cDogovor ))
      if (
          ( ( (wParams2 and 1) = 0 ) OR ( CalPlan.cOtvPodr = pOldPodr ) )
            AND
          ( ( (wParams2 and 2) = 0 ) OR ( CalPlan.Status <> 4 ) )
         )

        {
          update current CalPlan set CalPlan.cOtvPodr := AttrDog.cPodr;

          // спецификация ПКП всегда должна сожержать те же ссылки на ЦО, что и ПКП
          update SpDocs where (( word(403) == SpDocs.TiDk AND CalPlan.nRec == SpDocs.cDoc ))
            set SpDocs.cOtvPodr  := CalPlan.cOtvPodr
              , SpDocs.cPlatPodr := CalPlan.cPlatPodr;
        }
}

Procedure UpDate_Dogovor;
{
  if NOT EditDogPosEnabled(FALSE, FALSE)
    Exit;

  if ( pNumber = 0 ) // редактируем свою организацию
    {
      Dogovor.cMyOrg := pOrg;

      if ( (Dogovor.Direct and 1) = 1 ) // сбыт
        {
          Dogovor.cPol      := pOrg1;
          Dogovor.cBankPol  := pBank;
          Dogovor.cGrOtp    := pOrg2;
        }
      else
        {
          Dogovor.cPlat     := pOrg1;
          Dogovor.cBankPlat := pBank;
          Dogovor.cGrPol    := pOrg2;
        }

      update current Dogovor;

      var pOldPodr: comp;

      if ( GetFirst AttrDog1 where (( pDogovor == AttrDog1.cDogovor )) = tsOk )
        pOldPodr := AttrDog1.cPodr
      else
        pOldPodr := 0;

      if ( pOldPodr <> AttrDog.cPodr )
        if ( Message('Изменился центр ответственности.'#13#13
                   + 'Изменить ЦО в подчиненных документах и/или спецификациях?', Confirmation + YesNo ) = cmYes )
          {
            sParams1 := GetFPCOName(pOldPodr);
            sParams2 := GetFPCOName(AttrDog.cPodr);

            ClusterDisabledField(#wParams1, 0);

            if ( RecordExists IerDog where (( Dogovor.nRec == IerDog.cUpRec AND (IerDog.cUpRec <> IerDog.cRec) )) <> tsOK )
              {
                if ( RecordExists CalPlan where (( Dogovor.nRec == CalPlan.cDogovor )) <> tsOK )
                  if ( RecordExists SpDocs where (( if(Dogovor.cDogovor = 0, 400, 401)
                                                                 == SpDocs.TiDk AND
                                                    Dogovor.nRec == SpDocs.cDoc )) <> tsOK )
                    ClusterDisabledField(#wParams1, 1 + 2 + 4)
                  else
                    ClusterDisabledField(#wParams1, 2 + 4)
                else
                  ClusterDisabledField(#wParams1, 2);
              }

            if ( RunWindowModal(winParams) <> cmCancel )
              {
                // изменить в спецификации текущего договора/соглашения
                SetCOInSpDocs(if(Dogovor.cDogovor = 0, 400, 401), Dogovor.nRec, pOldPodr);

                // изменить в ПКП текущего договора/соглашения
                SetCOInCalPlan(Dogovor.nRec, pOldPodr);

                // изменить в подчиненных соглашениях
                if ( (wParams1 and 2) <> 0 )
                  _LOOP IerDog where (( Dogovor.nRec == IerDog.cUpRec AND
                                        IerDog.cRec  == Dogovor1.nRec ))
                    {
                      // текущий договор/соглашение не рассматриваем
                      if ( IerDog.cRec = Dogovor.nRec )
                        Continue;

                      // не рассматриваем закрытые документы
                      if ( ( Dogovor1.Status = 4 ) AND ( (wParams2 and 2) = 2 ) )
                        Continue;

                      if ( GetFirst FastFirstRow AttrDog1 where (( IerDog.cRec == AttrDog1.cDogovor )) = tsOk )
                        if ( ( (wParams2 and 1) = 0 ) OR ( AttrDog1.cPodr = pOldPodr ) )
                          update current AttrDog1 set AttrDog1.cPodr := AttrDog.cPodr;

                      // изменить в спецификации договора/соглашения
                      SetCOInSpDocs(401, IerDog.cRec, pOldPodr);

                      // изменить в ПКП договора/соглашения
                      SetCOInCalPlan(IerDog.cRec, pOldPodr);
                    }
              }
          }
    }
  else
    {
      var Buf: type$Dogovor;
      Buf := Dogovor.Buffer;

      Dogovor.cOrg := pOrg;

      if ( (Dogovor.Direct and 1) = 0 ) // снабжение
        {
          Dogovor.cPol      := pOrg1;
          Dogovor.cBankPol  := pBank;
          Dogovor.cGrOtp    := pOrg2;
        }
      else
        {
          Dogovor.cPlat     := pOrg1;
          Dogovor.cBankPlat := pBank;
          Dogovor.cGrPol    := pOrg2;
        }

      update current Dogovor;

      if (
          ( Buf.cOrg <> Dogovor.cOrg )
           OR
          ( Buf.cPol <> Dogovor.cPol )
           OR
          ( Buf.cPlat <> Dogovor.cPlat )
         )
        if ( RecordExists CalPlan where (( Dogovor.nRec == CalPlan.cDogovor )) = tsOk )
          {
            var LL: tCalPlanObjInterface;
            GetVipRef(LL, 'CalPlan');

            _LOOP CalPlan where (( Dogovor.nRec == CalPlan.cDogovor ))
              LL.ChangeKontr(Dogovor.nRec, Dogovor.cOrg);
          }
    }
}

Panel paAttrDog
  Table AttrDog;

HandleEvent // Panel paAttrDog

cmPick:
  {
    if NOT EditDogPosEnabled(FALSE, TRUE)
      {
        Abort;
        Exit;
      }

    var cPers          : comp;
    var aFIO, aJobTitle: string;

    case CurField OF
    //************************
      #KatOrg.Name
    , #KatOrg.TipOrg
    , #KatOrg.UNN
    , #KatOrg.OKPO
    , #KatOrg.OKONH
    , #KatOrg.Addr:
        {
          var cOrg, cBank: comp;

          if ( RecordExists CalPlan where (( Dogovor.nRec == CalPlan.cDogovor )) = tsOk )
            if ( pNumber = 0 ) // своя организация
              {
                Message('Нельзя менять контрагента,'#13
                      + 'если по '
                      + if(Dogovor.cDogovor = 0, 'договору', 'соглашению')
                      + ' есть ПКП!', Warning);
                Exit;
              }
            else // если контрагент
              if ( Message('Изменение контрагента приведет'#13
                         + 'к изменению контрагента и у ПКП!'#13#13
                         + 'Продолжить?', Confirmation + YesNo) = cmNo )
                Exit;

          cOrg  := pOrg;
          cBank := pBank;

          if ( RunInterface('GetKatOr', cOrg, comp(0), FALSE, comp(0), cBank) <> cmCancel )
            {
              set pOrg  := cOrg;
              set pOrg1 := cOrg;
              set pBank := cBank;
              set pOrg2 := cOrg;

              if ( pNumber = 1 )
              //проверка на учет таможенных налогов
                if (
                    ( (Dogovor.Direct and 1) = 0 )
                     AND
                    ( KatOrg.NeedCustom = 1 )
                     AND
                    ( Dogovor.VhodNal <> 2 )
                   )  // договор импорта
                  if ( Message('По данному контрагенту учитываются таможенные налоги!'#13
                             + 'Установить цены без налогов?', Information + YesNo) = cmYes )
                    set Dogovor.VhodNal := 2;  //для импорта/экспорта налоги не входят

              RescanPanel(#AttrDog);
              SetModified(TRUE);
            }
        }
    //************************
      #KatOrg1.Name
    , #KatOrg1.TipOrg
    , #KatOrg1.UNN
    , #KatOrg1.OKPO
    , #KatOrg1.OKONH
    , #KatOrg1.Addr:
        {
          if ( Message('Изменение плательщика (получателя платежей) приведет'#13
                     + 'к изменению плательщика (получателя платежей) и у ПКП!'#13#13
                     + 'Продолжить?', Confirmation + YesNo) = cmNo )
            Exit;

          var cOrg, cBank: comp;

          cOrg  := pOrg1;
          cBank := pBank;

          if ( RunInterface('GetKatOr', cOrg, comp(0), FALSE, comp(0), cBank) <> cmCancel )
            {
              set pOrg1 := cOrg;
              set pBank := cBank;
              RescanPanel(#AttrDog);
              SetModified(TRUE);
            }
        }
    //************************
      #KatOrg2.Name
    , #KatOrg2.TipOrg
    , #KatOrg2.UNN
    , #KatOrg2.OKPO
    , #KatOrg2.OKONH
    , #KatOrg2.Addr:
        {
          if ( Message('Изменение исполнителя/получателя приведет'#13
                     + 'к изменению исполнителя/получателя и у ПКП!'#13#13
                     + 'Продолжить?', Confirmation + YesNo) = cmNo )
            Exit;

          var cOrg: comp;

          cOrg := pOrg2;

          if ( RunInterface('GetKatOr', cOrg, comp(0), FALSE, comp(0), comp(0)) <> cmCancel )
            {
              set pOrg2 := cOrg;

              RescanPanel(#AttrDog);
              SetModified(TRUE);
            }
        }
    //************************
      #KatBank.Name
    , #KatBank.Addr
    , #KatBank.MFO1
    , #KatBank.Schet1
    , #KatBank.MFO2
    , #KatBank.Schet2:
        {
          var cOrg, cBank: comp;

          cOrg  := pOrg1;
          cBank := pBank;

          if ( RunInterface('GetBank', cOrg, cBank) <> cmCancel )
            {
              set pOrg1 := cOrg;
              set pBank := cBank;

              RescanPanel(#AttrDog);
              SetModified(TRUE);
            }
        }
    //************************
      #KatPodrOtv.Name:
        if ( RunInterface('GetCO', word(cgiPick), comp(0), comp(0), AttrDog.cPodr) <> cmCancel )
         set AttrDog.cPodr := AttrDog.cPodr;
    //************************
      #AttrDog.Sign_My_Post
    , #AttrDog.Sign_My_Fio:
      {
        if pOrg = coGetTune('MyOrg')
        {
          if RunInterface(GetPers, AttrDog.cSign_My) <> cmCancel
           if GetFirst Persons where ((AttrDog.cSign_My == Persons.nRec)) = tsOk
            {
             set AttrDog.cSign_My     := Persons.nRec;
             set AttrDog.Sign_My_Fio  := Persons.FIO;

             if GetFirst Appointments
                  where ((Persons.AppointCur == Appointments.nRec)) = tsOk
              if GetFirst Catalogs
                   where ((Appointments.Post == Catalogs.nRec)) = tsOk
               set AttrDog.Sign_My_Post := Catalogs.Name;
              else
               set AttrDog.Sign_My_Post := '';
             else
               set AttrDog.Sign_My_Post := '';
            }
        }
        else
        {
          if (not Lic_ModuleMayBeUsed('CRM'))
            Message('Выбор возможен только для своей организации!', Information);
          else
          {
            if (not IsValid(#Org))
            {
              Message('Для контрагента ' + if (IsValid(#KatOrg), KatOrg.Name, '') +
                      ' нет соответствия в каталоге организаций модуля Клиент.', Warning);
              Exit;
            }

            if (RunInterface('intClPers', Org.Atl_NRec, cPers) = cmDefault)
            {
              if (GetFirst FastFirstRow crmPersons where((cPers == crmPersons.Atl_NRec)) = tsOk)
              {
                set AttrDog.Sign_My_FIO := Trim(crmPersons.SecondName) + ' ' +
                                           Trim(crmPersons.Name) + ' ' + Trim(crmPersons.SurName);

                if (IsValid(#VClass))
                  set AttrDog.Sign_My_Post := VClass.Name;
              }
            }
          }
        }
      }
    //************************
      #AttrDog.Otv_My_Post
    , #AttrDog.Otv_My_FIO:
        {
          if ( pOrg = coGetTune('MyOrg') )
            {
              if ( RunInterface('GetPers', AttrDog.cOtv_My) <> cmCancel )
                if ( GetFirst Persons where (( AttrDog.cOtv_My == Persons.nRec )) = tsOk )
                  {
                    set AttrDog.cOtv_My    := Persons.nRec;
                    set AttrDog.Otv_My_Fio := Persons.FIO;

                    if ( GetFirst Appointments where (( Persons.AppointCur == Appointments.nRec )) <> tsOk )
                      set AttrDog.Otv_My_Post := ''
                    else
                      if ( GetFirst Catalogs where (( Appointments.Post == Catalogs.nRec )) = tsOk )
                        set AttrDog.Otv_My_Post := Catalogs.Name
                      else
                        set AttrDog.Otv_My_Post := '';
                  }
            }
          else
            if ( NOT Lic_ModuleMayBeUsed('CRM') )
              Message('Выбор возможен только для своей организации!', Information)
            else
              {
                if ( NOT IsValid(#Org) )
                  {
                    Message('Для контрагента ' + if (IsValid(#KatOrg), KatOrg.Name, '')
                         + ' нет соответствия в каталоге организаций модуля Клиент', Warning);
                    Exit;
                  }

                if ( RunInterface('intClPers', Org.Atl_NRec, cPers) = cmDefault )
                  if (GetFirst FastFirstRow crmPersons where((cPers == crmPersons.Atl_NRec)) = tsOk)
                    {
                      set AttrDog.Otv_My_FIO := Trim(crmPersons.SecondName)
                                              + ' '
                                              + Trim(crmPersons.Name)
                                              + ' '
                                              + Trim(crmPersons.SurName);

                      if IsValid(#VClass)
                        set AttrDog.Otv_My_Post := VClass.Name;
                    }
              }
        }
    //************************
      #AttrDog.Cont_My_Addr:
        {
          if ( pOrg = coGetTune('MyOrg') )
            {
              if ( GetFirst Persons where (( AttrDog.cCont_My == Persons.nRec )) = tsOk )
                RunInterface('GetTelephone', AttrDog.cCont_My, AttrDog.Cont_My_Addr)
              else
                {
                  Message('Выберите контактное лицо', Information);
                  SelectField(#AttrDog.Cont_My_FIO);
                }
            }
          else
            if ( NOT Lic_ModuleMayBeUsed('CRM') )
              Message('Выбор возможен только для своей организации!', Information)
            else
              {
                if ( NOT IsValid(#Org) )
                  {
                    Message('Для контрагента ' + if (IsValid(#KatOrg), KatOrg.Name, '')
                          + ' нет соответствия в каталоге организаций модуля Клиент.', Warning);
                    Exit;
                  }

                if ( RunInterface('intClPers', Org.Atl_NRec, cPers) = cmDefault )
                  if (GetFirst FastFirstRow crmPersons where((cPers == crmPersons.Atl_NRec)) = tsOk)
                    {
                      set AttrDog.Cont_My_FIO := Trim(crmPersons.SecondName)
                                               + ' '
                                               + Trim(crmPersons.Name)
                                               + ' '
                                               + Trim(crmPersons.SurName);

                      set AttrDog.Cont_My_Addr := if(Trim(crmPersons.JobTeleph) <> ''
                                                   , 'тел.' + Trim(crmPersons.JobTeleph) + '; '
                                                   , '')
                                                + if(Trim(crmPersons.EMail) <> ''
                                                   , 'e-mail: ' + Trim(crmPersons.EMail)
                                                   , '');
                    }
              }
        }
    //************************
      #AttrDog.Cont_My_FIO:
        {
          if ( pOrg = coGetTune('MyOrg') )
            {
              if ( RunInterface('GetPers', AttrDog.cCont_My) <> cmCancel )
                if ( GetFirst Persons where (( AttrDog.cCont_My == Persons.nRec )) = tsOk )
                  {
                    set AttrDog.cCont_My    := Persons.nRec;
                    set AttrDog.Cont_My_Fio := Persons.FIO;
                  }
            }
          else
            if ( NOT Lic_ModuleMayBeUsed('CRM') )
              Message('Выбор возможен только для своей организации!', Information)
            else
              {
                if ( NOT IsValid(#Org) )
                  {
                    Message('Для контрагента ' + if (IsValid(#KatOrg), KatOrg.Name, '')
                          + ' нет соответствия в каталоге организаций модуля Клиент.', Warning);
                    Exit;
                  }

                if ( RunInterface('intClPers', Org.Atl_NRec, cPers) = cmDefault )
                  if (GetFirst FastFirstRow crmPersons where((cPers == crmPersons.Atl_NRec)) = tsOk)
                    {
                      set AttrDog.Cont_My_FIO := Trim(crmPersons.SecondName)
                                               + ' '
                                               + Trim(crmPersons.Name)
                                               + ' '
                                               + Trim(crmPersons.SurName);

                      set AttrDog.Cont_My_Addr := if(Trim(crmPersons.JobTeleph) <> ''
                                                   , 'тел.' + Trim(crmPersons.JobTeleph) + '; '
                                                   , '')
                                                + if(Trim(crmPersons.EMail) <> ''
                                                   , 'e-mail: ' + Trim(crmPersons.EMail)
                                                   , '');
                    }
              }
        }
    //************************
      #AttrDog.Sign_Post
    , #AttrDog.Sign_FIO
    , #AttrDog.Otv_Post
    , #AttrDog.Otv_FIO
    , #AttrDog.Cont_FIO
    , #AttrDog.Cont_Addr:
        {
          if ( NOT IsValid(#Org) )
            {
              Message('Для контрагента ' + if (IsValid(#KatOrg), KatOrg.Name, '')
                    + ' нет соответствия в каталоге организаций модуля Клиент.', Warning);
              Exit;
            }

          aFIO      := '';
          aJobTitle := '';

          if ( RunInterface('intClPers', Org.Atl_NRec, cPers) = cmDefault )
            if ( GetFirst FastFirstRow crmPersons where (( cPers == crmPersons.Atl_NRec )) = tsOk )
              {
                aFIO := Trim(crmPersons.SecondName)
                      + ' '
                      + Trim(crmPersons.Name)
                      + ' '
                      + Trim(crmPersons.SurName);

                if ( ( CurField <> #AttrDog.Cont_FIO ) AND ( CurField <> #AttrDog.Cont_Addr ) )
                  if IsValid(#VClass)
                    aJobTitle := VClass.Name;

                if ( ( CurField = #AttrDog.Sign_Post ) OR ( CurField = #AttrDog.Sign_FIO ) )
                  {
                    set AttrDog.Sign_FIO  := aFIO;
                    set AttrDog.Sign_Post := aJobTitle;
                  }

                if ( ( CurField = #AttrDog.Otv_Post ) OR ( CurField = #AttrDog.Otv_FIO ) )
                  {
                    set AttrDog.Otv_FIO  := aFIO;
                    set AttrDog.Otv_Post := aJobTitle;
                  }

                if ( ( CurField = #AttrDog.Cont_FIO ) OR ( CurField = #AttrDog.Cont_Addr ) )
                  {
                    set AttrDog.Cont_FIO  := aFIO;
                    set AttrDog.Cont_Addr := if(Trim(crmPersons.JobTeleph) <> ''
                                              , 'тел.' + Trim(crmPersons.JobTeleph) + '; '
                                              , '')
                                           + if(Trim(crmPersons.EMail) <> ''
                                              , 'e-mail: ' + Trim(crmPersons.EMail)
                                              , '');
                  }
              }
        }
    //************************
    #ifdef __NIOKR__
      #KuratPodr.Name:
        if ( RunInterface('GetAnyPodr', Dogovor.cCurPodr, word(4)) <> cmCancel)
          update current Dogovor;
    #end
    //************************
    #ifdef GAL8_1
      #DovFIO.Name:
        RunInterface('GetDOVFIO', AttrDog.cDovFio);
    //************************
      #DovMyFIO.Name:
        RunInterface('GetDOVFIO', AttrDog.cDovMyFio);
    #end //GAL8_1
    //************************
    end;
  }

cmDelOnProtect:
  {
    if NOT EditDogPosEnabled(FALSE, TRUE)
      {
        Abort;
        Exit;
      }

    case CurField OF
    //**************
      #KatOrg.Name:
        {
          if ( RecordExists CalPlan where (( Dogovor.nRec == CalPlan.cDogovor )) = tsOk )
            {
              Message('Нельзя удалять ссылку на контрагента, '#13+
                      'если по договору/соглашению есть ПКП!', Warning);
              Abort;
              Exit;
            }

          set pOrg  := 0;
          set pOrg1 := 0;
          set pBank := 0;
        }
    //**************
      #KatOrg1.Name:
        {
          set pOrg1 := 0;
          set pBank := 0;
        }
    //**************
      #KatOrg2.Name:
        set pOrg2 := 0;
    //**************
      #KatBank.Name:
        set pBank := 0;
    //**************
    #ifdef GAL8_1
      #DovFIO.Name:
        set AttrDog.cDovFio := 0;
    //**************
      #DovMyFIO.Name:
        set AttrDog.cDovMyFio := 0;
    #end //GAL8_1
    end;

    RescanPanel(#AttrDog);
    SetModified(TRUE);
  }

cmUpdateRecord:
  {
    UpDate_Dogovor;
    update current AttrDog;
  }

cmSetDefault:
  {
    if ( Dogovor.cDogovor = 0 )
      {
        ClearBuffer(#AttrDog);

        set AttrDog.cDogovor := Dogovor.nRec;
        set AttrDog.cPodr    := DefaultBaseCO;
      }
    else
      {
        if ( GetFirst AttrDog1 where (( Dogovor.cDogovor == AttrDog1.cDogovor )) = tsOk )
          {
            set AttrDog.cDogovor := Dogovor.nRec;

            AttrDog.cCont_My     := AttrDog1.cCont_My;
            AttrDog.Cont_Addr    := AttrDog1.Cont_Addr;
            AttrDog.Cont_FIO     := AttrDog1.Cont_FIO;
            AttrDog.Cont_My_Addr := AttrDog1.Cont_My_Addr;
            AttrDog.Cont_My_FIO  := AttrDog1.Cont_My_FIO;
            AttrDog.cOtv_My      := AttrDog1.cOtv_My;
            AttrDog.cSign_My     := AttrDog1.cSign_My;
            AttrDog.Otv_FIO      := AttrDog1.Otv_FIO;
            AttrDog.Otv_My_FIO   := AttrDog1.Otv_My_FIO;
            AttrDog.Otv_My_Post  := AttrDog1.Otv_My_Post;
            AttrDog.Otv_Post     := AttrDog1.Otv_Post;
            AttrDog.Sign_FIO     := AttrDog1.Sign_FIO;
            AttrDog.Sign_My_FIO  := AttrDog1.Sign_My_FIO;
            AttrDog.Sign_My_Osn  := AttrDog1.Sign_My_Osn;
            AttrDog.Sign_My_Post := AttrDog1.Sign_My_Post;
            AttrDog.Sign_Osn     := AttrDog1.Sign_Osn;
            AttrDog.Sign_Post    := AttrDog1.Sign_Post;
            AttrDog.Subject1     := AttrDog1.Subject1;
            AttrDog.Subject2     := AttrDog1.Subject2;
            AttrDog.Subject3     := AttrDog1.Subject3;
            AttrDog.cPodr        := AttrDog1.cPodr ;
          }
      }
  }

cmInsertRecord:
  {
    UpDate_Dogovor;
    insert current AttrDog;
  }

end; // HandleEvent Panel paAttrDog
end; // penel paAttrDog

HandleEvent // Interface

cmInit:
  {
    if ( GetFirst Dogovor <> tsOk )
      Message('Не найден договор!', Warning + CancelButton);

    SetInternalHelpLine(scAttrDogOrg , #KatOrg.UNN   , 'Код ' + sGetTune('KatOrg.FldView.UNN')   + ' организации');
    SetInternalHelpLine(scAttrDogPlat, #KatOrg2.UNN  , 'Код ' + sGetTune('KatOrg.FldView.UNN')   + ' организации');
    SetInternalHelpLine(scAttrDogBank, #KatOrg1.UNN  , 'Код ' + sGetTune('KatOrg.FldView.UNN')   + ' организации');
    SetInternalHelpLine(scAttrDogOrg , #KatOrg.OKONH , 'Код ' + sGetTune('KatOrg.FldView.OKONH') + ' организации');
    SetInternalHelpLine(scAttrDogPlat, #KatOrg2.OKONH, 'Код ' + sGetTune('KatOrg.FldView.OKONH') + ' организации');
    SetInternalHelpLine(scAttrDogBank, #KatOrg1.OKONH, 'Код ' + sGetTune('KatOrg.FldView.OKONH') + ' организации');
    SetInternalHelpLine(scAttrDogOrg , #KatOrg.OKPO  , 'Код ' + sGetTune('KatOrg.FldView.OKPO')  + ' организации');
    SetInternalHelpLine(scAttrDogPlat, #KatOrg2.OKPO , 'Код ' + sGetTune('KatOrg.FldView.OKPO')  + ' организации');
    SetInternalHelpLine(scAttrDogBank, #KatOrg1.OKPO , 'Код ' + sGetTune('KatOrg.FldView.OKPO')  + ' организации');

    if ( NOT boGetTune('Doc.PickOtvPodr') )
      SetFieldSelectable(#KatPodrOtv.Name, FALSE);

    if ( pNumber = 1 )
      {
        SetFormat(scAttrDogPeople1);

        // Данные о контактных лицах контрагента 2 можно загружать из модуля Клиент
        if Lic_ModuleMayBeUsed('CRM')
          {
#ifdef Atl52
            SetHelpAndStatusContext(scAttrDogPeople1,                -1, sci13Esc, 'DogRekvizitKontr');
            SetHelpAndStatusContext(scAttrDogPeople1, #AttrDog.Sign_Osn, sci1Esc , 'DogRekvizitKontr');
#else
            SetHelpAndStatusContext(scAttrDogPeople1,                -1, sci13Esc, hcDogRekvizitKontr);
            SetHelpAndStatusContext(scAttrDogPeople1, #AttrDog.Sign_Osn, sci1Esc , hcDogRekvizitKontr);
#end
          }
        else
#ifdef Atl52
          SetHelpAndStatusContext(scAttrDogPeople1, -1, sci1Esc, 'DogRekvizitKontr');
#else
          SetHelpAndStatusContext(scAttrDogPeople1, -1, sci1Esc, hcDogRekvizitKontr);
#end
      }

    if ( pNumber = 0 ) // редактируем свою организацию
      {
        pOrg := Dogovor.cMyOrg;

        if ( (Dogovor.Direct and 1) = 1 ) // сбыт
          {
            pOrg1 := Dogovor.cPol;
            pOrg2 := Dogovor.cGrOtp;
            pBank := Dogovor.cBankPol;
          }
        else
          {
            pOrg1 := Dogovor.cPlat;
            pOrg2 := Dogovor.cGrPol;
            pBank := Dogovor.cBankPlat;
          }
      }
    else
      {
        pOrg := Dogovor.cOrg;

        if ( (Dogovor.Direct and 1) = 1 ) // сбыт
          {
            pOrg1 := Dogovor.cPlat;
            pOrg2 := Dogovor.cGrPol;
            pBank := Dogovor.cBankPlat;
          }
        else
          {
            pOrg1 := Dogovor.cPol;
            pOrg2 := Dogovor.cGrOtp;
            pBank := Dogovor.cBankPol;
          }
      }

!    if (GetFirst AttrDog <> tsOk)
!      PutCommand(cmInsert);

    MyProtectAttrDog;
  }

cmDone:
  if ( NOT UpdateTable )
    Abort;

cmCancel:
  if ( NOT UpdateTable )
    Abort;

cmOpenSearch:
  {
    case CurField of
    //**************
      #KatBank.Name:
        QuickChoiceName := 'qcKatBankName';
    //**************
      #KatBank.MFO1:
        QuickChoiceName := 'qcKatBankMFO1';
    //**************
      #KatOrg.Name, #KatOrg1.Name, #KatOrg2.Name:
        {
          if NullVipRef(oChkLink)
            GetVipRef(oChkLink, 'KatOrg');

          if oChkLink.CheckLinks(coKatOrgDescr)
            QuickChoiceName := 'qcKatOrgName'
          else
            QuickChoiceName := 'qcKatOrgTreeName';
       }
    //**************
      #KatOrg.UNN, #KatOrg1.UNN, #KatOrg2.UNN:
        {
          if NullVipRef(oChkLink)
            GetVipRef(oChkLink, 'KatOrg');

          if oChkLink.CheckLinks(coKatOrgDescr)
            QuickChoiceName := 'qcKatOrgUNN'
          else
            QuickChoiceName := 'qcKatOrgTreeUNN';
        }
    //**************
    else
      {
        Abort;
        Exit;
      }
    end; // case CurField

    ProcessCommand(cmPick);
  }

#ifdef __NIOKR__
cmDelOnProtect:
  {
    if NOT EditDogPosEnabled(FALSE, TRUE)
      {
        Abort;
        Exit;
      }

    case CurField OF
    //**************
      #KuratPodr.Name:
        {
          set Dogovor.cCurPodr = 0;
          update current Dogovor;
        }
    //**************
    end;

    RereadRecord(#Dogovor);
  }
#end

end; // HandleEvent Interface

End.
