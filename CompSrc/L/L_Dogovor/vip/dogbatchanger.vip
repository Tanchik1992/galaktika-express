//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 5.712 - управление договорами
// Сервисная функция - Изменение банковских реквизитов в договорах
//********************************************************************************

#doc
Изменение банковских реквизитов в договорах
#end
Interface DogBatChanger 'Изменение банковских реквизитов в договорах' ( , hcisk_Izmen_Bank_Rekviz, ) EscClose, Cyan;

Table STRUCT DogList ""
(
  nRec     : comp   "",
  SortName : string ""
)
With Index
(
  DogList01 = nRec,
  DogList02 = SortName
);

Create view

Var
  dStart
, dFinish : date;

  Marker
, MrkInd  : longint;

  pOrg
, pBank1
, pBank2  : comp;

As select
  if (Dogovor.TipMoney = 1, '', KlVal.SimvolV)             ( FieldName = DogVal )
, if (SearchMarker(Marker, DogList.nRec, MrkInd), '√', '') ( FieldName = Picked )

, *

From
  DogList
, Dogovor
, Dogovor Dogovor2
, IerDog
, IerCalPl
, CalPlan
, KatOrg
, KatOrg  KatOrg1
, KatOrg  KatOrg2
, KlVal
, KatNotes
, KatVidD
, KatBank KatBank1
, KatBank KatBank2
, KatBank BankPol
, KatBank BankPlat

Where
((

    DogList.nRec      == Dogovor.nRec
and Dogovor.cVal      == KlVal.nRec
and Dogovor.cNote     == KatNotes.nRec
and Dogovor.cVidDog   == KatVidD.nRec
and Dogovor.cBankPol  == BankPol.nRec
and Dogovor.cBankPlat == BankPlat.nRec
and Dogovor.cMyOrg    == KatOrg1.nRec
and Dogovor.cOrg      == KatOrg2.nRec
and pOrg              == KatOrg.nRec
and pBank1            == KatBank1.nRec
and pBank2            == KatBank2.nRec

))

Bounds OnD1  = dStart  <<= Dogovor.dBeg     (NoIndex)
Bounds OnD2  = dFinish >>= Dogovor.dEnd     (NoIndex)
Bounds OnDog = comp(0)  == Dogovor.cDogovor (NoIndex)

Order by DogList.SortName;

Screen scrDogList(, hcisk_Izmen_Bank_Rekviz, sci13Esc)
  Show at(,,,11)
Bevel b1 { 1, 0, 73,  7, bsLowered, bsFrame};
Bevel b2 { 1, 7, 73, 12, bsLowered, bsFrame};
Fields
  dStart      ('Фильтр на период действия договоров') : ['DD/MM/YYYY'], noprotect;
  dFinish     ('Фильтр на период действия договоров') : ['DD/MM/YYYY'], noprotect;
  KatOrg.Name ('Фильтр по организации') : protect,
    { Font = { BackColor = if(pOrg = 0, ColorNeed, 0) } };
  KatBank1.Name ('Наименование банка',,) : protect,
    { Font = { BackColor = if(pBank1 = 0, ColorNeed, 0) } };
  sGetTune('KatOrg.FldView.MFO') : skip;
  KatBank1.MFO1   : skip;
  KatBank1.Schet1 : skip;
  KatBank2.Name ('Наименование банка',,) : protect,
    { Font = { BackColor = if(pBank2 = 0, ColorNeed, 0) } };
  sGetTune('KatOrg.FldView.MFO') : skip;
  KatBank2.MFO1   : skip;
  KatBank2.Schet1 : skip;
<<
   Фильтр на договоры:
            Период `с`.@@@@@@@@@@@`по`.@@@@@@@@@@@
        `Организация:`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Наименование банка:`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      .@@@@@@@@@@@@@@@@@@             Счет
             Основной .@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

   Изменить банк на:
 `Наименование банка:`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      .@@@@@@@@@@@@@@@@@@             Счет
             Основной .@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;

Browse brDogList(, hcisk_Izmen_Bank_Rekviz, sci1EscIns)
  Show at(,12,,)
  Table DogList;

Fields { Font = { Color = if(Picked = '√', ColorMark, 0) } };
  Picked         #3'√' : [1], skip;
  Dogovor.DesGr  #3'Группа'      ('Код группы пользователей')                 : [ 5], protect;
  Dogovor.Descr  #3'Дескр.'      ('Дескриптор(идентификатор) пользователя')                : [ 5], protect, centered;
  Dogovor.dDoc   #3'Дата закл.'  ('Дата заключения договора')            : [10, 'DD/MM/YYYY'], protect, centered;
  DateToStr(Dogovor.dBeg, 'DD/MM/YYYY-') + DateToStr(Dogovor.dEnd, 'DD/MM/YYYY')
                 #3'Период действия' ('Период действия договора')        : [22], protect, centered;
  Dogovor.NoDoc_Ext#3'Вх.номер' ('Входящий номер')                       : [ 8], protect;
  Dogovor.NoDoc  #3'Номер'       ('Внутренний номер')                    : [ 7], protect;
  KatNotes.sName #3'Статус'      ('Статус договора')                     : [ 8], protect, centered;
  KatVidD.Name   #3'Вид'         ('Вид документа')                       : [ 8], skip, centered;
  KatOrg1.Name   #3'Контрагент1'('Наименование контрагента1')            : [15], protect;
  KatOrg2.Name   #3'Контрагент2'('Наименование контрагента2')            : [15], protect;
  if (Dogovor.TipMoney = 1,'НДЕ', if (Dogovor.TipMoney = 2, 'Вал-НДЕ', 'Вал'))
                 #3'Тип'         ('Тип документа по отношению к валюте') : [ 7], skip, centered;
  DogVal         #3'Ден.ед.'     ('Валюта договора')                     : [ 6], skip, centered;
  Dogovor.Summa  #3'Сумма'       ('Общая (планируемая) сумма')           : [18, '\2p[|-]3666`666`666`666.88'], skip;
end;


//********************************************************************************
// Отбираем только договора, у которых совпадает банк с указанным в фильтре
//********************************************************************************
Function CheckDogovorFlt : boolean;
var pDogBank : comp;
{
  if ( pOrg = Dogovor.cMyOrg )
    {
      if ( (Dogovor.Direct and 1) = 1 )
        pDogBank := Dogovor.cBankPol
      else
        pDogBank := Dogovor.cBankPlat;
    }
  else
    if ( pOrg = Dogovor.cOrg )
      {
        if ( (Dogovor.Direct and 1) = 1 )
          pDogBank := Dogovor.cBankPlat
        else
          pDogBank := Dogovor.cBankPol;
      }
    else
      pDogBank := pBank1 + 1;

  CheckDogovorFlt := pBank1 = pDogBank;
}

Procedure RebuildDogList;
var Cnt : longint;
{
  ResetBounds(#Dogovor);

//********************************************************************************
// Отбираем только договора
//********************************************************************************
  AddBounds(tbOnDog);

//********************************************************************************
// Отбираем договора по указанному периоду в фильтре
//********************************************************************************
  if ( longint(dStart) <> 0 )
    AddBounds(tbOnD1);

  if ( longint(dFinish) <> 0 )
    AddBounds(tbOnD2);

  Cnt := 0;
  StartNewVisual(vtNumericVisual, vfScreenBottom, ''#3'Просмотр договоров ...'#13#3, 1);

  _loop Dogovor
    {
      NextVisual;
      if ( CheckDogovorFlt )
        inc(Cnt);
    }

  StopVisual('', 0);

  ClearMarker(Marker);

  delete all DogList;

  StartNewVisual(vtIndicatorVisual, vfTimer, ''#3'Формирование списка договоров ...'#13#3, Cnt);

  _loop Dogovor
    {
      NextVisual;
      if ( CheckDogovorFlt )
        insert DogList set DogList.nRec     := Dogovor.nRec,
                           DogList.SortName := DateToStr(Dogovor.dDoc, 'YYYY/MM/DD ') + Dogovor.NoDoc;
    }

  StopVisual('', 0);

  SubBounds(tbOnDog);

  if BoundActive(tbOnD2)
    SubBounds(tbOnD2);

  if BoundActive(tbOnD1)
    SubBounds(tbOnD1);

  SetBounds(#Dogovor);

  if ( GetFirst DogList <> tsOK )
    {
    }

  ReReadRecord(#DogList);
}

HandleEvent

cmInit:
  {
    var DateChanged : boolean;
    if (not ReadMyDSK(dStart,'DogBatChanger_dStart', DateChanged))
      dStart := Date(1, Month(Cur_Date), Year(Cur_Date));

    if (not ReadMyDSK(dFinish,'DogBatChanger_dFinish', DateChanged))
      dFinish := Date(Last_Day(Cur_Date), Month(Cur_Date), Year(Cur_Date));

    Marker := InitMarker('DogBatChanger',8,100,10);
  }

cmDone:
  {
    SaveMyDsk(dStart , 'DogBatChanger_dStart');
    SaveMyDsk(dFinish, 'DogBatChanger_dFinish');
    DoneMarker(Marker, '');
  }

cmMarkUnMark:
  {
    if SearchMarker(Marker, DogList.nRec, MrkInd)
      AtDeleteMarker(Marker, MrkInd);
    else
      InsertMarker(Marker, DogList.nRec);
#ifdef ATL51
    RedrawCurrentAndGo(GetCurrentFormat, true);
#else
    if ( GetNext DogList = tsOK )
      CallToNeighBours(#DogList, cmPosDown);
    RescanPanel(#DogList);
#end
  }

cmUnSelectAll:
  {
    ClearMarker(Marker);
    RescanPanel(#DogList);
  }

cmSelectAll:
  {
    ClearMarker(Marker);
    PushPos(#DogList);

    _loop DogList
      InsertMarker(Marker, DogList.nRec);

    PopPos(#DogList);
    RescanPanel(#DogList);
  }

cmPick:
  {
    case CurField of

      #KatOrg.Name:
        if ( RunInterface('GetKatOr', pOrg, comp(0), false, comp(0), pBank1) <> cmCancel )
          {
            delete all DogList;
            RereadRecord;
          }

      #KatBank1.Name:
        {
          if ( pOrg = 0 )
            if ( RunInterface('GetKatOr', pOrg, comp(0), false, comp(0), pBank1) <> cmDefault )
              Exit;

          if ( RunInterface('GetBank', pOrg, pBank1) <> cmCancel )
            {
              delete all DogList;
              RereadRecord;
            }
        }

      #KatBank2.Name:
        {
          if ( pOrg = 0 )
            if ( RunInterface('GetKatOr', pOrg, comp(0), false, comp(0), pBank1) <> cmDefault )
              Exit;

          RunInterface('GetBank', pOrg, pBank2);
        }

    end;
  }

cmDelOnProtect:
  {
    case CurField of

      #KatOrg.Name:
        {
          set pOrg   := 0;
          set pBank1 := 0;

          delete all DogList;
          RereadRecord;
        }

      #KatBank1.Name:
        {
          set pBank1 := 0;
          delete all DogList;
          RereadRecord;
        }

      #KatBank2.Name:
        set pBank2 := 0;

    end;
  }

cmValue1:
  {
    if ( pOrg = 0 )
      {
        message('Необходимо указать организацию!', Warning);
        SelectField(#KatOrg.Name);
        Exit;
      }

    if ( pBank1 = 0 )
      if ( message('Не задан банк из фильтра!'#13'Продолжить?', YesNo + Confirmation) <> cmYes )
        {
          SelectField(#KatBank1.Name);
          Exit;
        }

    RebuildDogList;
  }

cmValue2:
  {
    if ( pOrg = 0 )
      {
        message('Необходимо указать организацию!', Warning);
        SelectField(#KatOrg.Name);
        Exit;
      }

    if ( pBank1 = 0 )
      if ( message('Не задан банк из фильтра!'#13'Продолжить?', YesNo + Confirmation) <> cmYes )
        {
          SelectField(#KatBank1.Name);
          Exit;
        }

    if ( pBank2 = 0 )
      {
        message('Необходимо указать банк!', Warning);
        SelectField(#KatBank2.Name);
        Exit;
      }

    if ( pBank1 = pBank2 )
      {
        message('Необходимо указать банк, отличный от банка из фильтра!', Information);
        Exit;
      }

    if ( GetMarkerCount(Marker) = 0 )
      {
        message('Нет помеченных договоров !', Information);
        Exit;
      }

    if ( message('Обновить выбранные договоры ?', YesNo + CancelButton) = cmYes )
      {
        var PickRec : comp;
        var i, MarkerCount : longint;
        MarkerCount := GetMarkerCount(Marker);

        StartNewVisual(vtIndicatorVisual, vfScreenBottom, ''#3'Формирование списка договоров ...'#13#3, MarkerCount);

        for(i := 0; i < MarkerCount; inc(i))
          {
            if GetMarker(Marker, i, PickRec)
              _loop IerDog where (( PickRec == IerDog.cUpRec and IerDog.cRec == Dogovor2.nRec ))
                if ( IsValid(tnDogovor2) )
                  {
                    delete DogList where (( PickRec == DogList.nRec ));

//********************************************************************************
// Обновление банковских реквизитов в договоре и соглашениях
//********************************************************************************
                    if ( pOrg = Dogovor2.cMyOrg )
                      {
                        if ( (Dogovor2.Direct and 1) = 1 )
                          Dogovor2.cBankPol := pBank2
                        else
                          Dogovor2.cBankPlat := pBank2;
                      }
                    else
                      if ( pOrg = Dogovor2.cOrg )
                        {
                          if ( (Dogovor2.Direct and 1) = 1 )
                            Dogovor2.cBankPlat := pBank2
                          else
                            Dogovor2.cBankPol := pBank2;
                        }

                    update current Dogovor2;

//********************************************************************************
// Обновление банковских реквизитов в КП
//********************************************************************************
                   _loop IerCalPl where (( IerDog.cRec == IerCalPl.cDogovor and IerCalPl.cRec == CalPlan.nRec ))
                     {
                       if (CalPlan.cPlatBank = pBank1)
                         CalPlan.cPlatBank := pBank2;
                       if (CalPlan.cPolBank = pBank1)
                         CalPlan.cPolBank := pBank2;
                       update current CalPlan;

//********************************************************************************
// Обновление банковских реквизитов в схеме платежей финансового ПКП
//********************************************************************************
                       if ( CalPlan.DirectMC = 0 )
                         _loop PaySchem where (( IerCalPl.cRec == PaySchem.cCalPlan ))
                           {
                             if (PaySchem.cPlatBank = pBank1)
                               PaySchem.cPlatBank := pBank2;
                             if (PaySchem.cPolBank = pBank1)
                               PaySchem.cPolBank := pBank2;
                             update current PaySchem;
                           }
                     }
                  }
            NextVisual;
          }

        StopVisual('', 0);

        ClearMarker(Marker);

        message('Обновление завершено.', Information);
      }
    RereadRecord(#DogList);
  }

  cmHotKeys:
  {
    PutHotCommand(RunMenu('mnuDogBatChanger'));
  }

end;

end.


mnuDogBatChanger Menu
{
  - 'Перестроить список договоров',cmValue1,'Перестроить список договоров',,'',,sci1Esc;
---------------;
  - 'Обновить помеченные договоры',cmValue2,'Обновить помеченные договоры',,'',,sci1Esc;
}
