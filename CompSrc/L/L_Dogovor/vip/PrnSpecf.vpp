Procedure PrintSpecifPlain;
begin

   IF not isValid(#SpDocs) 
      if GetFirst SpDocs <> tsOk 
      {
        message('Нет записей в спецификации');
        exit;
      }

  frmDogSpecf.Write(Dogovor.NRec);
  frmDogSpecf.Write(Dogovor.NoDoc);
  frmDogSpecf.Write(DateToStr(Dogovor.dDoc,'DD/MM/YYYY'));
  frmDogSpecf.Write(KatOrg1.Name);

  if (Dogovor.cVal = comp(0)) 
     frmDogSpecf.Write(sGetTune('NDE.NameRubl'))
  else 
     frmDogSpecf.Write(KlVal.Dollar);

  frmDogSpecf.Write(ValDogovor);

  PushPos(#SpDocs);
  _loop SpDocs 
  {
    frmDogSpecf.Write(SpDocs.NRec);
    frmDogSpecf.Write(SpDocs.Code);
    case SpDocs.PrMC of 
#ifdef __TVEL__
    4,5,
#end
    1:
    {
      frmDogSpecf.Write(KatMC.Name);
    }
    2,3:
    {
      frmDogSpecf.Write(KatUSL.Name);
    }
    else
      frmDogSpecf.SkipFormat(1);
    end;

    frmDogSpecf.Write(KatOtpEd.Name);  
    frmDogSpecf.Write(SpDocs.Kol);
    frmDogSpecf.Write(SpDocs.Price);
    frmDogSpecf.Write(SpDocs.Summa);
  }

  frmDogSpecf.putevent(feBreak);
  PopPos(#SpDocs);

  if (not frmDogSpecf.Error)
    frmDogSpecf.ShowFile('')
  else frmDogSpecf.AbortForm;
end;


Procedure PrintSpecifXls;
var
  aFileName, tStr  : String;
  i, row           : Integer;

Begin

   IF not isValid(#SpDocs) 
      if GetFirst SpDocs <> tsOk 
      {
        message('Нет записей в спецификации');
        exit;
      }

   StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm, ''#3'Подготовка отчета к печати', 1);

   aFileName := GetStringParameter('Files','OutputFilesDirectory',0) + 'dogspecf.xls';
   DeleteFile(aFileName);

   if xlCreateExcel((aFileName), True)
     if not xlIsExcelValid
   {
     StopVisual('',0);
     Exit;
   }

   xlSetCellStringValue('К договору № '+ Dogovor.NoDoc + ' от ' +
                         DateToStr(Dogovor.dDoc,'DD/MM/YYYY')+' c '+
                         KatOrg1.Name,  1, 1, 1, 1);

   if (Dogovor.cVal = comp(0)) 
      tStr := sGetTune('NDE.NameRubl')
   else 
      tStr := KlVal.Dollar;

   xlSetCellStringValue('Валюта документа: ' + tStr +' ('+ValDogovor+')',  3, 1, 3, 1);

   xlSetCellStringValue('Спецификация', 4, 3, 4, 3);

   for (i:=1; i<=6; i:=i+1)
   {
     case i of
       1: tStr := '№ п/п';
       2: tStr := 'Наименование';
       3: tStr := 'Ед.изм.';
       4: tStr := 'Количество';
       5: tStr := 'Цена';
       6: tStr := 'Сумма';
     end;

     xlSetCellStringValue(tStr, 6, i, 6, i);
     xlSetCellStringValue(string(i), 7, i, 7, i);
   }

   row := 7;
   PushPos(#SpDocs);

   _loop SpDocs 
   if (NextVisual)
     {
       row := row +1;
 
       xlSetCellStringValue(SpDocs.Code  , row, 1, row, 1);
       xlSetCellStringValue(SpDogName    , row, 2, row, 2);
       xlSetCellStringValue(KatOtpEd.Name, row, 3, row, 3);
       xlSetCellNumberValue(SpDocs.Kol   , row, 4, row, 4);
       xlSetCellNumberValue(SpDocs.Price , row, 5, row, 6);
       xlSetCellNumberValue(SpDocs.Summa , row, 6, row, 6);
     }

   PopPos(#SpDocs);

   SetvisualTitle('Настройка формата Excel-файла');

   //рамки
   xlFrameCells(xlInsideV or xlInsideH, xlThin,   0, 0, 6, 1, row, 6);
   xlFrameCells(xlBorderL or xlBorderR or xlBorderT or xlBorderB, xlMedium, 0, 0, 6, 1, row, 6);
   xlFrameCells(xlBorderB, xlMedium, 0, 0, 7, 1, 7,   6);

   var j:integer;

   for (i:=1; i<=6; i:=i+1)
   {
     case i of
       1:   j := 6;
       2:   j := 25;
       3:   j := 10;
       4:   j := 12;
       5,6: j := 15
     end;

     xlSetColumnWidth (j, 1, i, row, i); 
     xlFrameCells (xlBorderR, xlMedium, 0, 0, 6, i, row, i);
   }

   //форматиромание
   xlSetFontSize (12, 1, 1, 4,   6);
   xlSetFontSize (10, 3, 1, 3,   6);
   xlSetFontSize (10, 6, 1, row, 6);
   xlSetFontStyle (xlBold,   4, 1, 7, 6);
   xlAlignCells   (xlCenter, 4, 1, 7, 6);
   xlWrapText (8, 2, row, 3); 

   xlMergeCells(1, 1, 2, 6);
   xlMergeCells(3, 1, 3, 6);
   xlMergeCells(4, 1, 4, 6);
   xlWrapText  (1, 1, 1, 1); 
   xlAlignCellsEx (xlGeneral, xlTop, 1, 1,   1, 6);
   xlAlignCellsEx (xlGeneral, xlTop, 8, 1, row, 6);
   xlSetNumberFormat('### ### ### ### ##0'+GetDecimalSeparator+'000', 8, 4, row, 4);
   xlSetNumberFormat('### ### ### ### ##0'+GetDecimalSeparator+'00', 8, 5, row, 6);

   xlKillExcel;
   StopVisual('',0);

end;
