/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,97 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Оперативный контур                                        ║
 ║ Версия        : 5.70                                                      ║
 ║ Назначение    : Перегон выбора из маркера в Pick для GetSomeDogovor       ║
 ║ Ответственный : Глушаков Дмитрий Сергеевич                                ║
 ║ Параметры     : есть                                                      ║
 ║    pVidDog    // вид документа - если задан будет установлен фильтр       ║
 ║    pStatus    // 0 - выбирать все, иначе битовая маска РАЗРЕШЕННЫХ        ║
 ║    pDirect,   // 0 - выбирать все;1-только на продажу;2-только на закупку ║
 ║    pAttach    // 0 - выбирать соглашения нельзя, 1 - можно                ║
 ║    OkOne      // TRUE - груповой выбор FALSE - только один (+возвращает)  ║
 ║    prmDogovor // возвращаемый указатель на договор                        ║
 ║    OneLevel   // показывать записи одного уровня (true), false - нет      ║
 ║    pOwn       // ссылка на владельца уровня (действует если OneLevel=true)║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#doc
Интерфейс сохранения выбора договоров договоров из маркера в Pick
#end
Interface PickDogovor 'Выбор договоров' DoAccept,EscClose,cyan;
  show at (4,2,76,23);
Create View
var
//--параметры
  pVidDog,
  pStatus,
  pDirect,
  pAttach    : word;
  OkOne      : boolean;
  prmDogovor : comp;
  OneLevel   : boolean;
  pOwn       : comp;
//--
  Marker         : longint; // указатель на маркер
  MarkerCount, i : longint; // счетчики записей в маркере
  pickrec        : comp;
As select
  Pick.wList
from
  Pick
where
  ((
    word(80) == Pick.wList
  ))
;
Parameters
  pVidDog,    // вид документа - если задан будет установлен фильтр
  pStatus,    // 0 - выбирать все документы, иначе битовая маска РАЗРЕШЕННЫХ статусов документов
  pDirect,    // 0 - выбирать все документы, 1 - только на продажу, 2 - только на закупку
  pAttach,    // 0 - выбирать соглашения нельзя, 1 - можно
  OkOne,      // TRUE - груповой выбор FALSE - только один/ ЕСЛИ возвращает TRUE-помечены все распоряжения!
  prmDogovor, // возвращаемый указатель на договор
  OneLevel,   // показывать записи одного уровня (true), false - нет
  pOwn        // ссылка на владельца уровня (действует если OneLevel = true)
  ;

HandleEvent
cmInit    :
{
var ret:word;
  Marker:=InitMarker('MDogovor',8,100,10);
  ClearMarker(Marker);
  _loop Pick
  {
    InsertMarker(Marker,Pick.cRec);
  }
  DoneMarker(Marker,'MDogovor');

  if RunInterface('GetSomeDogovor',
                  pVidDog,    // вид документа - если задан будет установлен фильтр
                  pStatus,    // 0 - выбирать все документы, иначе битовая маска РАЗРЕШЕННЫХ статусов документов
                  pDirect,    // 0 - выбирать все документы, 1 - только на продажу, 2 - только на закупку
                  pAttach,    // 0 - выбирать соглашения нельзя, 1 - можно
                  OkOne,      // TRUE - груповой выбор FALSE - только один/ ЕСЛИ возвращает TRUE-помечены все распоряжения!
                  prmDogovor, // возвращаемый указатель на договор
                  OneLevel,   // показывать записи одного уровня (true), false - нет
                  pOwn        // ссылка на владельца уровня (действует если OneLevel = true)
                  ) = cmCancel  // если там Cancel - то и здесь Cancel
    {
    Abort;
    Exit;
    }
  delete safe Pick;
  StartNewVisual(vtRotateVisual, vfTimer,
               ''#3'Формирование элементов выбора ...'#13#3, 1);
  Marker:=InitMarker('MDogovor',8,100,10);
  MarkerCount:=GetMarkerCount(Marker);
  FOR ( i:=0; i<MarkerCount; i:=i+1 )
    {
    if GetMarker(Marker,i,pickrec)
      {
      Pick.wList := 80;
      Pick.PickKol:=i;
      Pick.cRec:=pickrec;
      insert current Pick;
      }
    NextVisual;
    }
  DoneMarker(Marker,'MDogovor');
  StopVisual('',0);
  PutCommand(cmDefault);
}
end;  // HandleEvent
end.  // Interface