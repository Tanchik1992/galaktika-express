/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,99 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Модуль Договора                                           ║
 ║ Версия        : 5.70                                                      ║
 ║ Назначение    : Репозитарий возможных шаблонов Договоров                  ║
 ║ Ответственный : Скороход Дмитрий Владимирович                             ║
 ║ Параметры     : да                                                        ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#doc
Репозитарий шаблонов Договоров
#end
Interface MouldDoc 'Репозитарий шаблонов Договоров'(,hcDocMouldDoc_All,) EscClose, cyan;
  show at (2,3,78,26);
Create View vMouldDoc
var
  pMouldDoc, Node, Owner                        : comp;
  Loop, WayRendering                            : word;
  isTree                                        : boolean;
from
  MouldDoc, MouldAir
where
((
  MouldDoc.cLang     == Language.NRec and
  MouldDoc.cMouldAir == MouldAir.NRec
))

bounds DrawTree  as
  Node            == MouldDoc.cBack

;

Parameters WayRendering, pMouldDoc;
// WayRendering - представление интерфейса
// 0 - списковое отображение
// 1 - интерфейс выбора

form frmMouldDoc('MouldDoc.out','MouldDoc') with novisual;

Window Win1 'Редактирование репозитария документов' escclose;
  show at(2,3,78,26);
panel paMouldDoc03
  show at (,,,11);
Screen Scr00(, hcDocMouldDoc_All, sci178Esc);
Fields
  MouldDoc.Code('Код документа',,) : noProtect;
  MouldDoc.Name('Наименование документа',,): noProtect;
  MouldAir.Code('Код типа документа',,sci1378Esc) : Protect;
  MouldAir.Name('Наименование типа документа',,sci1378Esc):Protect;
  Language.Name('Язык документа документа',,sci1378Esc):Protect;
<<

 Код  .@@@@@@@@@@@@@  Наименование .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

                        Тип документа
 Код  .@@@@@@@@@@@@@  Наименование .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

 Язык документа  .@@@@@@@@@@@@@@@@@@@@@@

>>

End; // screen
HandleEvent
cmPick:
{
  case( CurField )of
    #MouldAir.Code, #MouldAir.Name:
      RunInterface('MouldAir', 1, MouldDoc.cMouldAir, '');
    #Language.Name:
      RunInterface('Language', word(1), MouldDoc.cLang, '');
  end;
  ReDrawPanel(#MouldDoc);
}
cmOpenSearch:
  PutCommand(cmPick);

end; // handleEvent
end; // panel

panel paEditTextField
  show at (,12,,);
Table MouldDoc;
  Text  MouldDoc.TextData;
end; // panel
end; // window

panel paMouldDoc01
  show at (,,45,11);
browse bbbb (,hcDocMouldDoc_All,sci1478EnEscA);
  table MouldDoc;
fields
  MouldDoc.Code 'Код'('Код документа'):[11],protect;
  MouldDoc.Name 'Наименование'('Наименование документа'):[30],protect;
end;

tree dddd (,hcDocMouldDoc_All,sci1478EnEscTree);
  table MouldDoc;
fields
  MouldDoc.Code'Код'('Код документа'):[11],protect;
  MouldDoc.Name'Наименование'('Наименование документа'):[30], protect;
end;

HandleEvent
cmTreeTop:
  Node := 0;
cmTreeUp:
  Node := MouldDoc.cBack;
cmTreeDown:
  Node := MouldDoc.NRec;
cmTreeNodeType:
  if( not isValid(#MouldDoc) )
    TreeSetNodeType(dddd, 2);
cmTreeNeedOwner:
  TreeJumpToRecord(dddd, MouldDoc.cBack);

end; // handleevent
end; // panel

panel paAutoDoc02
  show at (46,,,11);
Screen Scr02
Fields
  MouldAir.Code:skip;
  MouldAir.Name:skip;
  Language.Name:skip;
<<
    -- Тип  документа --
 Код .@@@@@@@@@@@@@@@@@@@@@@@
        Наименование
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@

    -- Язык документа --
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
End; // screen
end; // panel

panel paMouldDoc03
  show at (,12,,);
Table MouldDoc;
  Text  MouldDoc.TextData;
end; // panel


HandleEvent
cmInit:
{
  // подготовка и работа с деревьями
  if( not ReadMydsk(isTree, 'MouldDocIsTree', True) )
    isTree := true;

  if( isTree )
  {
    AddBounds(tbDrawTree);
    SetFormat(dddd);
  }
  else
    SetFormat(bbbb);
}

cmDone:
{
  SaveMyDsk(isTree, 'MouldDocIsTree');
}

cmAddNewRec:
{
  if( isTree )
    if( TreeNodeIsOpen(dddd) )
      Owner := MouldDoc.NRec;
    else
      Owner := MouldDoc.cBack;
  else
    Owner := 0;

  PutCommand(cmInsert);
  RunWindow(Win1);
  ReDrawPanel(#MouldDoc);
}

cmSetDefault:
{
  ClearBuffer(#MouldDoc);
  MouldDoc.cBack := Owner;
}

cmInsertRecord :
  insert current MouldDoc;
cmUpdateRecord :
  update current MouldDoc;
cmDeleteRecord :
  if( Message(''#3'Удалим?', Warning + YesNo) = cmYes )
  {
    var MouldDoc5NRec, MouldDoc5cBack : comp;
    MouldDoc5NRec := MouldDoc.NRec;
    MouldDoc5cBack := MouldDoc.cBack;

    PushPos(#MouldDoc);
    update MouldDoc where((MouldDoc5NRec == MouldDoc.cBack))
      set MouldDoc.cBack := MouldDoc5cBack;
    PopPos(#MouldDoc);

    delete current MouldDoc;
  }

cmDefault  :
{
  if( WayRendering = 0 )
  {
    RunWindow(Win1);
    ReDrawPanel(#MouldDoc);
  }
  else
  {
    pMouldDoc := MouldDoc.NRec;
    CloseInterface(cmOk);
  }
}

cmEdit:
{
  RunWindow(Win1);
  ReDrawPanel(#MouldDoc);
}

cmAccording:
{
  if( isTree )
  {
    SubBounds(tbDrawTree);
    SetFormat(bbbb);
  }
  else
  {
    if( Node != MouldDoc.cBack )
    {
      pMouldDoc := MouldDoc.NRec;
      PutCommand(cmValue1);
    }
    AddBounds(tbDrawTree);
    SetFormat(dddd);
  }
  isTree := not isTree;
}

cmValue1:
{

  if( (pMouldDoc = 0) or not isTree )
    exit;

  if( getfirst MouldDoc where((pMouldDoc == MouldDoc.NRec)) = tsOk ) {}

  Node := MouldDoc.cBack;
  TreeJumpToRecord(dddd, MouldDoc.NRec);
  ReScanPanel(#MouldDoc);
}

cmPrintDoc:
{
  var
    goAway, rS : boolean;
  goAway := false;
  PushPos(#MouldDoc);
  if( not isTree )
    PushBounds(tbDrawTree);

  StartNewVisual(vtRotateVisual, vfTimer + vfBreak + vfConfirm,
    ''#3'Печатаю...'#13#3, 0);
  // for( Loop := getfirst MouldDoc; Loop = tsOk; Loop := getnext MouldDoc )
  for( rS := TreeGetFirstEx(dddd); rS; rS := TreeGetNextEx(dddd) )
  {
    if( not nextVisual )
    {
      goAway := true;
      break;
    }

    frmMouldDoc.PutEventById(feDoLoop, FCMouldDoc_Loop1);
    frmMouldDoc.write(TreeLevel(dddd));
    frmMouldDoc.write(LPadCh('', '.', TreeLevel(dddd)) + MouldDoc.Code);
    frmMouldDoc.write(MouldDoc.Code);
    frmMouldDoc.write(MouldDoc.Name);
    frmMouldDoc.write(MouldAir.Code);
    frmMouldDoc.write(MouldAir.Name);
    frmMouldDoc.write(Language.Name);
  }
  StopVisual('', 0);
  if( not isTree )
    PopBounds(tbDrawTree);
  PopPos(#MouldDoc);
  if( (not frmMouldDoc.Error) and (not goAway) )
    frmMouldDoc.showFile('');
  else
    frmMouldDoc.abortForm;
}


end; //HandleEvent
end. // Interface
