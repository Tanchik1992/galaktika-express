!
! Общие функции для присоединенных форм Формы 11
!
.var
  SARR     : array[1..5] of string;  // хранилище для разобранных строк. Доступ через #NAIM_POK(i,j)
  RowCnt : integer;                // количество строк
  ClmnCnt: array[1..1] of integer; // количество колонок в строке
  N1     : integer;                // счетчик для цикла вывода подстрок в печатную форму
.endvar
! Наименования показателей для текущей строки, разбитые на
! строки (строки разбиваются на колонки)
! Нулевой элемент в строке массива есть полная строка текста не разбитая на колонки
! Количество колонок: 5
#ifndef __FORM11FN_FRM_DEFS__
#define __FORM11FN_FRM_DEFS__
#define NAIM_POK(i,j) SARR[(#i-1)*5+#j+1]
! Очистка наименований. Количество колонок: то же.
#declare CLEAR_NAIM_POK
{
  var k : integer;
  for (k := 1; k <= RowCnt*5; k := k + 1) SARR[k] := '';
}
#end
#define C_STR_BEG '{'
#define C_STR_END '}'
#define C_COL_SEP '#'
#endif//__FORM11FN_FRM_DEFS__
.procedure ParseParamName(pS : string);
! Разбираем строку следующего вида:
! {SS..S#..#SS..S}..{SS..S#..#SS..S}
! Получаем набор строк разбитых на колонки.
! Символы '{' и '}' обозначают начало и конец строки
! Символы '#' делят строку на данные по колонкам
begin
  #CLEAR_NAIM_POK

  var p1 : word;
  var p2 : word;
  // разбор наименования на отдельные строки
  RowCnt := 0;
  var S : string; S := pS;
  p1 := Pos(#C_STR_BEG,S)
  if p1 = 0                   // Если нет разделителей строки то все рассматриваем
  {                           // как одну строку.
    RowCnt := 1;
    #NAIM_POK(RowCnt,0) := S;
  }
  else
  {
    do
    {
      p1 := Pos(#C_STR_BEG,S)
      if p1 = 0
        break;
      else
      {
        p2 := Pos(#C_STR_END,S)
        if p2 = 0
          break;
        else
        {
          RowCnt := RowCnt + 1;
          #NAIM_POK(RowCnt,0) := SubStr(S,p1+1,p2-p1-1);
          S := SubStr(S,p2+1,length(S)-p2);
        }
      }
    }
    while (true)
  }

  // разбор строк на данные по колонкам
  var i : word;
  for (i := 1; i <= RowCnt; i := i + 1)
  {
    ClmnCnt[i] := 0;
    S := #NAIM_POK(i,0);
    do
    {
      ClmnCnt[i] := ClmnCnt[i] + 1;
      p2 := Pos(#C_COL_SEP,S);
      if p2 = 0
      {
        #NAIM_POK(i,ClmnCnt[i]) := S;
        break;
      }
      else
      {
        #NAIM_POK(i,ClmnCnt[i]) := SubStr(S,1,p2-1);
        S := SubStr(S,p2+1,length(S)-p2);
      }
    }
    while (true)
  }
end.
.begin
  RowCnt := 0;
!end. // Вынес в вызывающий файл